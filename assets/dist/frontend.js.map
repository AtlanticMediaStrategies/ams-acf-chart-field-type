{"version":3,"sources":["webpack:///frontend.js","webpack:///webpack/bootstrap 4830818004b75b82a4b3?55ff","webpack:///./assets/src/frontend.js","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?6f0e","webpack:///./~/es6-shim/es6-shim.js?2e72"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","_m","args","slice","templateId","a","b","c","this","concat","shift",3,"e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","Object","prototype","hasOwnProperty","fn",0,"inputs","querySelectorAll","Array","from","forEach","input","__WEBPACK_AMD_REQUIRE_ARRAY__","React","ReactDOM","lib","Frontend","getAttribute","name","data","JSON","parse","value","render","parentNode",55,"cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","process","nextTick","arguments","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","Error","cwd","chdir","dir","umask",470,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","root","factory","ArrayIterator","_apply","Function","bind","_call","isArray","keys","not","func","throwsError","valueOrFalseIfThrows","isCallableWithoutNew","arePropertyDescriptorsSupported","defineProperty","get","supportsDescriptors","functionsHaveNames","_forEach","_reduce","reduce","_filter","filter","_some","some","object","force","configurable","enumerable","writable","defineProperties","map","forceOverride","method","_toString","toString","isCallable","x","Value","getter","TypeError","proxy","originalObject","key","targetObject","originalDescriptor","getOwnPropertyDescriptor","set","redefine","property","newValue","descriptor","defineByDescriptor","preserveToString","target","source","create","properties","Prototype","supportsSubclassing","C","f","setPrototypeOf","Sub","Subclass","arg","o","constructor","getGlobal","self","globals","globalIsFinite","isFinite","_indexOf","String","indexOf","_arrayIndexOfApply","_concat","_strSlice","sort","_push","_pushApply","_shift","_max","Math","max","_min","min","_floor","floor","_abs","abs","_log","log","_sqrt","sqrt","_hasOwnProperty","Symbol","symbolSpecies","species","numberIsNaN","Number","isNaN","numberIsFinite","isStandardArguments","isLegacyArguments","callee","isArguments","Type","primitive","string","regex","symbol","overrideNative","replacement","original","hasSymbols","$iterator$","iterator","Set","Reflect","$String","ES","Call","F","V","IsCallable","RequireObjectCoercible","optMessage","TypeIsObject","ToObject","IsConstructor","ToInt32","ToNumber","ToUint32","ToInteger","number","ToLength","MAX_SAFE_INTEGER","SameValue","SameValueZero","IsIterable","GetIterator","itFn","GetMethod","it","IteratorComplete","iterResult","IteratorClose","completionIsThrow","returnMethod","innerResult","innerException","IteratorNext","result","next","IteratorStep","done","Construct","newTarget","isES6internal","construct","proto","obj","SpeciesConstructor","O","defaultConstructor","S","CreateHTML","tag","attribute","ToString","p1","escapedV","replace","p2","p3","IsRegExp","argument","isRegExp","match","defineWellKnownSymbol","sym","search","symbolSearch","originalSearch","RegExp","searchShim","regexp","searcher","symbolReplace","originalReplace","replaceValue","replaceShim","searchValue","replacer","split","symbolSplit","originalSplit","limit","splitShim","separator","splitter","symbolMatchExists","stringMatchIgnoresSymbolMatch","symbolMatch","originalMatch","matchShim","matcher","wrapConstructor","keysToSkip","getOwnPropertyNames","defaultSpeciesGetter","addDefaultSpecies","addIterator","impl","implementation","createDataProperty","createDataPropertyOrThrow","emulateES6construct","defaultNewTarget","defaultProto","slots","fromCodePoint","originalFromCodePoint","codePoints","StringShims","RangeError","fromCharCode","join","raw","callSite","cooked","rawString","literalsegments","nextKey","nextSeg","nextSub","stringElements","nextIndex",1,"stringRepeat","repeat","s","times","half","stringMaxLength","Infinity","StringPrototypeShims","thisStr","numTimes","startsWith","searchString","position","searchStr","start","endsWith","endPosition","pos","end","includes","codePointAt","first","charCodeAt","isEnd","second","startsWithRejectsRegex","startsWithHandlesInfinity","startsWithSupportsSymbolMatch","re","endsWithSupportsSymbolMatch","includesSupportsSymbolMatch","ws","trimRegexp","trimShim","nonWS","nonWSregex","isBadHexRegex","hasStringTrimBug","trim","StringIterator","_s","_i","substr","ArrayShims","items","mapFn","mapping","T","usingIterator","nextValue","arrayLike","of","A","k","kind","retval","arrayOfSupportsSubclassing","Foo","fooArr","ArrayPrototypeShims","copyWithin","relativeTarget","relativeStart","to","relativeEnd","finalItem","count","direction","fill","find","predicate","list","thisArg","findIndex","values","entries","unscopables","originalArrayPrototypeValues","searchElement","getPrototypeOf","arrayFromSwallowsNegativeLengths","arrayFromHandlesIterables","arr","arrayFromHandlesUndefinedMapFunction","origArrayFrom","int32sAsOne","pow","toLengthsCorrectly","reversed","originalForEach","callbackFn","originalMap","originalFilter","originalSome","every","originalEvery","originalReduce","reduceRight","originalReduceRight","lacksOctalSupport","lacksBinarySupport","trimsNonWhitespace","OrigNumber","binaryRegex","octalRegex","isBinary","test","isOctal","toPrimitive","valueOf","hasNonWS","isBadHex","NumberShim","primValue","parseInt","NaN","receiver","valueOfSucceeds","MAX_VALUE","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","maxSafeInteger","MIN_SAFE_INTEGER","EPSILON","parseFloat","isInteger","isSafeInteger","item","idx","isEnumerableOn","propertyIsEnumerable","ensureEnumerable","prop","sliceArgs","initial","desiredArgCount","assignTo","assignReducer","symbols","sourceKeys","getOwnPropertySymbols","ObjectShims","assign","is","assignHasPendingExceptions","preventExtensions","thrower","ES5ObjectShims","magic","checkArgs","polyfill","FAKENULL","gpo","spo","objectKeysAcceptsPrimitives","originalObjectKeys","objectKeysRejectsRegex","regexRejectingObjectKeys","regexKeys","objectGOPNAcceptsPrimitives","cachedWindowNames","originalObjectGetOwnPropertyNames","val","objectGOPDAcceptsPrimitives","originalObjectGetOwnPropertyDescriptor","seal","objectSealAcceptsPrimitives","originalObjectSeal","isSealed","objectIsSealedAcceptsPrimitives","originalObjectIsSealed","freeze","objectFreezeAcceptsPrimitives","originalObjectFreeze","isFrozen","objectIsFrozenAcceptsPrimitives","originalObjectIsFrozen","objectPreventExtensionsAcceptsPrimitives","originalObjectPreventExtensions","isExtensible","objectIsExtensibleAcceptsPrimitives","originalObjectIsExtensible","objectGetProtoAcceptsPrimitives","originalGetProto","hasFlags","desc","regExpFlagsGetter","ignoreCase","multiline","unicode","sticky","regExpSupportsFlagsWithRegex","regExpNeedsToSupportSymbolMatch","regexToStringIsGeneric","regexToStringSupportsGenericFlags","flags","origRegExpToString","R","pattern","flagsGetter","sourceDesc","legacySourceGetter","sourceGetter","OrigRegExp","RegExpShim","patternIsRegExp","calledWithNew","P","$input","regexGlobals","lastMatch","lastParen","leftContext","rightContext","inverseEpsilon","roundTiesToEven","n","BINARY_32_EPSILON","BINARY_32_MAX_VALUE","BINARY_32_MIN_VALUE","numberCLZ","clz","MathShims","acosh","E","asinh","atanh","cbrt","negate","exp","clz32","LOG2E","cosh","expm1","t","sum","hypot","y","largest","log2","log10","LOG10E","log1p","sign","sinh","tanh","trunc","imul","ah","al","bh","bl","fround","v","expm1OfTen","origMathRound","round","roundHandlesBoundaryConditions","smallestPositiveNumberWhereRoundBreaks","largestPositiveNumberWhereRoundBreaks","roundDoesNotIncreaseIntegers","num","ceil","origImul","PromiseShim","IsPromise","promise","_promise","makeZeroTimeout","PromiseCapability","capability","resolver","resolve","reject","postMessage","timeouts","messageName","setZeroTimeout","handleMessage","event","stopPropagation","addEventListener","Promise$prototype","Promise$prototype$then","makePromiseAsap","Promise","pr","task","then","enqueue","setImmediate","PROMISE_IDENTITY","PROMISE_THROWER","PROMISE_PENDING","PROMISE_FULFILLED","PROMISE_REJECTED","PROMISE_FULFILL_OFFSET","PROMISE_REJECT_OFFSET","PROMISE_CAPABILITY_OFFSET","PROMISE_FAKE_CAPABILITY","enqueuePromiseReactionJob","handler","promiseReactionJob","promiseCapability","handlerResult","fulfillPromise","reactionLength","fulfillReactionHandler0","reactionCapability0","rejectReactions0","state","rejectPromise","reason","rejectReactionHandler0","createResolvingFunctions","alreadyResolved","resolution","promiseResolveThenableJob","optimizedThen","thenable","resolvingFunctions","_promiseAllResolver","index","remaining","alreadyCalled","performPromiseAll","iteratorRecord","resultCapability","nextPromise","resolveElement","performPromiseRace","all","iterable","exception","ee","race","rejectFunc","resolveFunc","catch","onRejected","onFulfilled","returnValueIsIgnored","fulfillReactionHandler","rejectReactionHandler","accept","defer","chain","promiseSupportsSubclassing","promiseIgnoresNonFunctionThenCallbacks","promiseRequiresObjectContext","promiseResolveBroken","getsThenSynchronously","BadResolverPromise","executor","hasBadResolverPromise","origAll","origRace","origResolve","origReject","r","testOrder","preservesInsertionOrder","preservesNumericInsertionOrder","fastkey","emptyObject","addIterableToMap","MapConstructor","entry","iter","adder","nextItem","addIterableToSet","SetConstructor","add","collectionShims","Map","empty","MapEntry","prev","isRemoved","isMap","_es6map","requireMapSlot","MapIterator","_head","Map$prototype","MapShim","_storage","_size","fkey","has","delete","clear","context","Set$prototype","isSet","_es6set","requireSetSlot","SetShim","[[SetData]]","decodeKey","charAt","ensureMap","size","hasFKey","entireSet","mapAcceptsArguments","OrigMapNoArgs","testMap","mapUsesSameValueZero","mapSupportsChaining","origMapSet","origMapGet","origMapHas","testSet","setUsesSameValueZero","setSupportsChaining","origSetAdd","origSetHas","origSetDel","mapSupportsSubclassing","M","mapFailsToSupportSubclassing","mapRequiresNew","OrigMap","setSupportsSubclassing","setFailsToSupportSubclassing","setRequiresNew","OrigSet","mapIterationThrowsStopIterator","anonymousSetHas","throwUnlessTargetIsObject","ReflectShims","deleteProperty","ownKeys","callAndCatchException","internalGet","parent","internalSet","existingDesc","propertyKey","attributes","objectDotGetPrototypeOf","willCreateCircularPrototype","lastProto","defineOrOverrideReflectProperty","shim","acceptsPrimitives","originalReflectGetProto","basic","extensible","Date","dateToString","shimmedDateToString","stringHTMLshims","anchor","big","blink","bold","fixed","fontcolor","color","fontsize","italics","link","url","small","strike","sub","sup","shouldOverwrite","output","quotesCount","toLowerCase","JSONstringifiesSymbols","stringify","JSONstringifyAcceptsObjectSymbol","origStringify","replaceFn","wrappedReplacer","parsedValue"],"mappings":"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","file":"frontend.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tvar _m = moreModules[moduleId];\n/******/\n/******/ \t\t\t// Check if module is deduplicated\n/******/ \t\t\tswitch(typeof _m) {\n/******/ \t\t\tcase \"object\":\n/******/ \t\t\t\t// Module can be created from a template\n/******/ \t\t\t\tmodules[moduleId] = (function(_m) {\n/******/ \t\t\t\t\tvar args = _m.slice(1), templateId = _m[0];\n/******/ \t\t\t\t\treturn function (a,b,c) {\n/******/ \t\t\t\t\t\tmodules[templateId].apply(this, [a,b,c].concat(args));\n/******/ \t\t\t\t\t};\n/******/ \t\t\t\t}(_m));\n/******/ \t\t\t\tbreak;\n/******/ \t\t\tcase \"function\":\n/******/ \t\t\t\t// Normal module\n/******/ \t\t\t\tmodules[moduleId] = _m;\n/******/ \t\t\t\tbreak;\n/******/ \t\t\tdefault:\n/******/ \t\t\t\t// Module is a copy of another module\n/******/ \t\t\t\tmodules[moduleId] = modules[_m];\n/******/ \t\t\t\tbreak;\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t3:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({}[chunkId]||chunkId) + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/wp-content/plugins/ams-acf-chart-field-type/assets/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(470);\n\tvar inputs = document.querySelectorAll('.acf-chart-input');\n\t\n\tArray.from(inputs).forEach(function (input) {\n\t  __webpack_require__.e/* require */(1, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(1), __webpack_require__(72), __webpack_require__(971)]; (function (React, ReactDOM, lib) {\n\t    var Frontend = lib.default;\n\t    var id = input.getAttribute('data-id');\n\t    var name = input.getAttribute('data-name');\n\t    var data = JSON.parse(input.value);\n\t    ReactDOM.render(React.createElement(Frontend, {\n\t      id: id,\n\t      name: name,\n\t      data: data\n\t    }), input.parentNode);\n\t  }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});\n\t});\n\n/***/ },\n\n/***/ 55:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 470:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, process) { /*!\n\t  * https://github.com/paulmillr/es6-shim\n\t  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n\t  *   and contributors,  MIT License\n\t  * es6-shim: v0.35.0\n\t  * see https://github.com/paulmillr/es6-shim/blob/0.35.0/LICENSE\n\t  * Details and documentation:\n\t  * https://github.com/paulmillr/es6-shim/\n\t  */\n\t\n\t// UMD (Universal Module Definition)\n\t// see https://github.com/umdjs/umd/blob/master/returnExports.js\n\t(function (root, factory) {\n\t  /*global define, module, exports */\n\t  if (true) {\n\t    // AMD. Register as an anonymous module.\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // Node. Does not work with strict CommonJS, but\n\t    // only CommonJS-like environments that support module.exports,\n\t    // like Node.\n\t    module.exports = factory();\n\t  } else {\n\t    // Browser globals (root is window)\n\t    root.returnExports = factory();\n\t  }\n\t}(this, function () {\n\t  'use strict';\n\t\n\t  var _apply = Function.call.bind(Function.apply);\n\t  var _call = Function.call.bind(Function.call);\n\t  var isArray = Array.isArray;\n\t  var keys = Object.keys;\n\t\n\t  var not = function notThunker(func) {\n\t    return function notThunk() { return !_apply(func, this, arguments); };\n\t  };\n\t  var throwsError = function (func) {\n\t    try {\n\t      func();\n\t      return false;\n\t    } catch (e) {\n\t      return true;\n\t    }\n\t  };\n\t  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n\t    try {\n\t      return func();\n\t    } catch (e) {\n\t      return false;\n\t    }\n\t  };\n\t\n\t  var isCallableWithoutNew = not(throwsError);\n\t  var arePropertyDescriptorsSupported = function () {\n\t    // if Object.defineProperty exists but throws, it's IE 8\n\t    return !throwsError(function () { Object.defineProperty({}, 'x', { get: function () {} }); });\n\t  };\n\t  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n\t  var functionsHaveNames = (function foo() {}).name === 'foo';\n\t\n\t  var _forEach = Function.call.bind(Array.prototype.forEach);\n\t  var _reduce = Function.call.bind(Array.prototype.reduce);\n\t  var _filter = Function.call.bind(Array.prototype.filter);\n\t  var _some = Function.call.bind(Array.prototype.some);\n\t\n\t  var defineProperty = function (object, name, value, force) {\n\t    if (!force && name in object) { return; }\n\t    if (supportsDescriptors) {\n\t      Object.defineProperty(object, name, {\n\t        configurable: true,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: value\n\t      });\n\t    } else {\n\t      object[name] = value;\n\t    }\n\t  };\n\t\n\t  // Define configurable, writable and non-enumerable props\n\t  // if they don’t exist.\n\t  var defineProperties = function (object, map, forceOverride) {\n\t    _forEach(keys(map), function (name) {\n\t      var method = map[name];\n\t      defineProperty(object, name, method, !!forceOverride);\n\t    });\n\t  };\n\t\n\t  var _toString = Function.call.bind(Object.prototype.toString);\n\t  var isCallable =  false ? function IsCallableSlow(x) {\n\t    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\n\t    return typeof x === 'function' && _toString(x) === '[object Function]';\n\t  } : function IsCallableFast(x) { return typeof x === 'function'; };\n\t\n\t  var Value = {\n\t    getter: function (object, name, getter) {\n\t      if (!supportsDescriptors) {\n\t        throw new TypeError('getters require true ES5 support');\n\t      }\n\t      Object.defineProperty(object, name, {\n\t        configurable: true,\n\t        enumerable: false,\n\t        get: getter\n\t      });\n\t    },\n\t    proxy: function (originalObject, key, targetObject) {\n\t      if (!supportsDescriptors) {\n\t        throw new TypeError('getters require true ES5 support');\n\t      }\n\t      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n\t      Object.defineProperty(targetObject, key, {\n\t        configurable: originalDescriptor.configurable,\n\t        enumerable: originalDescriptor.enumerable,\n\t        get: function getKey() { return originalObject[key]; },\n\t        set: function setKey(value) { originalObject[key] = value; }\n\t      });\n\t    },\n\t    redefine: function (object, property, newValue) {\n\t      if (supportsDescriptors) {\n\t        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n\t        descriptor.value = newValue;\n\t        Object.defineProperty(object, property, descriptor);\n\t      } else {\n\t        object[property] = newValue;\n\t      }\n\t    },\n\t    defineByDescriptor: function (object, property, descriptor) {\n\t      if (supportsDescriptors) {\n\t        Object.defineProperty(object, property, descriptor);\n\t      } else if ('value' in descriptor) {\n\t        object[property] = descriptor.value;\n\t      }\n\t    },\n\t    preserveToString: function (target, source) {\n\t      if (source && isCallable(source.toString)) {\n\t        defineProperty(target, 'toString', source.toString.bind(source), true);\n\t      }\n\t    }\n\t  };\n\t\n\t  // Simple shim for Object.create on ES3 browsers\n\t  // (unlike real shim, no attempt to support `prototype === null`)\n\t  var create = Object.create || function (prototype, properties) {\n\t    var Prototype = function Prototype() {};\n\t    Prototype.prototype = prototype;\n\t    var object = new Prototype();\n\t    if (typeof properties !== 'undefined') {\n\t      keys(properties).forEach(function (key) {\n\t        Value.defineByDescriptor(object, key, properties[key]);\n\t      });\n\t    }\n\t    return object;\n\t  };\n\t\n\t  var supportsSubclassing = function (C, f) {\n\t    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n\t    return valueOrFalseIfThrows(function () {\n\t      var Sub = function Subclass(arg) {\n\t        var o = new C(arg);\n\t        Object.setPrototypeOf(o, Subclass.prototype);\n\t        return o;\n\t      };\n\t      Object.setPrototypeOf(Sub, C);\n\t      Sub.prototype = create(C.prototype, {\n\t        constructor: { value: Sub }\n\t      });\n\t      return f(Sub);\n\t    });\n\t  };\n\t\n\t  var getGlobal = function () {\n\t    /* global self, window, global */\n\t    // the only reliable means to get the global object is\n\t    // `Function('return this')()`\n\t    // However, this causes CSP violations in Chrome apps.\n\t    if (typeof self !== 'undefined') { return self; }\n\t    if (typeof window !== 'undefined') { return window; }\n\t    if (typeof global !== 'undefined') { return global; }\n\t    throw new Error('unable to locate global object');\n\t  };\n\t\n\t  var globals = getGlobal();\n\t  var globalIsFinite = globals.isFinite;\n\t  var _indexOf = Function.call.bind(String.prototype.indexOf);\n\t  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n\t  var _concat = Function.call.bind(Array.prototype.concat);\n\t  var _sort = Function.call.bind(Array.prototype.sort);\n\t  var _strSlice = Function.call.bind(String.prototype.slice);\n\t  var _push = Function.call.bind(Array.prototype.push);\n\t  var _pushApply = Function.apply.bind(Array.prototype.push);\n\t  var _shift = Function.call.bind(Array.prototype.shift);\n\t  var _max = Math.max;\n\t  var _min = Math.min;\n\t  var _floor = Math.floor;\n\t  var _abs = Math.abs;\n\t  var _log = Math.log;\n\t  var _sqrt = Math.sqrt;\n\t  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\t  var ArrayIterator; // make our implementation private\n\t  var noop = function () {};\n\t\n\t  var Symbol = globals.Symbol || {};\n\t  var symbolSpecies = Symbol.species || '@@species';\n\t\n\t  var numberIsNaN = Number.isNaN || function isNaN(value) {\n\t    // NaN !== NaN, but they are identical.\n\t    // NaNs are the only non-reflexive value, i.e., if x !== x,\n\t    // then x is NaN.\n\t    // isNaN is broken: it converts its argument to number, so\n\t    // isNaN('foo') => true\n\t    return value !== value;\n\t  };\n\t  var numberIsFinite = Number.isFinite || function isFinite(value) {\n\t    return typeof value === 'number' && globalIsFinite(value);\n\t  };\n\t\n\t  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n\t  // can be replaced with require('is-arguments') if we ever use a build process instead\n\t  var isStandardArguments = function isArguments(value) {\n\t    return _toString(value) === '[object Arguments]';\n\t  };\n\t  var isLegacyArguments = function isArguments(value) {\n\t    return value !== null &&\n\t      typeof value === 'object' &&\n\t      typeof value.length === 'number' &&\n\t      value.length >= 0 &&\n\t      _toString(value) !== '[object Array]' &&\n\t      _toString(value.callee) === '[object Function]';\n\t  };\n\t  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\t\n\t  var Type = {\n\t    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n\t    object: function (x) { return x !== null && typeof x === 'object'; },\n\t    string: function (x) { return _toString(x) === '[object String]'; },\n\t    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n\t    symbol: function (x) {\n\t      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n\t    }\n\t  };\n\t\n\t  var overrideNative = function overrideNative(object, property, replacement) {\n\t    var original = object[property];\n\t    defineProperty(object, property, replacement, true);\n\t    Value.preserveToString(object[property], original);\n\t  };\n\t\n\t  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\t\n\t  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n\t  // we're going to use an arbitrary _-prefixed name to make our shims\n\t  // work properly with each other, even though we don't have full Iterator\n\t  // support.  That is, `Array.from(map.keys())` will work, but we don't\n\t  // pretend to export a \"real\" Iterator interface.\n\t  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n\t  // Firefox ships a partial implementation using the name @@iterator.\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n\t  // So use that name if we detect it.\n\t  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n\t    $iterator$ = '@@iterator';\n\t  }\n\t\n\t  // Reflect\n\t  if (!globals.Reflect) {\n\t    defineProperty(globals, 'Reflect', {}, true);\n\t  }\n\t  var Reflect = globals.Reflect;\n\t\n\t  var $String = String;\n\t\n\t  var ES = {\n\t    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n\t    Call: function Call(F, V) {\n\t      var args = arguments.length > 2 ? arguments[2] : [];\n\t      if (!ES.IsCallable(F)) {\n\t        throw new TypeError(F + ' is not a function');\n\t      }\n\t      return _apply(F, V, args);\n\t    },\n\t\n\t    RequireObjectCoercible: function (x, optMessage) {\n\t      /* jshint eqnull:true */\n\t      if (x == null) {\n\t        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n\t      }\n\t      return x;\n\t    },\n\t\n\t    // This might miss the \"(non-standard exotic and does not implement\n\t    // [[Call]])\" case from\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n\t    // but we can't find any evidence these objects exist in practice.\n\t    // If we find some in the future, you could test `Object(x) === x`,\n\t    // which is reliable according to\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n\t    // but is not well optimized by runtimes and creates an object\n\t    // whenever it returns false, and thus is very slow.\n\t    TypeIsObject: function (x) {\n\t      if (x === void 0 || x === null || x === true || x === false) {\n\t        return false;\n\t      }\n\t      return typeof x === 'function' || typeof x === 'object';\n\t    },\n\t\n\t    ToObject: function (o, optMessage) {\n\t      return Object(ES.RequireObjectCoercible(o, optMessage));\n\t    },\n\t\n\t    IsCallable: isCallable,\n\t\n\t    IsConstructor: function (x) {\n\t      // We can't tell callables from constructors in ES5\n\t      return ES.IsCallable(x);\n\t    },\n\t\n\t    ToInt32: function (x) {\n\t      return ES.ToNumber(x) >> 0;\n\t    },\n\t\n\t    ToUint32: function (x) {\n\t      return ES.ToNumber(x) >>> 0;\n\t    },\n\t\n\t    ToNumber: function (value) {\n\t      if (_toString(value) === '[object Symbol]') {\n\t        throw new TypeError('Cannot convert a Symbol value to a number');\n\t      }\n\t      return +value;\n\t    },\n\t\n\t    ToInteger: function (value) {\n\t      var number = ES.ToNumber(value);\n\t      if (numberIsNaN(number)) { return 0; }\n\t      if (number === 0 || !numberIsFinite(number)) { return number; }\n\t      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n\t    },\n\t\n\t    ToLength: function (value) {\n\t      var len = ES.ToInteger(value);\n\t      if (len <= 0) { return 0; } // includes converting -0 to +0\n\t      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n\t      return len;\n\t    },\n\t\n\t    SameValue: function (a, b) {\n\t      if (a === b) {\n\t        // 0 === -0, but they are not identical.\n\t        if (a === 0) { return 1 / a === 1 / b; }\n\t        return true;\n\t      }\n\t      return numberIsNaN(a) && numberIsNaN(b);\n\t    },\n\t\n\t    SameValueZero: function (a, b) {\n\t      // same as SameValue except for SameValueZero(+0, -0) == true\n\t      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n\t    },\n\t\n\t    IsIterable: function (o) {\n\t      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\n\t    },\n\t\n\t    GetIterator: function (o) {\n\t      if (isArguments(o)) {\n\t        // special case support for `arguments`\n\t        return new ArrayIterator(o, 'value');\n\t      }\n\t      var itFn = ES.GetMethod(o, $iterator$);\n\t      if (!ES.IsCallable(itFn)) {\n\t        // Better diagnostics if itFn is null or undefined\n\t        throw new TypeError('value is not an iterable');\n\t      }\n\t      var it = ES.Call(itFn, o);\n\t      if (!ES.TypeIsObject(it)) {\n\t        throw new TypeError('bad iterator');\n\t      }\n\t      return it;\n\t    },\n\t\n\t    GetMethod: function (o, p) {\n\t      var func = ES.ToObject(o)[p];\n\t      if (func === void 0 || func === null) {\n\t        return void 0;\n\t      }\n\t      if (!ES.IsCallable(func)) {\n\t        throw new TypeError('Method not callable: ' + p);\n\t      }\n\t      return func;\n\t    },\n\t\n\t    IteratorComplete: function (iterResult) {\n\t      return !!(iterResult.done);\n\t    },\n\t\n\t    IteratorClose: function (iterator, completionIsThrow) {\n\t      var returnMethod = ES.GetMethod(iterator, 'return');\n\t      if (returnMethod === void 0) {\n\t        return;\n\t      }\n\t      var innerResult, innerException;\n\t      try {\n\t        innerResult = ES.Call(returnMethod, iterator);\n\t      } catch (e) {\n\t        innerException = e;\n\t      }\n\t      if (completionIsThrow) {\n\t        return;\n\t      }\n\t      if (innerException) {\n\t        throw innerException;\n\t      }\n\t      if (!ES.TypeIsObject(innerResult)) {\n\t        throw new TypeError(\"Iterator's return method returned a non-object.\");\n\t      }\n\t    },\n\t\n\t    IteratorNext: function (it) {\n\t      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n\t      if (!ES.TypeIsObject(result)) {\n\t        throw new TypeError('bad iterator');\n\t      }\n\t      return result;\n\t    },\n\t\n\t    IteratorStep: function (it) {\n\t      var result = ES.IteratorNext(it);\n\t      var done = ES.IteratorComplete(result);\n\t      return done ? false : result;\n\t    },\n\t\n\t    Construct: function (C, args, newTarget, isES6internal) {\n\t      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\t\n\t      if (!isES6internal && Reflect.construct) {\n\t        // Try to use Reflect.construct if available\n\t        return Reflect.construct(C, args, target);\n\t      }\n\t      // OK, we have to fake it.  This will only work if the\n\t      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n\t      // kind we can make in ES5 code anyway.\n\t\n\t      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n\t      var proto = target.prototype;\n\t      if (!ES.TypeIsObject(proto)) {\n\t        proto = Object.prototype;\n\t      }\n\t      var obj = create(proto);\n\t      // Call the constructor.\n\t      var result = ES.Call(C, obj, args);\n\t      return ES.TypeIsObject(result) ? result : obj;\n\t    },\n\t\n\t    SpeciesConstructor: function (O, defaultConstructor) {\n\t      var C = O.constructor;\n\t      if (C === void 0) {\n\t        return defaultConstructor;\n\t      }\n\t      if (!ES.TypeIsObject(C)) {\n\t        throw new TypeError('Bad constructor');\n\t      }\n\t      var S = C[symbolSpecies];\n\t      if (S === void 0 || S === null) {\n\t        return defaultConstructor;\n\t      }\n\t      if (!ES.IsConstructor(S)) {\n\t        throw new TypeError('Bad @@species');\n\t      }\n\t      return S;\n\t    },\n\t\n\t    CreateHTML: function (string, tag, attribute, value) {\n\t      var S = ES.ToString(string);\n\t      var p1 = '<' + tag;\n\t      if (attribute !== '') {\n\t        var V = ES.ToString(value);\n\t        var escapedV = V.replace(/\"/g, '&quot;');\n\t        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n\t      }\n\t      var p2 = p1 + '>';\n\t      var p3 = p2 + S;\n\t      return p3 + '</' + tag + '>';\n\t    },\n\t\n\t    IsRegExp: function IsRegExp(argument) {\n\t      if (!ES.TypeIsObject(argument)) {\n\t        return false;\n\t      }\n\t      var isRegExp = argument[Symbol.match];\n\t      if (typeof isRegExp !== 'undefined') {\n\t        return !!isRegExp;\n\t      }\n\t      return Type.regex(argument);\n\t    },\n\t\n\t    ToString: function ToString(string) {\n\t      return $String(string);\n\t    }\n\t  };\n\t\n\t  // Well-known Symbol shims\n\t  if (supportsDescriptors && hasSymbols) {\n\t    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n\t      if (Type.symbol(Symbol[name])) {\n\t        return Symbol[name];\n\t      }\n\t      var sym = Symbol['for']('Symbol.' + name);\n\t      Object.defineProperty(Symbol, name, {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: sym\n\t      });\n\t      return sym;\n\t    };\n\t    if (!Type.symbol(Symbol.search)) {\n\t      var symbolSearch = defineWellKnownSymbol('search');\n\t      var originalSearch = String.prototype.search;\n\t      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n\t        return ES.Call(originalSearch, string, [this]);\n\t      });\n\t      var searchShim = function search(regexp) {\n\t        var O = ES.RequireObjectCoercible(this);\n\t        if (regexp !== null && typeof regexp !== 'undefined') {\n\t          var searcher = ES.GetMethod(regexp, symbolSearch);\n\t          if (typeof searcher !== 'undefined') {\n\t            return ES.Call(searcher, regexp, [O]);\n\t          }\n\t        }\n\t        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n\t      };\n\t      overrideNative(String.prototype, 'search', searchShim);\n\t    }\n\t    if (!Type.symbol(Symbol.replace)) {\n\t      var symbolReplace = defineWellKnownSymbol('replace');\n\t      var originalReplace = String.prototype.replace;\n\t      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n\t        return ES.Call(originalReplace, string, [this, replaceValue]);\n\t      });\n\t      var replaceShim = function replace(searchValue, replaceValue) {\n\t        var O = ES.RequireObjectCoercible(this);\n\t        if (searchValue !== null && typeof searchValue !== 'undefined') {\n\t          var replacer = ES.GetMethod(searchValue, symbolReplace);\n\t          if (typeof replacer !== 'undefined') {\n\t            return ES.Call(replacer, searchValue, [O, replaceValue]);\n\t          }\n\t        }\n\t        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n\t      };\n\t      overrideNative(String.prototype, 'replace', replaceShim);\n\t    }\n\t    if (!Type.symbol(Symbol.split)) {\n\t      var symbolSplit = defineWellKnownSymbol('split');\n\t      var originalSplit = String.prototype.split;\n\t      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n\t        return ES.Call(originalSplit, string, [this, limit]);\n\t      });\n\t      var splitShim = function split(separator, limit) {\n\t        var O = ES.RequireObjectCoercible(this);\n\t        if (separator !== null && typeof separator !== 'undefined') {\n\t          var splitter = ES.GetMethod(separator, symbolSplit);\n\t          if (typeof splitter !== 'undefined') {\n\t            return ES.Call(splitter, separator, [O, limit]);\n\t          }\n\t        }\n\t        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n\t      };\n\t      overrideNative(String.prototype, 'split', splitShim);\n\t    }\n\t    var symbolMatchExists = Type.symbol(Symbol.match);\n\t    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n\t      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n\t      // Firefox 40 and below have Symbol.match but String#match works fine.\n\t      var o = {};\n\t      o[Symbol.match] = function () { return 42; };\n\t      return 'a'.match(o) !== 42;\n\t    }());\n\t    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n\t      var symbolMatch = defineWellKnownSymbol('match');\n\t\n\t      var originalMatch = String.prototype.match;\n\t      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n\t        return ES.Call(originalMatch, string, [this]);\n\t      });\n\t\n\t      var matchShim = function match(regexp) {\n\t        var O = ES.RequireObjectCoercible(this);\n\t        if (regexp !== null && typeof regexp !== 'undefined') {\n\t          var matcher = ES.GetMethod(regexp, symbolMatch);\n\t          if (typeof matcher !== 'undefined') {\n\t            return ES.Call(matcher, regexp, [O]);\n\t          }\n\t        }\n\t        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n\t      };\n\t      overrideNative(String.prototype, 'match', matchShim);\n\t    }\n\t  }\n\t\n\t  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n\t    Value.preserveToString(replacement, original);\n\t    if (Object.setPrototypeOf) {\n\t      // sets up proper prototype chain where possible\n\t      Object.setPrototypeOf(original, replacement);\n\t    }\n\t    if (supportsDescriptors) {\n\t      _forEach(Object.getOwnPropertyNames(original), function (key) {\n\t        if (key in noop || keysToSkip[key]) { return; }\n\t        Value.proxy(original, key, replacement);\n\t      });\n\t    } else {\n\t      _forEach(Object.keys(original), function (key) {\n\t        if (key in noop || keysToSkip[key]) { return; }\n\t        replacement[key] = original[key];\n\t      });\n\t    }\n\t    replacement.prototype = original.prototype;\n\t    Value.redefine(original.prototype, 'constructor', replacement);\n\t  };\n\t\n\t  var defaultSpeciesGetter = function () { return this; };\n\t  var addDefaultSpecies = function (C) {\n\t    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n\t      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n\t    }\n\t  };\n\t\n\t  var addIterator = function (prototype, impl) {\n\t    var implementation = impl || function iterator() { return this; };\n\t    defineProperty(prototype, $iterator$, implementation);\n\t    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n\t      // implementations are buggy when $iterator$ is a Symbol\n\t      prototype[$iterator$] = implementation;\n\t    }\n\t  };\n\t\n\t  var createDataProperty = function createDataProperty(object, name, value) {\n\t    if (supportsDescriptors) {\n\t      Object.defineProperty(object, name, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        writable: true,\n\t        value: value\n\t      });\n\t    } else {\n\t      object[name] = value;\n\t    }\n\t  };\n\t  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n\t    createDataProperty(object, name, value);\n\t    if (!ES.SameValue(object[name], value)) {\n\t      throw new TypeError('property is nonconfigurable');\n\t    }\n\t  };\n\t\n\t  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n\t    // This is an es5 approximation to es6 construct semantics.  in es6,\n\t    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n\t    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n\t    // to Foo and then returns Foo().\n\t\n\t    // Many ES6 object then have constructors of the form:\n\t    // 1. If NewTarget is undefined, throw a TypeError exception\n\t    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\t\n\t    // So we're going to emulate those first two steps.\n\t    if (!ES.TypeIsObject(o)) {\n\t      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n\t    }\n\t    var proto = defaultNewTarget.prototype;\n\t    if (!ES.TypeIsObject(proto)) {\n\t      proto = defaultProto;\n\t    }\n\t    var obj = create(proto);\n\t    for (var name in slots) {\n\t      if (_hasOwnProperty(slots, name)) {\n\t        var value = slots[name];\n\t        defineProperty(obj, name, value, true);\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Firefox 31 reports this function's length as 0\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n\t  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n\t    var originalFromCodePoint = String.fromCodePoint;\n\t    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) { return ES.Call(originalFromCodePoint, this, arguments); });\n\t  }\n\t\n\t  var StringShims = {\n\t    fromCodePoint: function fromCodePoint(codePoints) {\n\t      var result = [];\n\t      var next;\n\t      for (var i = 0, length = arguments.length; i < length; i++) {\n\t        next = Number(arguments[i]);\n\t        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n\t          throw new RangeError('Invalid code point ' + next);\n\t        }\n\t\n\t        if (next < 0x10000) {\n\t          _push(result, String.fromCharCode(next));\n\t        } else {\n\t          next -= 0x10000;\n\t          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n\t          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n\t        }\n\t      }\n\t      return result.join('');\n\t    },\n\t\n\t    raw: function raw(callSite) {\n\t      var cooked = ES.ToObject(callSite, 'bad callSite');\n\t      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\n\t      var len = rawString.length;\n\t      var literalsegments = ES.ToLength(len);\n\t      if (literalsegments <= 0) {\n\t        return '';\n\t      }\n\t\n\t      var stringElements = [];\n\t      var nextIndex = 0;\n\t      var nextKey, next, nextSeg, nextSub;\n\t      while (nextIndex < literalsegments) {\n\t        nextKey = ES.ToString(nextIndex);\n\t        nextSeg = ES.ToString(rawString[nextKey]);\n\t        _push(stringElements, nextSeg);\n\t        if (nextIndex + 1 >= literalsegments) {\n\t          break;\n\t        }\n\t        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n\t        nextSub = ES.ToString(next);\n\t        _push(stringElements, nextSub);\n\t        nextIndex += 1;\n\t      }\n\t      return stringElements.join('');\n\t    }\n\t  };\n\t  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n\t    // IE 11 TP has a broken String.raw implementation\n\t    overrideNative(String, 'raw', StringShims.raw);\n\t  }\n\t  defineProperties(String, StringShims);\n\t\n\t  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n\t  // Perf: http://jsperf.com/string-repeat2/2\n\t  var stringRepeat = function repeat(s, times) {\n\t    if (times < 1) { return ''; }\n\t    if (times % 2) { return repeat(s, times - 1) + s; }\n\t    var half = repeat(s, times / 2);\n\t    return half + half;\n\t  };\n\t  var stringMaxLength = Infinity;\n\t\n\t  var StringPrototypeShims = {\n\t    repeat: function repeat(times) {\n\t      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n\t      var numTimes = ES.ToInteger(times);\n\t      if (numTimes < 0 || numTimes >= stringMaxLength) {\n\t        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n\t      }\n\t      return stringRepeat(thisStr, numTimes);\n\t    },\n\t\n\t    startsWith: function startsWith(searchString) {\n\t      var S = ES.ToString(ES.RequireObjectCoercible(this));\n\t      if (ES.IsRegExp(searchString)) {\n\t        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n\t      }\n\t      var searchStr = ES.ToString(searchString);\n\t      var position;\n\t      if (arguments.length > 1) {\n\t        position = arguments[1];\n\t      }\n\t      var start = _max(ES.ToInteger(position), 0);\n\t      return _strSlice(S, start, start + searchStr.length) === searchStr;\n\t    },\n\t\n\t    endsWith: function endsWith(searchString) {\n\t      var S = ES.ToString(ES.RequireObjectCoercible(this));\n\t      if (ES.IsRegExp(searchString)) {\n\t        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n\t      }\n\t      var searchStr = ES.ToString(searchString);\n\t      var len = S.length;\n\t      var endPosition;\n\t      if (arguments.length > 1) {\n\t        endPosition = arguments[1];\n\t      }\n\t      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n\t      var end = _min(_max(pos, 0), len);\n\t      return _strSlice(S, end - searchStr.length, end) === searchStr;\n\t    },\n\t\n\t    includes: function includes(searchString) {\n\t      if (ES.IsRegExp(searchString)) {\n\t        throw new TypeError('\"includes\" does not accept a RegExp');\n\t      }\n\t      var searchStr = ES.ToString(searchString);\n\t      var position;\n\t      if (arguments.length > 1) {\n\t        position = arguments[1];\n\t      }\n\t      // Somehow this trick makes method 100% compat with the spec.\n\t      return _indexOf(this, searchStr, position) !== -1;\n\t    },\n\t\n\t    codePointAt: function codePointAt(pos) {\n\t      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n\t      var position = ES.ToInteger(pos);\n\t      var length = thisStr.length;\n\t      if (position >= 0 && position < length) {\n\t        var first = thisStr.charCodeAt(position);\n\t        var isEnd = (position + 1 === length);\n\t        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n\t        var second = thisStr.charCodeAt(position + 1);\n\t        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n\t        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n\t      }\n\t    }\n\t  };\n\t  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n\t    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n\t  }\n\t\n\t  if (String.prototype.startsWith && String.prototype.endsWith) {\n\t    var startsWithRejectsRegex = throwsError(function () {\n\t      /* throws if spec-compliant */\n\t      '/a/'.startsWith(/a/);\n\t    });\n\t    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n\t      return 'abc'.startsWith('a', Infinity) === false;\n\t    });\n\t    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n\t      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n\t      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n\t      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n\t    }\n\t  }\n\t  if (hasSymbols) {\n\t    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n\t      var re = /a/;\n\t      re[Symbol.match] = false;\n\t      return '/a/'.startsWith(re);\n\t    });\n\t    if (!startsWithSupportsSymbolMatch) {\n\t      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n\t    }\n\t    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n\t      var re = /a/;\n\t      re[Symbol.match] = false;\n\t      return '/a/'.endsWith(re);\n\t    });\n\t    if (!endsWithSupportsSymbolMatch) {\n\t      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n\t    }\n\t    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n\t      var re = /a/;\n\t      re[Symbol.match] = false;\n\t      return '/a/'.includes(re);\n\t    });\n\t    if (!includesSupportsSymbolMatch) {\n\t      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n\t    }\n\t  }\n\t\n\t  defineProperties(String.prototype, StringPrototypeShims);\n\t\n\t  // whitespace from: http://es5.github.io/#x15.5.4.20\n\t  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n\t  var ws = [\n\t    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n\t    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n\t    '\\u2029\\uFEFF'\n\t  ].join('');\n\t  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n\t  var trimShim = function trim() {\n\t    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n\t  };\n\t  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n\t  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n\t  var isBadHexRegex = /^[\\-+]0x[0-9a-f]+$/i;\n\t  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n\t  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\t\n\t  // see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator\n\t  var StringIterator = function (s) {\n\t    ES.RequireObjectCoercible(s);\n\t    this._s = ES.ToString(s);\n\t    this._i = 0;\n\t  };\n\t  StringIterator.prototype.next = function () {\n\t    var s = this._s, i = this._i;\n\t    if (typeof s === 'undefined' || i >= s.length) {\n\t      this._s = void 0;\n\t      return { value: void 0, done: true };\n\t    }\n\t    var first = s.charCodeAt(i), second, len;\n\t    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n\t      len = 1;\n\t    } else {\n\t      second = s.charCodeAt(i + 1);\n\t      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n\t    }\n\t    this._i = i + len;\n\t    return { value: s.substr(i, len), done: false };\n\t  };\n\t  addIterator(StringIterator.prototype);\n\t  addIterator(String.prototype, function () {\n\t    return new StringIterator(this);\n\t  });\n\t\n\t  var ArrayShims = {\n\t    from: function from(items) {\n\t      var C = this;\n\t      var mapFn;\n\t      if (arguments.length > 1) {\n\t        mapFn = arguments[1];\n\t      }\n\t      var mapping, T;\n\t      if (typeof mapFn === 'undefined') {\n\t        mapping = false;\n\t      } else {\n\t        if (!ES.IsCallable(mapFn)) {\n\t          throw new TypeError('Array.from: when provided, the second argument must be a function');\n\t        }\n\t        if (arguments.length > 2) {\n\t          T = arguments[2];\n\t        }\n\t        mapping = true;\n\t      }\n\t\n\t      // Note that that Arrays will use ArrayIterator:\n\t      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n\t      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\t\n\t      var length, result, i;\n\t      if (usingIterator) {\n\t        result = ES.IsConstructor(C) ? Object(new C()) : [];\n\t        var iterator = ES.GetIterator(items);\n\t        var next, nextValue;\n\t\n\t        i = 0;\n\t        while (true) {\n\t          next = ES.IteratorStep(iterator);\n\t          if (next === false) {\n\t            break;\n\t          }\n\t          nextValue = next.value;\n\t          try {\n\t            if (mapping) {\n\t              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n\t            }\n\t            result[i] = nextValue;\n\t          } catch (e) {\n\t            ES.IteratorClose(iterator, true);\n\t            throw e;\n\t          }\n\t          i += 1;\n\t        }\n\t        length = i;\n\t      } else {\n\t        var arrayLike = ES.ToObject(items);\n\t        length = ES.ToLength(arrayLike.length);\n\t        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n\t        var value;\n\t        for (i = 0; i < length; ++i) {\n\t          value = arrayLike[i];\n\t          if (mapping) {\n\t            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n\t          }\n\t          result[i] = value;\n\t        }\n\t      }\n\t\n\t      result.length = length;\n\t      return result;\n\t    },\n\t\n\t    of: function of() {\n\t      var len = arguments.length;\n\t      var C = this;\n\t      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n\t      for (var k = 0; k < len; ++k) {\n\t        createDataPropertyOrThrow(A, k, arguments[k]);\n\t      }\n\t      A.length = len;\n\t      return A;\n\t    }\n\t  };\n\t  defineProperties(Array, ArrayShims);\n\t  addDefaultSpecies(Array);\n\t\n\t  // Given an argument x, it will return an IteratorResult object,\n\t  // with value set to x and done to false.\n\t  // Given no arguments, it will return an iterator completion object.\n\t  var iteratorResult = function (x) {\n\t    return { value: x, done: arguments.length === 0 };\n\t  };\n\t\n\t  // Our ArrayIterator is private; see\n\t  // https://github.com/paulmillr/es6-shim/issues/252\n\t  ArrayIterator = function (array, kind) {\n\t      this.i = 0;\n\t      this.array = array;\n\t      this.kind = kind;\n\t  };\n\t\n\t  defineProperties(ArrayIterator.prototype, {\n\t    next: function () {\n\t      var i = this.i, array = this.array;\n\t      if (!(this instanceof ArrayIterator)) {\n\t        throw new TypeError('Not an ArrayIterator');\n\t      }\n\t      if (typeof array !== 'undefined') {\n\t        var len = ES.ToLength(array.length);\n\t        for (; i < len; i++) {\n\t          var kind = this.kind;\n\t          var retval;\n\t          if (kind === 'key') {\n\t            retval = i;\n\t          } else if (kind === 'value') {\n\t            retval = array[i];\n\t          } else if (kind === 'entry') {\n\t            retval = [i, array[i]];\n\t          }\n\t          this.i = i + 1;\n\t          return { value: retval, done: false };\n\t        }\n\t      }\n\t      this.array = void 0;\n\t      return { value: void 0, done: true };\n\t    }\n\t  });\n\t  addIterator(ArrayIterator.prototype);\n\t\n\t  var orderKeys = function orderKeys(a, b) {\n\t    var aNumeric = String(ES.ToInteger(a)) === a;\n\t    var bNumeric = String(ES.ToInteger(b)) === b;\n\t    if (aNumeric && bNumeric) {\n\t      return b - a;\n\t    } else if (aNumeric && !bNumeric) {\n\t      return -1;\n\t    } else if (!aNumeric && bNumeric) {\n\t      return 1;\n\t    } else {\n\t      return a.localeCompare(b);\n\t    }\n\t  };\n\t  var getAllKeys = function getAllKeys(object) {\n\t    var ownKeys = [];\n\t    var keys = [];\n\t\n\t    for (var key in object) {\n\t      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n\t    }\n\t    _sort(ownKeys, orderKeys);\n\t    _sort(keys, orderKeys);\n\t\n\t    return _concat(ownKeys, keys);\n\t  };\n\t\n\t  // note: this is positioned here because it depends on ArrayIterator\n\t  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n\t    // Detects a bug in Webkit nightly r181886\n\t    var Foo = function Foo(len) { this.length = len; };\n\t    Foo.prototype = [];\n\t    var fooArr = Array.of.apply(Foo, [1, 2]);\n\t    return fooArr instanceof Foo && fooArr.length === 2;\n\t  }());\n\t  if (!arrayOfSupportsSubclassing) {\n\t    overrideNative(Array, 'of', ArrayShims.of);\n\t  }\n\t\n\t  var ArrayPrototypeShims = {\n\t    copyWithin: function copyWithin(target, start) {\n\t      var o = ES.ToObject(this);\n\t      var len = ES.ToLength(o.length);\n\t      var relativeTarget = ES.ToInteger(target);\n\t      var relativeStart = ES.ToInteger(start);\n\t      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n\t      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n\t      var end;\n\t      if (arguments.length > 2) {\n\t        end = arguments[2];\n\t      }\n\t      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n\t      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n\t      var count = _min(finalItem - from, len - to);\n\t      var direction = 1;\n\t      if (from < to && to < (from + count)) {\n\t        direction = -1;\n\t        from += count - 1;\n\t        to += count - 1;\n\t      }\n\t      while (count > 0) {\n\t        if (from in o) {\n\t          o[to] = o[from];\n\t        } else {\n\t          delete o[to];\n\t        }\n\t        from += direction;\n\t        to += direction;\n\t        count -= 1;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    fill: function fill(value) {\n\t      var start;\n\t      if (arguments.length > 1) {\n\t        start = arguments[1];\n\t      }\n\t      var end;\n\t      if (arguments.length > 2) {\n\t        end = arguments[2];\n\t      }\n\t      var O = ES.ToObject(this);\n\t      var len = ES.ToLength(O.length);\n\t      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n\t      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\t\n\t      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n\t      var relativeEnd = end < 0 ? len + end : end;\n\t\n\t      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n\t        O[i] = value;\n\t      }\n\t      return O;\n\t    },\n\t\n\t    find: function find(predicate) {\n\t      var list = ES.ToObject(this);\n\t      var length = ES.ToLength(list.length);\n\t      if (!ES.IsCallable(predicate)) {\n\t        throw new TypeError('Array#find: predicate must be a function');\n\t      }\n\t      var thisArg = arguments.length > 1 ? arguments[1] : null;\n\t      for (var i = 0, value; i < length; i++) {\n\t        value = list[i];\n\t        if (thisArg) {\n\t          if (_call(predicate, thisArg, value, i, list)) { return value; }\n\t        } else if (predicate(value, i, list)) {\n\t          return value;\n\t        }\n\t      }\n\t    },\n\t\n\t    findIndex: function findIndex(predicate) {\n\t      var list = ES.ToObject(this);\n\t      var length = ES.ToLength(list.length);\n\t      if (!ES.IsCallable(predicate)) {\n\t        throw new TypeError('Array#findIndex: predicate must be a function');\n\t      }\n\t      var thisArg = arguments.length > 1 ? arguments[1] : null;\n\t      for (var i = 0; i < length; i++) {\n\t        if (thisArg) {\n\t          if (_call(predicate, thisArg, list[i], i, list)) { return i; }\n\t        } else if (predicate(list[i], i, list)) {\n\t          return i;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t\n\t    keys: function keys() {\n\t      return new ArrayIterator(this, 'key');\n\t    },\n\t\n\t    values: function values() {\n\t      return new ArrayIterator(this, 'value');\n\t    },\n\t\n\t    entries: function entries() {\n\t      return new ArrayIterator(this, 'entry');\n\t    }\n\t  };\n\t  // Safari 7.1 defines Array#keys and Array#entries natively,\n\t  // but the resulting ArrayIterator objects don't have a \"next\" method.\n\t  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n\t    delete Array.prototype.keys;\n\t  }\n\t  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n\t    delete Array.prototype.entries;\n\t  }\n\t\n\t  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n\t  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n\t    defineProperties(Array.prototype, {\n\t      values: Array.prototype[$iterator$]\n\t    });\n\t    if (Type.symbol(Symbol.unscopables)) {\n\t      Array.prototype[Symbol.unscopables].values = true;\n\t    }\n\t  }\n\t  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n\t  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n\t    var originalArrayPrototypeValues = Array.prototype.values;\n\t    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n\t    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n\t  }\n\t  defineProperties(Array.prototype, ArrayPrototypeShims);\n\t\n\t  if (1 / [true].indexOf(true, -0) < 0) {\n\t    // indexOf when given a position arg of -0 should return +0.\n\t    // https://github.com/tc39/ecma262/pull/316\n\t    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n\t      var value = _arrayIndexOfApply(this, arguments);\n\t      if (value === 0 && (1 / value) < 0) {\n\t        return 0;\n\t      }\n\t      return value;\n\t    }, true);\n\t  }\n\t\n\t  addIterator(Array.prototype, function () { return this.values(); });\n\t  // Chrome defines keys/values/entries on Array, but doesn't give us\n\t  // any way to identify its iterator.  So add our own shimmed field.\n\t  if (Object.getPrototypeOf) {\n\t    addIterator(Object.getPrototypeOf([].values()));\n\t  }\n\t\n\t  // note: this is positioned here because it relies on Array#entries\n\t  var arrayFromSwallowsNegativeLengths = (function () {\n\t    // Detects a Firefox bug in v32\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n\t    return valueOrFalseIfThrows(function () { return Array.from({ length: -1 }).length === 0; });\n\t  }());\n\t  var arrayFromHandlesIterables = (function () {\n\t    // Detects a bug in Webkit nightly r181886\n\t    var arr = Array.from([0].entries());\n\t    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n\t  }());\n\t  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n\t    overrideNative(Array, 'from', ArrayShims.from);\n\t  }\n\t  var arrayFromHandlesUndefinedMapFunction = (function () {\n\t    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n\t    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n\t    return valueOrFalseIfThrows(function () { return Array.from([0], void 0); });\n\t  }());\n\t  if (!arrayFromHandlesUndefinedMapFunction) {\n\t    var origArrayFrom = Array.from;\n\t    overrideNative(Array, 'from', function from(items) {\n\t      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n\t        return ES.Call(origArrayFrom, this, arguments);\n\t      } else {\n\t        return _call(origArrayFrom, this, items);\n\t      }\n\t    });\n\t  }\n\t\n\t  var int32sAsOne = -(Math.pow(2, 32) - 1);\n\t  var toLengthsCorrectly = function (method, reversed) {\n\t    var obj = { length: int32sAsOne };\n\t    obj[reversed ? ((obj.length >>> 0) - 1) : 0] = true;\n\t    return valueOrFalseIfThrows(function () {\n\t      _call(method, obj, function () {\n\t        // note: in nonconforming browsers, this will be called\n\t        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n\t        throw new RangeError('should not reach here');\n\t      }, []);\n\t      return true;\n\t    });\n\t  };\n\t  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n\t    var originalForEach = Array.prototype.forEach;\n\t    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n\t      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t  if (!toLengthsCorrectly(Array.prototype.map)) {\n\t    var originalMap = Array.prototype.map;\n\t    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n\t      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t  if (!toLengthsCorrectly(Array.prototype.filter)) {\n\t    var originalFilter = Array.prototype.filter;\n\t    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n\t      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t  if (!toLengthsCorrectly(Array.prototype.some)) {\n\t    var originalSome = Array.prototype.some;\n\t    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n\t      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t  if (!toLengthsCorrectly(Array.prototype.every)) {\n\t    var originalEvery = Array.prototype.every;\n\t    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n\t      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n\t    var originalReduce = Array.prototype.reduce;\n\t    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n\t      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n\t    var originalReduceRight = Array.prototype.reduceRight;\n\t    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n\t      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n\t    }, true);\n\t  }\n\t\n\t  var lacksOctalSupport = Number('0o10') !== 8;\n\t  var lacksBinarySupport = Number('0b10') !== 2;\n\t  var trimsNonWhitespace = _some(nonWS, function (c) {\n\t    return Number(c + 0 + c) === 0;\n\t  });\n\t  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n\t    var OrigNumber = Number;\n\t    var binaryRegex = /^0b[01]+$/i;\n\t    var octalRegex = /^0o[0-7]+$/i;\n\t    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n\t    var isBinary = binaryRegex.test.bind(binaryRegex);\n\t    var isOctal = octalRegex.test.bind(octalRegex);\n\t    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\n\t      var result;\n\t      if (typeof O.valueOf === 'function') {\n\t        result = O.valueOf();\n\t        if (Type.primitive(result)) {\n\t          return result;\n\t        }\n\t      }\n\t      if (typeof O.toString === 'function') {\n\t        result = O.toString();\n\t        if (Type.primitive(result)) {\n\t          return result;\n\t        }\n\t      }\n\t      throw new TypeError('No default value');\n\t    };\n\t    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n\t    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n\t    var NumberShim = (function () {\n\t      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n\t      var NumberShim = function Number(value) {\n\t        var primValue;\n\t        if (arguments.length > 0) {\n\t          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n\t        } else {\n\t          primValue = 0;\n\t        }\n\t        if (typeof primValue === 'string') {\n\t          primValue = ES.Call(trimShim, primValue);\n\t          if (isBinary(primValue)) {\n\t            primValue = parseInt(_strSlice(primValue, 2), 2);\n\t          } else if (isOctal(primValue)) {\n\t            primValue = parseInt(_strSlice(primValue, 2), 8);\n\t          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n\t            primValue = NaN;\n\t          }\n\t        }\n\t        var receiver = this;\n\t        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n\t          OrigNumber.prototype.valueOf.call(receiver);\n\t          return true;\n\t        });\n\t        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n\t          return new OrigNumber(primValue);\n\t        }\n\t        /* jshint newcap: false */\n\t        return OrigNumber(primValue);\n\t        /* jshint newcap: true */\n\t      };\n\t      return NumberShim;\n\t    }());\n\t    wrapConstructor(OrigNumber, NumberShim, {});\n\t    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n\t    defineProperties(NumberShim, {\n\t      NaN: OrigNumber.NaN,\n\t      MAX_VALUE: OrigNumber.MAX_VALUE,\n\t      MIN_VALUE: OrigNumber.MIN_VALUE,\n\t      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n\t      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n\t    });\n\t    /* globals Number: true */\n\t    /* eslint-disable no-undef */\n\t    /* jshint -W020 */\n\t    Number = NumberShim;\n\t    Value.redefine(globals, 'Number', NumberShim);\n\t    /* jshint +W020 */\n\t    /* eslint-enable no-undef */\n\t    /* globals Number: false */\n\t  }\n\t\n\t  var maxSafeInteger = Math.pow(2, 53) - 1;\n\t  defineProperties(Number, {\n\t    MAX_SAFE_INTEGER: maxSafeInteger,\n\t    MIN_SAFE_INTEGER: -maxSafeInteger,\n\t    EPSILON: 2.220446049250313e-16,\n\t\n\t    parseInt: globals.parseInt,\n\t    parseFloat: globals.parseFloat,\n\t\n\t    isFinite: numberIsFinite,\n\t\n\t    isInteger: function isInteger(value) {\n\t      return numberIsFinite(value) && ES.ToInteger(value) === value;\n\t    },\n\t\n\t    isSafeInteger: function isSafeInteger(value) {\n\t      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n\t    },\n\t\n\t    isNaN: numberIsNaN\n\t  });\n\t  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n\t  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\t\n\t  // Work around bugs in Array#find and Array#findIndex -- early\n\t  // implementations skipped holes in sparse arrays. (Note that the\n\t  // implementations of find/findIndex indirectly use shimmed\n\t  // methods of Number, so this test has to happen down here.)\n\t  /*jshint elision: true */\n\t  /* eslint-disable no-sparse-arrays */\n\t  if (![, 1].find(function (item, idx) { return idx === 0; })) {\n\t    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n\t  }\n\t  if ([, 1].findIndex(function (item, idx) { return idx === 0; }) !== 0) {\n\t    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n\t  }\n\t  /* eslint-enable no-sparse-arrays */\n\t  /*jshint elision: false */\n\t\n\t  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n\t  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n\t    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n\t      Object.defineProperty(obj, prop, { enumerable: false });\n\t    }\n\t  };\n\t  var sliceArgs = function sliceArgs() {\n\t    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n\t    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n\t    var initial = Number(this);\n\t    var len = arguments.length;\n\t    var desiredArgCount = len - initial;\n\t    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n\t    for (var i = initial; i < len; ++i) {\n\t      args[i - initial] = arguments[i];\n\t    }\n\t    return args;\n\t  };\n\t  var assignTo = function assignTo(source) {\n\t    return function assignToSource(target, key) {\n\t      target[key] = source[key];\n\t      return target;\n\t    };\n\t  };\n\t  var assignReducer = function (target, source) {\n\t    var sourceKeys = keys(Object(source));\n\t    var symbols;\n\t    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n\t      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n\t    }\n\t    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n\t  };\n\t\n\t  var ObjectShims = {\n\t    // 19.1.3.1\n\t    assign: function (target, source) {\n\t      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n\t      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n\t    },\n\t\n\t    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n\t    is: function is(a, b) {\n\t      return ES.SameValue(a, b);\n\t    }\n\t  };\n\t  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n\t    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t    // which is 72% slower than our shim, and Firefox 40's native implementation.\n\t    var thrower = Object.preventExtensions({ 1: 2 });\n\t    try {\n\t      Object.assign(thrower, 'xy');\n\t    } catch (e) {\n\t      return thrower[1] === 'y';\n\t    }\n\t  }());\n\t  if (assignHasPendingExceptions) {\n\t    overrideNative(Object, 'assign', ObjectShims.assign);\n\t  }\n\t  defineProperties(Object, ObjectShims);\n\t\n\t  if (supportsDescriptors) {\n\t    var ES5ObjectShims = {\n\t      // 19.1.3.9\n\t      // shim from https://gist.github.com/WebReflection/5593554\n\t      setPrototypeOf: (function (Object, magic) {\n\t        var set;\n\t\n\t        var checkArgs = function (O, proto) {\n\t          if (!ES.TypeIsObject(O)) {\n\t            throw new TypeError('cannot set prototype on a non-object');\n\t          }\n\t          if (!(proto === null || ES.TypeIsObject(proto))) {\n\t            throw new TypeError('can only set prototype to an object or null' + proto);\n\t          }\n\t        };\n\t\n\t        var setPrototypeOf = function (O, proto) {\n\t          checkArgs(O, proto);\n\t          _call(set, O, proto);\n\t          return O;\n\t        };\n\t\n\t        try {\n\t          // this works already in Firefox and Safari\n\t          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n\t          _call(set, {}, null);\n\t        } catch (e) {\n\t          if (Object.prototype !== {}[magic]) {\n\t            // IE < 11 cannot be shimmed\n\t            return;\n\t          }\n\t          // probably Chrome or some old Mobile stock browser\n\t          set = function (proto) {\n\t            this[magic] = proto;\n\t          };\n\t          // please note that this will **not** work\n\t          // in those browsers that do not inherit\n\t          // __proto__ by mistake from Object.prototype\n\t          // in these cases we should probably throw an error\n\t          // or at least be informed about the issue\n\t          setPrototypeOf.polyfill = setPrototypeOf(\n\t            setPrototypeOf({}, null),\n\t            Object.prototype\n\t          ) instanceof Object;\n\t          // setPrototypeOf.polyfill === true means it works as meant\n\t          // setPrototypeOf.polyfill === false means it's not 100% reliable\n\t          // setPrototypeOf.polyfill === undefined\n\t          // or\n\t          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n\t          // which means it works as expected\n\t          // we can even delete Object.prototype.__proto__;\n\t        }\n\t        return setPrototypeOf;\n\t      }(Object, '__proto__'))\n\t    };\n\t\n\t    defineProperties(Object, ES5ObjectShims);\n\t  }\n\t\n\t  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n\t  // but Object.create(null) does.\n\t  if (Object.setPrototypeOf && Object.getPrototypeOf &&\n\t      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\n\t      Object.getPrototypeOf(Object.create(null)) === null) {\n\t    (function () {\n\t      var FAKENULL = Object.create(null);\n\t      var gpo = Object.getPrototypeOf, spo = Object.setPrototypeOf;\n\t      Object.getPrototypeOf = function (o) {\n\t        var result = gpo(o);\n\t        return result === FAKENULL ? null : result;\n\t      };\n\t      Object.setPrototypeOf = function (o, p) {\n\t        var proto = p === null ? FAKENULL : p;\n\t        return spo(o, proto);\n\t      };\n\t      Object.setPrototypeOf.polyfill = false;\n\t    }());\n\t  }\n\t\n\t  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\n\t  if (!objectKeysAcceptsPrimitives) {\n\t    var originalObjectKeys = Object.keys;\n\t    overrideNative(Object, 'keys', function keys(value) {\n\t      return originalObjectKeys(ES.ToObject(value));\n\t    });\n\t    keys = Object.keys;\n\t  }\n\t  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\n\t  if (objectKeysRejectsRegex) {\n\t    var regexRejectingObjectKeys = Object.keys;\n\t    overrideNative(Object, 'keys', function keys(value) {\n\t      if (Type.regex(value)) {\n\t        var regexKeys = [];\n\t        for (var k in value) {\n\t          if (_hasOwnProperty(value, k)) {\n\t            _push(regexKeys, k);\n\t          }\n\t        }\n\t       return regexKeys;\n\t      }\n\t      return regexRejectingObjectKeys(value);\n\t    });\n\t    keys = Object.keys;\n\t  }\n\t\n\t  if (Object.getOwnPropertyNames) {\n\t    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\n\t    if (!objectGOPNAcceptsPrimitives) {\n\t      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n\t      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n\t      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n\t        var val = ES.ToObject(value);\n\t        if (_toString(val) === '[object Window]') {\n\t          try {\n\t            return originalObjectGetOwnPropertyNames(val);\n\t          } catch (e) {\n\t            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n\t            return _concat([], cachedWindowNames);\n\t          }\n\t        }\n\t        return originalObjectGetOwnPropertyNames(val);\n\t      });\n\t    }\n\t  }\n\t  if (Object.getOwnPropertyDescriptor) {\n\t    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\n\t    if (!objectGOPDAcceptsPrimitives) {\n\t      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\t      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n\t        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n\t      });\n\t    }\n\t  }\n\t  if (Object.seal) {\n\t    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\n\t    if (!objectSealAcceptsPrimitives) {\n\t      var originalObjectSeal = Object.seal;\n\t      overrideNative(Object, 'seal', function seal(value) {\n\t        if (!Type.object(value)) { return value; }\n\t        return originalObjectSeal(value);\n\t      });\n\t    }\n\t  }\n\t  if (Object.isSealed) {\n\t    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\n\t    if (!objectIsSealedAcceptsPrimitives) {\n\t      var originalObjectIsSealed = Object.isSealed;\n\t      overrideNative(Object, 'isSealed', function isSealed(value) {\n\t        if (!Type.object(value)) { return true; }\n\t        return originalObjectIsSealed(value);\n\t      });\n\t    }\n\t  }\n\t  if (Object.freeze) {\n\t    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\n\t    if (!objectFreezeAcceptsPrimitives) {\n\t      var originalObjectFreeze = Object.freeze;\n\t      overrideNative(Object, 'freeze', function freeze(value) {\n\t        if (!Type.object(value)) { return value; }\n\t        return originalObjectFreeze(value);\n\t      });\n\t    }\n\t  }\n\t  if (Object.isFrozen) {\n\t    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\n\t    if (!objectIsFrozenAcceptsPrimitives) {\n\t      var originalObjectIsFrozen = Object.isFrozen;\n\t      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n\t        if (!Type.object(value)) { return true; }\n\t        return originalObjectIsFrozen(value);\n\t      });\n\t    }\n\t  }\n\t  if (Object.preventExtensions) {\n\t    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\n\t    if (!objectPreventExtensionsAcceptsPrimitives) {\n\t      var originalObjectPreventExtensions = Object.preventExtensions;\n\t      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n\t        if (!Type.object(value)) { return value; }\n\t        return originalObjectPreventExtensions(value);\n\t      });\n\t    }\n\t  }\n\t  if (Object.isExtensible) {\n\t    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\n\t    if (!objectIsExtensibleAcceptsPrimitives) {\n\t      var originalObjectIsExtensible = Object.isExtensible;\n\t      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n\t        if (!Type.object(value)) { return false; }\n\t        return originalObjectIsExtensible(value);\n\t      });\n\t    }\n\t  }\n\t  if (Object.getPrototypeOf) {\n\t    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\n\t    if (!objectGetProtoAcceptsPrimitives) {\n\t      var originalGetProto = Object.getPrototypeOf;\n\t      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n\t        return originalGetProto(ES.ToObject(value));\n\t      });\n\t    }\n\t  }\n\t\n\t  var hasFlags = supportsDescriptors && (function () {\n\t    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n\t    return desc && ES.IsCallable(desc.get);\n\t  }());\n\t  if (supportsDescriptors && !hasFlags) {\n\t    var regExpFlagsGetter = function flags() {\n\t      if (!ES.TypeIsObject(this)) {\n\t        throw new TypeError('Method called on incompatible type: must be an object.');\n\t      }\n\t      var result = '';\n\t      if (this.global) {\n\t        result += 'g';\n\t      }\n\t      if (this.ignoreCase) {\n\t        result += 'i';\n\t      }\n\t      if (this.multiline) {\n\t        result += 'm';\n\t      }\n\t      if (this.unicode) {\n\t        result += 'u';\n\t      }\n\t      if (this.sticky) {\n\t        result += 'y';\n\t      }\n\t      return result;\n\t    };\n\t\n\t    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n\t  }\n\t\n\t  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n\t    return String(new RegExp(/a/g, 'i')) === '/a/i';\n\t  });\n\t  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n\t    // Edge 0.12 supports flags fully, but does not support Symbol.match\n\t    var regex = /./;\n\t    regex[Symbol.match] = false;\n\t    return RegExp(regex) === regex;\n\t  }());\n\t\n\t  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n\t    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n\t  });\n\t  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n\t    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n\t  });\n\t  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n\t    var origRegExpToString = RegExp.prototype.toString;\n\t    defineProperty(RegExp.prototype, 'toString', function toString() {\n\t      var R = ES.RequireObjectCoercible(this);\n\t      if (Type.regex(R)) {\n\t        return _call(origRegExpToString, R);\n\t      }\n\t      var pattern = $String(R.source);\n\t      var flags = $String(R.flags);\n\t      return '/' + pattern + '/' + flags;\n\t    }, true);\n\t    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n\t  }\n\t\n\t  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n\t    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n\t    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n\t    var legacySourceGetter = function () { return this.source; }; // prior to it being a getter, it's own + nonconfigurable\n\t    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\t\n\t    var OrigRegExp = RegExp;\n\t    var RegExpShim = (function () {\n\t      return function RegExp(pattern, flags) {\n\t        var patternIsRegExp = ES.IsRegExp(pattern);\n\t        var calledWithNew = this instanceof RegExp;\n\t        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n\t          return pattern;\n\t        }\n\t\n\t        var P = pattern;\n\t        var F = flags;\n\t        if (Type.regex(pattern)) {\n\t          P = ES.Call(sourceGetter, pattern);\n\t          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n\t          return new RegExp(P, F);\n\t        } else if (patternIsRegExp) {\n\t          P = pattern.source;\n\t          F = typeof flags === 'undefined' ? pattern.flags : flags;\n\t        }\n\t        return new OrigRegExp(pattern, flags);\n\t      };\n\t    }());\n\t    wrapConstructor(OrigRegExp, RegExpShim, {\n\t      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n\t    });\n\t    /* globals RegExp: true */\n\t    /* eslint-disable no-undef */\n\t    /* jshint -W020 */\n\t    RegExp = RegExpShim;\n\t    Value.redefine(globals, 'RegExp', RegExpShim);\n\t    /* jshint +W020 */\n\t    /* eslint-enable no-undef */\n\t    /* globals RegExp: false */\n\t  }\n\t\n\t  if (supportsDescriptors) {\n\t    var regexGlobals = {\n\t      input: '$_',\n\t      lastMatch: '$&',\n\t      lastParen: '$+',\n\t      leftContext: '$`',\n\t      rightContext: '$\\''\n\t    };\n\t    _forEach(keys(regexGlobals), function (prop) {\n\t      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n\t        Value.getter(RegExp, regexGlobals[prop], function get() {\n\t          return RegExp[prop];\n\t        });\n\t      }\n\t    });\n\t  }\n\t  addDefaultSpecies(RegExp);\n\t\n\t  var inverseEpsilon = 1 / Number.EPSILON;\n\t  var roundTiesToEven = function roundTiesToEven(n) {\n\t    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n\t    return (n + inverseEpsilon) - inverseEpsilon;\n\t  };\n\t  var BINARY_32_EPSILON = Math.pow(2, -23);\n\t  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n\t  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n\t  var numberCLZ = Number.prototype.clz;\n\t  delete Number.prototype.clz; // Safari 8 has Number#clz\n\t\n\t  var MathShims = {\n\t    acosh: function acosh(value) {\n\t      var x = Number(value);\n\t      if (Number.isNaN(x) || value < 1) { return NaN; }\n\t      if (x === 1) { return 0; }\n\t      if (x === Infinity) { return x; }\n\t      return _log(x / Math.E + _sqrt(x + 1) * _sqrt(x - 1) / Math.E) + 1;\n\t    },\n\t\n\t    asinh: function asinh(value) {\n\t      var x = Number(value);\n\t      if (x === 0 || !globalIsFinite(x)) {\n\t        return x;\n\t      }\n\t      return x < 0 ? -Math.asinh(-x) : _log(x + _sqrt(x * x + 1));\n\t    },\n\t\n\t    atanh: function atanh(value) {\n\t      var x = Number(value);\n\t      if (Number.isNaN(x) || x < -1 || x > 1) {\n\t        return NaN;\n\t      }\n\t      if (x === -1) { return -Infinity; }\n\t      if (x === 1) { return Infinity; }\n\t      if (x === 0) { return x; }\n\t      return 0.5 * _log((1 + x) / (1 - x));\n\t    },\n\t\n\t    cbrt: function cbrt(value) {\n\t      var x = Number(value);\n\t      if (x === 0) { return x; }\n\t      var negate = x < 0, result;\n\t      if (negate) { x = -x; }\n\t      if (x === Infinity) {\n\t        result = Infinity;\n\t      } else {\n\t        result = Math.exp(_log(x) / 3);\n\t        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n\t        result = (x / (result * result) + (2 * result)) / 3;\n\t      }\n\t      return negate ? -result : result;\n\t    },\n\t\n\t    clz32: function clz32(value) {\n\t      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n\t      var x = Number(value);\n\t      var number = ES.ToUint32(x);\n\t      if (number === 0) {\n\t        return 32;\n\t      }\n\t      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * Math.LOG2E);\n\t    },\n\t\n\t    cosh: function cosh(value) {\n\t      var x = Number(value);\n\t      if (x === 0) { return 1; } // +0 or -0\n\t      if (Number.isNaN(x)) { return NaN; }\n\t      if (!globalIsFinite(x)) { return Infinity; }\n\t      if (x < 0) { x = -x; }\n\t      if (x > 21) { return Math.exp(x) / 2; }\n\t      return (Math.exp(x) + Math.exp(-x)) / 2;\n\t    },\n\t\n\t    expm1: function expm1(value) {\n\t      var x = Number(value);\n\t      if (x === -Infinity) { return -1; }\n\t      if (!globalIsFinite(x) || x === 0) { return x; }\n\t      if (_abs(x) > 0.5) {\n\t        return Math.exp(x) - 1;\n\t      }\n\t      // A more precise approximation using Taylor series expansion\n\t      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n\t      var t = x;\n\t      var sum = 0;\n\t      var n = 1;\n\t      while (sum + t !== sum) {\n\t        sum += t;\n\t        n += 1;\n\t        t *= x / n;\n\t      }\n\t      return sum;\n\t    },\n\t\n\t    hypot: function hypot(x, y) {\n\t      var result = 0;\n\t      var largest = 0;\n\t      for (var i = 0; i < arguments.length; ++i) {\n\t        var value = _abs(Number(arguments[i]));\n\t        if (largest < value) {\n\t          result *= (largest / value) * (largest / value);\n\t          result += 1;\n\t          largest = value;\n\t        } else {\n\t          result += (value > 0 ? (value / largest) * (value / largest) : value);\n\t        }\n\t      }\n\t      return largest === Infinity ? Infinity : largest * _sqrt(result);\n\t    },\n\t\n\t    log2: function log2(value) {\n\t      return _log(value) * Math.LOG2E;\n\t    },\n\t\n\t    log10: function log10(value) {\n\t      return _log(value) * Math.LOG10E;\n\t    },\n\t\n\t    log1p: function log1p(value) {\n\t      var x = Number(value);\n\t      if (x < -1 || Number.isNaN(x)) { return NaN; }\n\t      if (x === 0 || x === Infinity) { return x; }\n\t      if (x === -1) { return -Infinity; }\n\t\n\t      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n\t    },\n\t\n\t    sign: function sign(value) {\n\t      var number = Number(value);\n\t      if (number === 0) { return number; }\n\t      if (Number.isNaN(number)) { return number; }\n\t      return number < 0 ? -1 : 1;\n\t    },\n\t\n\t    sinh: function sinh(value) {\n\t      var x = Number(value);\n\t      if (!globalIsFinite(x) || x === 0) { return x; }\n\t\n\t      if (_abs(x) < 1) {\n\t        return (Math.expm1(x) - Math.expm1(-x)) / 2;\n\t      }\n\t      return (Math.exp(x - 1) - Math.exp(-x - 1)) * Math.E / 2;\n\t    },\n\t\n\t    tanh: function tanh(value) {\n\t      var x = Number(value);\n\t      if (Number.isNaN(x) || x === 0) { return x; }\n\t      // can exit early at +-20 as JS loses precision for true value at this integer\n\t      if (x >= 20) { return 1; }\n\t      if (x <= -20) { return -1; }\n\t      var a = Math.expm1(x);\n\t      var b = Math.expm1(-x);\n\t      if (a === Infinity) { return 1; }\n\t      if (b === Infinity) { return -1; }\n\t      return (a - b) / (Math.exp(x) + Math.exp(-x));\n\t    },\n\t\n\t    trunc: function trunc(value) {\n\t      var x = Number(value);\n\t      return x < 0 ? -_floor(-x) : _floor(x);\n\t    },\n\t\n\t    imul: function imul(x, y) {\n\t      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\t      var a = ES.ToUint32(x);\n\t      var b = ES.ToUint32(y);\n\t      var ah = (a >>> 16) & 0xffff;\n\t      var al = a & 0xffff;\n\t      var bh = (b >>> 16) & 0xffff;\n\t      var bl = b & 0xffff;\n\t      // the shift by 0 fixes the sign on the high part\n\t      // the final |0 converts the unsigned value into a signed value\n\t      return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n\t    },\n\t\n\t    fround: function fround(x) {\n\t      var v = Number(x);\n\t      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n\t        return v;\n\t      }\n\t      var sign = Math.sign(v);\n\t      var abs = _abs(v);\n\t      if (abs < BINARY_32_MIN_VALUE) {\n\t        return sign * roundTiesToEven(abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n\t      }\n\t      // Veltkamp's splitting (?)\n\t      var a = (1 + BINARY_32_EPSILON / Number.EPSILON) * abs;\n\t      var result = a - (a - abs);\n\t      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n\t        return sign * Infinity;\n\t      }\n\t      return sign * result;\n\t    }\n\t  };\n\t  defineProperties(Math, MathShims);\n\t  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n\t  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n\t  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n\t  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n\t  // Chrome 40 has an imprecise Math.tanh with very small numbers\n\t  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n\t  // Chrome 40 loses Math.acosh precision with high numbers\n\t  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n\t  // Firefox 38 on Windows\n\t  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - Math.cbrt(1e-300) / 1e-100) / Number.EPSILON > 8);\n\t  // node 0.11 has an imprecise Math.sinh with very small numbers\n\t  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n\t  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n\t  var expm1OfTen = Math.expm1(10);\n\t  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n\t\n\t  var origMathRound = Math.round;\n\t  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n\t  var roundHandlesBoundaryConditions = Math.round(0.5 - Number.EPSILON / 4) === 0 && Math.round(-0.5 + Number.EPSILON / 3.99) === 1;\n\t\n\t  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n\t  // This behavior should be governed by \"round to nearest, ties to even mode\"\n\t  // see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-number-type\n\t  // These are the boundary cases where it breaks.\n\t  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n\t  var largestPositiveNumberWhereRoundBreaks = 2 * inverseEpsilon - 1;\n\t  var roundDoesNotIncreaseIntegers = [smallestPositiveNumberWhereRoundBreaks, largestPositiveNumberWhereRoundBreaks].every(function (num) {\n\t    return Math.round(num) === num;\n\t  });\n\t  defineProperty(Math, 'round', function round(x) {\n\t    var floor = _floor(x);\n\t    var ceil = floor === -1 ? -0 : floor + 1;\n\t    return x - floor < 0.5 ? floor : ceil;\n\t  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n\t  Value.preserveToString(Math.round, origMathRound);\n\t\n\t  var origImul = Math.imul;\n\t  if (Math.imul(0xffffffff, 5) !== -5) {\n\t    // Safari 6.1, at least, reports \"0\" for this value\n\t    Math.imul = MathShims.imul;\n\t    Value.preserveToString(Math.imul, origImul);\n\t  }\n\t  if (Math.imul.length !== 2) {\n\t    // Safari 8.0.4 has a length of 1\n\t    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n\t    overrideNative(Math, 'imul', function imul(x, y) {\n\t      return ES.Call(origImul, Math, arguments);\n\t    });\n\t  }\n\t\n\t  // Promises\n\t  // Simplest possible implementation; use a 3rd-party library if you\n\t  // want the best possible speed and/or long stack traces.\n\t  var PromiseShim = (function () {\n\t    var setTimeout = globals.setTimeout;\n\t    // some environments don't have setTimeout - no way to shim here.\n\t    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\t\n\t    ES.IsPromise = function (promise) {\n\t      if (!ES.TypeIsObject(promise)) {\n\t        return false;\n\t      }\n\t      if (typeof promise._promise === 'undefined') {\n\t        return false; // uninitialized, or missing our hidden field.\n\t      }\n\t      return true;\n\t    };\n\t\n\t    // \"PromiseCapability\" in the spec is what most promise implementations\n\t    // call a \"deferred\".\n\t    var PromiseCapability = function (C) {\n\t      if (!ES.IsConstructor(C)) {\n\t        throw new TypeError('Bad promise constructor');\n\t      }\n\t      var capability = this;\n\t      var resolver = function (resolve, reject) {\n\t        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n\t          throw new TypeError('Bad Promise implementation!');\n\t        }\n\t        capability.resolve = resolve;\n\t        capability.reject = reject;\n\t      };\n\t      // Initialize fields to inform optimizers about the object shape.\n\t      capability.resolve = void 0;\n\t      capability.reject = void 0;\n\t      capability.promise = new C(resolver);\n\t      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n\t        throw new TypeError('Bad promise constructor');\n\t      }\n\t    };\n\t\n\t    // find an appropriate setImmediate-alike\n\t    var makeZeroTimeout;\n\t    /*global window */\n\t    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n\t      makeZeroTimeout = function () {\n\t        // from http://dbaron.org/log/20100309-faster-timeouts\n\t        var timeouts = [];\n\t        var messageName = 'zero-timeout-message';\n\t        var setZeroTimeout = function (fn) {\n\t          _push(timeouts, fn);\n\t          window.postMessage(messageName, '*');\n\t        };\n\t        var handleMessage = function (event) {\n\t          if (event.source === window && event.data === messageName) {\n\t            event.stopPropagation();\n\t            if (timeouts.length === 0) { return; }\n\t            var fn = _shift(timeouts);\n\t            fn();\n\t          }\n\t        };\n\t        window.addEventListener('message', handleMessage, true);\n\t        return setZeroTimeout;\n\t      };\n\t    }\n\t    var makePromiseAsap = function () {\n\t      // An efficient task-scheduler based on a pre-existing Promise\n\t      // implementation, which we can use even if we override the\n\t      // global Promise below (in order to workaround bugs)\n\t      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n\t      var P = globals.Promise;\n\t      var pr = P && P.resolve && P.resolve();\n\t      return pr && function (task) {\n\t        return pr.then(task);\n\t      };\n\t    };\n\t    /*global process */\n\t    /* jscs:disable disallowMultiLineTernary */\n\t    var enqueue = ES.IsCallable(globals.setImmediate) ?\n\t      globals.setImmediate :\n\t      typeof process === 'object' && process.nextTick ? process.nextTick :\n\t      makePromiseAsap() ||\n\t      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\n\t      function (task) { setTimeout(task, 0); }); // fallback\n\t    /* jscs:enable disallowMultiLineTernary */\n\t\n\t    // Constants for Promise implementation\n\t    var PROMISE_IDENTITY = function (x) { return x; };\n\t    var PROMISE_THROWER = function (e) { throw e; };\n\t    var PROMISE_PENDING = 0;\n\t    var PROMISE_FULFILLED = 1;\n\t    var PROMISE_REJECTED = 2;\n\t    // We store fulfill/reject handlers and capabilities in a single array.\n\t    var PROMISE_FULFILL_OFFSET = 0;\n\t    var PROMISE_REJECT_OFFSET = 1;\n\t    var PROMISE_CAPABILITY_OFFSET = 2;\n\t    // This is used in an optimization for chaining promises via then.\n\t    var PROMISE_FAKE_CAPABILITY = {};\n\t\n\t    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n\t      enqueue(function () {\n\t        promiseReactionJob(handler, capability, argument);\n\t      });\n\t    };\n\t\n\t    var promiseReactionJob = function (handler, promiseCapability, argument) {\n\t      var handlerResult, f;\n\t      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n\t        // Fast case, when we don't actually need to chain through to a\n\t        // (real) promiseCapability.\n\t        return handler(argument);\n\t      }\n\t      try {\n\t        handlerResult = handler(argument);\n\t        f = promiseCapability.resolve;\n\t      } catch (e) {\n\t        handlerResult = e;\n\t        f = promiseCapability.reject;\n\t      }\n\t      f(handlerResult);\n\t    };\n\t\n\t    var fulfillPromise = function (promise, value) {\n\t      var _promise = promise._promise;\n\t      var length = _promise.reactionLength;\n\t      if (length > 0) {\n\t        enqueuePromiseReactionJob(\n\t          _promise.fulfillReactionHandler0,\n\t          _promise.reactionCapability0,\n\t          value\n\t        );\n\t        _promise.fulfillReactionHandler0 = void 0;\n\t        _promise.rejectReactions0 = void 0;\n\t        _promise.reactionCapability0 = void 0;\n\t        if (length > 1) {\n\t          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n\t            enqueuePromiseReactionJob(\n\t              _promise[idx + PROMISE_FULFILL_OFFSET],\n\t              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n\t              value\n\t            );\n\t            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n\t            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n\t            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n\t          }\n\t        }\n\t      }\n\t      _promise.result = value;\n\t      _promise.state = PROMISE_FULFILLED;\n\t      _promise.reactionLength = 0;\n\t    };\n\t\n\t    var rejectPromise = function (promise, reason) {\n\t      var _promise = promise._promise;\n\t      var length = _promise.reactionLength;\n\t      if (length > 0) {\n\t        enqueuePromiseReactionJob(\n\t          _promise.rejectReactionHandler0,\n\t          _promise.reactionCapability0,\n\t          reason\n\t        );\n\t        _promise.fulfillReactionHandler0 = void 0;\n\t        _promise.rejectReactions0 = void 0;\n\t        _promise.reactionCapability0 = void 0;\n\t        if (length > 1) {\n\t          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n\t            enqueuePromiseReactionJob(\n\t              _promise[idx + PROMISE_REJECT_OFFSET],\n\t              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n\t              reason\n\t            );\n\t            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n\t            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n\t            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n\t          }\n\t        }\n\t      }\n\t      _promise.result = reason;\n\t      _promise.state = PROMISE_REJECTED;\n\t      _promise.reactionLength = 0;\n\t    };\n\t\n\t    var createResolvingFunctions = function (promise) {\n\t      var alreadyResolved = false;\n\t      var resolve = function (resolution) {\n\t        var then;\n\t        if (alreadyResolved) { return; }\n\t        alreadyResolved = true;\n\t        if (resolution === promise) {\n\t          return rejectPromise(promise, new TypeError('Self resolution'));\n\t        }\n\t        if (!ES.TypeIsObject(resolution)) {\n\t          return fulfillPromise(promise, resolution);\n\t        }\n\t        try {\n\t          then = resolution.then;\n\t        } catch (e) {\n\t          return rejectPromise(promise, e);\n\t        }\n\t        if (!ES.IsCallable(then)) {\n\t          return fulfillPromise(promise, resolution);\n\t        }\n\t        enqueue(function () {\n\t          promiseResolveThenableJob(promise, resolution, then);\n\t        });\n\t      };\n\t      var reject = function (reason) {\n\t        if (alreadyResolved) { return; }\n\t        alreadyResolved = true;\n\t        return rejectPromise(promise, reason);\n\t      };\n\t      return { resolve: resolve, reject: reject };\n\t    };\n\t\n\t    var optimizedThen = function (then, thenable, resolve, reject) {\n\t      // Optimization: since we discard the result, we can pass our\n\t      // own then implementation a special hint to let it know it\n\t      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n\t      // object is local to this implementation and unforgeable outside.)\n\t      if (then === Promise$prototype$then) {\n\t        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n\t      } else {\n\t        _call(then, thenable, resolve, reject);\n\t      }\n\t    };\n\t    var promiseResolveThenableJob = function (promise, thenable, then) {\n\t      var resolvingFunctions = createResolvingFunctions(promise);\n\t      var resolve = resolvingFunctions.resolve;\n\t      var reject = resolvingFunctions.reject;\n\t      try {\n\t        optimizedThen(then, thenable, resolve, reject);\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    };\n\t\n\t    var Promise$prototype, Promise$prototype$then;\n\t    var Promise = (function () {\n\t      var PromiseShim = function Promise(resolver) {\n\t        if (!(this instanceof PromiseShim)) {\n\t          throw new TypeError('Constructor Promise requires \"new\"');\n\t        }\n\t        if (this && this._promise) {\n\t          throw new TypeError('Bad construction');\n\t        }\n\t        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n\t        if (!ES.IsCallable(resolver)) {\n\t          throw new TypeError('not a valid resolver');\n\t        }\n\t        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n\t          _promise: {\n\t            result: void 0,\n\t            state: PROMISE_PENDING,\n\t            // The first member of the \"reactions\" array is inlined here,\n\t            // since most promises only have one reaction.\n\t            // We've also exploded the 'reaction' object to inline the\n\t            // \"handler\" and \"capability\" fields, since both fulfill and\n\t            // reject reactions share the same capability.\n\t            reactionLength: 0,\n\t            fulfillReactionHandler0: void 0,\n\t            rejectReactionHandler0: void 0,\n\t            reactionCapability0: void 0\n\t          }\n\t        });\n\t        var resolvingFunctions = createResolvingFunctions(promise);\n\t        var reject = resolvingFunctions.reject;\n\t        try {\n\t          resolver(resolvingFunctions.resolve, reject);\n\t        } catch (e) {\n\t          reject(e);\n\t        }\n\t        return promise;\n\t      };\n\t      return PromiseShim;\n\t    }());\n\t    Promise$prototype = Promise.prototype;\n\t\n\t    var _promiseAllResolver = function (index, values, capability, remaining) {\n\t      var alreadyCalled = false;\n\t      return function (x) {\n\t        if (alreadyCalled) { return; }\n\t        alreadyCalled = true;\n\t        values[index] = x;\n\t        if ((--remaining.count) === 0) {\n\t          var resolve = capability.resolve;\n\t          resolve(values); // call w/ this===undefined\n\t        }\n\t      };\n\t    };\n\t\n\t    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n\t      var it = iteratorRecord.iterator;\n\t      var values = [], remaining = { count: 1 }, next, nextValue;\n\t      var index = 0;\n\t      while (true) {\n\t        try {\n\t          next = ES.IteratorStep(it);\n\t          if (next === false) {\n\t            iteratorRecord.done = true;\n\t            break;\n\t          }\n\t          nextValue = next.value;\n\t        } catch (e) {\n\t          iteratorRecord.done = true;\n\t          throw e;\n\t        }\n\t        values[index] = void 0;\n\t        var nextPromise = C.resolve(nextValue);\n\t        var resolveElement = _promiseAllResolver(\n\t          index, values, resultCapability, remaining\n\t        );\n\t        remaining.count += 1;\n\t        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n\t        index += 1;\n\t      }\n\t      if ((--remaining.count) === 0) {\n\t        var resolve = resultCapability.resolve;\n\t        resolve(values); // call w/ this===undefined\n\t      }\n\t      return resultCapability.promise;\n\t    };\n\t\n\t    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n\t      var it = iteratorRecord.iterator, next, nextValue, nextPromise;\n\t      while (true) {\n\t        try {\n\t          next = ES.IteratorStep(it);\n\t          if (next === false) {\n\t            // NOTE: If iterable has no items, resulting promise will never\n\t            // resolve; see:\n\t            // https://github.com/domenic/promises-unwrapping/issues/75\n\t            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n\t            iteratorRecord.done = true;\n\t            break;\n\t          }\n\t          nextValue = next.value;\n\t        } catch (e) {\n\t          iteratorRecord.done = true;\n\t          throw e;\n\t        }\n\t        nextPromise = C.resolve(nextValue);\n\t        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n\t      }\n\t      return resultCapability.promise;\n\t    };\n\t\n\t    defineProperties(Promise, {\n\t      all: function all(iterable) {\n\t        var C = this;\n\t        if (!ES.TypeIsObject(C)) {\n\t          throw new TypeError('Promise is not object');\n\t        }\n\t        var capability = new PromiseCapability(C);\n\t        var iterator, iteratorRecord;\n\t        try {\n\t          iterator = ES.GetIterator(iterable);\n\t          iteratorRecord = { iterator: iterator, done: false };\n\t          return performPromiseAll(iteratorRecord, C, capability);\n\t        } catch (e) {\n\t          var exception = e;\n\t          if (iteratorRecord && !iteratorRecord.done) {\n\t            try {\n\t              ES.IteratorClose(iterator, true);\n\t            } catch (ee) {\n\t              exception = ee;\n\t            }\n\t          }\n\t          var reject = capability.reject;\n\t          reject(exception);\n\t          return capability.promise;\n\t        }\n\t      },\n\t\n\t      race: function race(iterable) {\n\t        var C = this;\n\t        if (!ES.TypeIsObject(C)) {\n\t          throw new TypeError('Promise is not object');\n\t        }\n\t        var capability = new PromiseCapability(C);\n\t        var iterator, iteratorRecord;\n\t        try {\n\t          iterator = ES.GetIterator(iterable);\n\t          iteratorRecord = { iterator: iterator, done: false };\n\t          return performPromiseRace(iteratorRecord, C, capability);\n\t        } catch (e) {\n\t          var exception = e;\n\t          if (iteratorRecord && !iteratorRecord.done) {\n\t            try {\n\t              ES.IteratorClose(iterator, true);\n\t            } catch (ee) {\n\t              exception = ee;\n\t            }\n\t          }\n\t          var reject = capability.reject;\n\t          reject(exception);\n\t          return capability.promise;\n\t        }\n\t      },\n\t\n\t      reject: function reject(reason) {\n\t        var C = this;\n\t        if (!ES.TypeIsObject(C)) {\n\t          throw new TypeError('Bad promise constructor');\n\t        }\n\t        var capability = new PromiseCapability(C);\n\t        var rejectFunc = capability.reject;\n\t        rejectFunc(reason); // call with this===undefined\n\t        return capability.promise;\n\t      },\n\t\n\t      resolve: function resolve(v) {\n\t        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n\t        var C = this;\n\t        if (!ES.TypeIsObject(C)) {\n\t          throw new TypeError('Bad promise constructor');\n\t        }\n\t        if (ES.IsPromise(v)) {\n\t          var constructor = v.constructor;\n\t          if (constructor === C) { return v; }\n\t        }\n\t        var capability = new PromiseCapability(C);\n\t        var resolveFunc = capability.resolve;\n\t        resolveFunc(v); // call with this===undefined\n\t        return capability.promise;\n\t      }\n\t    });\n\t\n\t    defineProperties(Promise$prototype, {\n\t      'catch': function (onRejected) {\n\t        return this.then(null, onRejected);\n\t      },\n\t\n\t      then: function then(onFulfilled, onRejected) {\n\t        var promise = this;\n\t        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n\t        var C = ES.SpeciesConstructor(promise, Promise);\n\t        var resultCapability;\n\t        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n\t        if (returnValueIsIgnored && C === Promise) {\n\t          resultCapability = PROMISE_FAKE_CAPABILITY;\n\t        } else {\n\t          resultCapability = new PromiseCapability(C);\n\t        }\n\t        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n\t        // Note that we've split the 'reaction' object into its two\n\t        // components, \"capabilities\" and \"handler\"\n\t        // \"capabilities\" is always equal to `resultCapability`\n\t        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n\t        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n\t        var _promise = promise._promise;\n\t        var value;\n\t        if (_promise.state === PROMISE_PENDING) {\n\t          if (_promise.reactionLength === 0) {\n\t            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n\t            _promise.rejectReactionHandler0 = rejectReactionHandler;\n\t            _promise.reactionCapability0 = resultCapability;\n\t          } else {\n\t            var idx = 3 * (_promise.reactionLength - 1);\n\t            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n\t            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n\t            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n\t          }\n\t          _promise.reactionLength += 1;\n\t        } else if (_promise.state === PROMISE_FULFILLED) {\n\t          value = _promise.result;\n\t          enqueuePromiseReactionJob(\n\t            fulfillReactionHandler, resultCapability, value\n\t          );\n\t        } else if (_promise.state === PROMISE_REJECTED) {\n\t          value = _promise.result;\n\t          enqueuePromiseReactionJob(\n\t            rejectReactionHandler, resultCapability, value\n\t          );\n\t        } else {\n\t          throw new TypeError('unexpected Promise state');\n\t        }\n\t        return resultCapability.promise;\n\t      }\n\t    });\n\t    // This helps the optimizer by ensuring that methods which take\n\t    // capabilities aren't polymorphic.\n\t    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n\t    Promise$prototype$then = Promise$prototype.then;\n\t\n\t    return Promise;\n\t  }());\n\t\n\t  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n\t  if (globals.Promise) {\n\t    delete globals.Promise.accept;\n\t    delete globals.Promise.defer;\n\t    delete globals.Promise.prototype.chain;\n\t  }\n\t\n\t  if (typeof PromiseShim === 'function') {\n\t    // export the Promise constructor.\n\t    defineProperties(globals, { Promise: PromiseShim });\n\t    // In Chrome 33 (and thereabouts) Promise is defined, but the\n\t    // implementation is buggy in a number of ways.  Let's check subclassing\n\t    // support to see if we have a buggy implementation.\n\t    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n\t      return S.resolve(42).then(function () {}) instanceof S;\n\t    });\n\t    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () { globals.Promise.reject(42).then(null, 5).then(null, noop); });\n\t    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\n\t    // Promise.resolve() was errata'ed late in the ES6 process.\n\t    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n\t    //      https://code.google.com/p/v8/issues/detail?id=4161\n\t    // It serves as a proxy for a number of other bugs in early Promise\n\t    // implementations.\n\t    var promiseResolveBroken = (function (Promise) {\n\t      var p = Promise.resolve(5);\n\t      p.constructor = {};\n\t      var p2 = Promise.resolve(p);\n\t      try {\n\t        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n\t      } catch (e) {\n\t        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n\t      }\n\t      return p === p2; // This *should* be false!\n\t    }(globals.Promise));\n\t\n\t    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n\t    var getsThenSynchronously = supportsDescriptors && (function () {\n\t      var count = 0;\n\t      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n\t      Promise.resolve(thenable);\n\t      return count === 1;\n\t    }());\n\t\n\t    var BadResolverPromise = function BadResolverPromise(executor) {\n\t      var p = new Promise(executor);\n\t      executor(3, function () {});\n\t      this.then = p.then;\n\t      this.constructor = BadResolverPromise;\n\t    };\n\t    BadResolverPromise.prototype = Promise.prototype;\n\t    BadResolverPromise.all = Promise.all;\n\t    // Chrome Canary 49 (probably older too) has some implementation bugs\n\t    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n\t      return !!BadResolverPromise.all([1, 2]);\n\t    });\n\t\n\t    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\n\t        !promiseRequiresObjectContext || promiseResolveBroken ||\n\t        !getsThenSynchronously || hasBadResolverPromise) {\n\t      /* globals Promise: true */\n\t      /* eslint-disable no-undef */\n\t      /* jshint -W020 */\n\t      Promise = PromiseShim;\n\t      /* jshint +W020 */\n\t      /* eslint-enable no-undef */\n\t      /* globals Promise: false */\n\t      overrideNative(globals, 'Promise', PromiseShim);\n\t    }\n\t    if (Promise.all.length !== 1) {\n\t      var origAll = Promise.all;\n\t      overrideNative(Promise, 'all', function all(iterable) {\n\t        return ES.Call(origAll, this, arguments);\n\t      });\n\t    }\n\t    if (Promise.race.length !== 1) {\n\t      var origRace = Promise.race;\n\t      overrideNative(Promise, 'race', function race(iterable) {\n\t        return ES.Call(origRace, this, arguments);\n\t      });\n\t    }\n\t    if (Promise.resolve.length !== 1) {\n\t      var origResolve = Promise.resolve;\n\t      overrideNative(Promise, 'resolve', function resolve(x) {\n\t        return ES.Call(origResolve, this, arguments);\n\t      });\n\t    }\n\t    if (Promise.reject.length !== 1) {\n\t      var origReject = Promise.reject;\n\t      overrideNative(Promise, 'reject', function reject(r) {\n\t        return ES.Call(origReject, this, arguments);\n\t      });\n\t    }\n\t    ensureEnumerable(Promise, 'all');\n\t    ensureEnumerable(Promise, 'race');\n\t    ensureEnumerable(Promise, 'resolve');\n\t    ensureEnumerable(Promise, 'reject');\n\t    addDefaultSpecies(Promise);\n\t  }\n\t\n\t  // Map and Set require a true ES5 environment\n\t  // Their fast path also requires that the environment preserve\n\t  // property insertion order, which is not guaranteed by the spec.\n\t  var testOrder = function (a) {\n\t    var b = keys(_reduce(a, function (o, k) {\n\t      o[k] = true;\n\t      return o;\n\t    }, {}));\n\t    return a.join(':') === b.join(':');\n\t  };\n\t  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n\t  // some engines (eg, Chrome) only preserve insertion order for string keys\n\t  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\t\n\t  if (supportsDescriptors) {\n\t\n\t    var fastkey = function fastkey(key) {\n\t      if (!preservesInsertionOrder) {\n\t        return null;\n\t      }\n\t      if (typeof key === 'undefined' || key === null) {\n\t        return '^' + ES.ToString(key);\n\t      } else if (typeof key === 'string') {\n\t        return '$' + key;\n\t      } else if (typeof key === 'number') {\n\t        // note that -0 will get coerced to \"0\" when used as a property key\n\t        if (!preservesNumericInsertionOrder) {\n\t          return 'n' + key;\n\t        }\n\t        return key;\n\t      } else if (typeof key === 'boolean') {\n\t        return 'b' + key;\n\t      }\n\t      return null;\n\t    };\n\t\n\t    var emptyObject = function emptyObject() {\n\t      // accomodate some older not-quite-ES5 browsers\n\t      return Object.create ? Object.create(null) : {};\n\t    };\n\t\n\t    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n\t      if (isArray(iterable) || Type.string(iterable)) {\n\t        _forEach(iterable, function (entry) {\n\t          if (!ES.TypeIsObject(entry)) {\n\t            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n\t          }\n\t          map.set(entry[0], entry[1]);\n\t        });\n\t      } else if (iterable instanceof MapConstructor) {\n\t        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n\t          map.set(key, value);\n\t        });\n\t      } else {\n\t        var iter, adder;\n\t        if (iterable !== null && typeof iterable !== 'undefined') {\n\t          adder = map.set;\n\t          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n\t          iter = ES.GetIterator(iterable);\n\t        }\n\t        if (typeof iter !== 'undefined') {\n\t          while (true) {\n\t            var next = ES.IteratorStep(iter);\n\t            if (next === false) { break; }\n\t            var nextItem = next.value;\n\t            try {\n\t              if (!ES.TypeIsObject(nextItem)) {\n\t                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n\t              }\n\t              _call(adder, map, nextItem[0], nextItem[1]);\n\t            } catch (e) {\n\t              ES.IteratorClose(iter, true);\n\t              throw e;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n\t      if (isArray(iterable) || Type.string(iterable)) {\n\t        _forEach(iterable, function (value) {\n\t          set.add(value);\n\t        });\n\t      } else if (iterable instanceof SetConstructor) {\n\t        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n\t          set.add(value);\n\t        });\n\t      } else {\n\t        var iter, adder;\n\t        if (iterable !== null && typeof iterable !== 'undefined') {\n\t          adder = set.add;\n\t          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n\t          iter = ES.GetIterator(iterable);\n\t        }\n\t        if (typeof iter !== 'undefined') {\n\t          while (true) {\n\t            var next = ES.IteratorStep(iter);\n\t            if (next === false) { break; }\n\t            var nextValue = next.value;\n\t            try {\n\t              _call(adder, set, nextValue);\n\t            } catch (e) {\n\t              ES.IteratorClose(iter, true);\n\t              throw e;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    var collectionShims = {\n\t      Map: (function () {\n\t\n\t        var empty = {};\n\t\n\t        var MapEntry = function MapEntry(key, value) {\n\t          this.key = key;\n\t          this.value = value;\n\t          this.next = null;\n\t          this.prev = null;\n\t        };\n\t\n\t        MapEntry.prototype.isRemoved = function isRemoved() {\n\t          return this.key === empty;\n\t        };\n\t\n\t        var isMap = function isMap(map) {\n\t          return !!map._es6map;\n\t        };\n\t\n\t        var requireMapSlot = function requireMapSlot(map, method) {\n\t          if (!ES.TypeIsObject(map) || !isMap(map)) {\n\t            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n\t          }\n\t        };\n\t\n\t        var MapIterator = function MapIterator(map, kind) {\n\t          requireMapSlot(map, '[[MapIterator]]');\n\t          this.head = map._head;\n\t          this.i = this.head;\n\t          this.kind = kind;\n\t        };\n\t\n\t        MapIterator.prototype = {\n\t          next: function next() {\n\t            var i = this.i, kind = this.kind, head = this.head, result;\n\t            if (typeof this.i === 'undefined') {\n\t              return { value: void 0, done: true };\n\t            }\n\t            while (i.isRemoved() && i !== head) {\n\t              // back up off of removed entries\n\t              i = i.prev;\n\t            }\n\t            // advance to next unreturned element.\n\t            while (i.next !== head) {\n\t              i = i.next;\n\t              if (!i.isRemoved()) {\n\t                if (kind === 'key') {\n\t                  result = i.key;\n\t                } else if (kind === 'value') {\n\t                  result = i.value;\n\t                } else {\n\t                  result = [i.key, i.value];\n\t                }\n\t                this.i = i;\n\t                return { value: result, done: false };\n\t              }\n\t            }\n\t            // once the iterator is done, it is done forever.\n\t            this.i = void 0;\n\t            return { value: void 0, done: true };\n\t          }\n\t        };\n\t        addIterator(MapIterator.prototype);\n\t\n\t        var Map$prototype;\n\t        var MapShim = function Map() {\n\t          if (!(this instanceof Map)) {\n\t            throw new TypeError('Constructor Map requires \"new\"');\n\t          }\n\t          if (this && this._es6map) {\n\t            throw new TypeError('Bad construction');\n\t          }\n\t          var map = emulateES6construct(this, Map, Map$prototype, {\n\t            _es6map: true,\n\t            _head: null,\n\t            _storage: emptyObject(),\n\t            _size: 0\n\t          });\n\t\n\t          var head = new MapEntry(null, null);\n\t          // circular doubly-linked list.\n\t          head.next = head.prev = head;\n\t          map._head = head;\n\t\n\t          // Optionally initialize map from iterable\n\t          if (arguments.length > 0) {\n\t            addIterableToMap(Map, map, arguments[0]);\n\t          }\n\t          return map;\n\t        };\n\t        Map$prototype = MapShim.prototype;\n\t\n\t        Value.getter(Map$prototype, 'size', function () {\n\t          if (typeof this._size === 'undefined') {\n\t            throw new TypeError('size method called on incompatible Map');\n\t          }\n\t          return this._size;\n\t        });\n\t\n\t        defineProperties(Map$prototype, {\n\t          get: function get(key) {\n\t            requireMapSlot(this, 'get');\n\t            var fkey = fastkey(key);\n\t            if (fkey !== null) {\n\t              // fast O(1) path\n\t              var entry = this._storage[fkey];\n\t              if (entry) {\n\t                return entry.value;\n\t              } else {\n\t                return;\n\t              }\n\t            }\n\t            var head = this._head, i = head;\n\t            while ((i = i.next) !== head) {\n\t              if (ES.SameValueZero(i.key, key)) {\n\t                return i.value;\n\t              }\n\t            }\n\t          },\n\t\n\t          has: function has(key) {\n\t            requireMapSlot(this, 'has');\n\t            var fkey = fastkey(key);\n\t            if (fkey !== null) {\n\t              // fast O(1) path\n\t              return typeof this._storage[fkey] !== 'undefined';\n\t            }\n\t            var head = this._head, i = head;\n\t            while ((i = i.next) !== head) {\n\t              if (ES.SameValueZero(i.key, key)) {\n\t                return true;\n\t              }\n\t            }\n\t            return false;\n\t          },\n\t\n\t          set: function set(key, value) {\n\t            requireMapSlot(this, 'set');\n\t            var head = this._head, i = head, entry;\n\t            var fkey = fastkey(key);\n\t            if (fkey !== null) {\n\t              // fast O(1) path\n\t              if (typeof this._storage[fkey] !== 'undefined') {\n\t                this._storage[fkey].value = value;\n\t                return this;\n\t              } else {\n\t                entry = this._storage[fkey] = new MapEntry(key, value);\n\t                i = head.prev;\n\t                // fall through\n\t              }\n\t            }\n\t            while ((i = i.next) !== head) {\n\t              if (ES.SameValueZero(i.key, key)) {\n\t                i.value = value;\n\t                return this;\n\t              }\n\t            }\n\t            entry = entry || new MapEntry(key, value);\n\t            if (ES.SameValue(-0, key)) {\n\t              entry.key = +0; // coerce -0 to +0 in entry\n\t            }\n\t            entry.next = this._head;\n\t            entry.prev = this._head.prev;\n\t            entry.prev.next = entry;\n\t            entry.next.prev = entry;\n\t            this._size += 1;\n\t            return this;\n\t          },\n\t\n\t          'delete': function (key) {\n\t            requireMapSlot(this, 'delete');\n\t            var head = this._head, i = head;\n\t            var fkey = fastkey(key);\n\t            if (fkey !== null) {\n\t              // fast O(1) path\n\t              if (typeof this._storage[fkey] === 'undefined') {\n\t                return false;\n\t              }\n\t              i = this._storage[fkey].prev;\n\t              delete this._storage[fkey];\n\t              // fall through\n\t            }\n\t            while ((i = i.next) !== head) {\n\t              if (ES.SameValueZero(i.key, key)) {\n\t                i.key = i.value = empty;\n\t                i.prev.next = i.next;\n\t                i.next.prev = i.prev;\n\t                this._size -= 1;\n\t                return true;\n\t              }\n\t            }\n\t            return false;\n\t          },\n\t\n\t          clear: function clear() {\n\t            requireMapSlot(this, 'clear');\n\t            this._size = 0;\n\t            this._storage = emptyObject();\n\t            var head = this._head, i = head, p = i.next;\n\t            while ((i = p) !== head) {\n\t              i.key = i.value = empty;\n\t              p = i.next;\n\t              i.next = i.prev = head;\n\t            }\n\t            head.next = head.prev = head;\n\t          },\n\t\n\t          keys: function keys() {\n\t            requireMapSlot(this, 'keys');\n\t            return new MapIterator(this, 'key');\n\t          },\n\t\n\t          values: function values() {\n\t            requireMapSlot(this, 'values');\n\t            return new MapIterator(this, 'value');\n\t          },\n\t\n\t          entries: function entries() {\n\t            requireMapSlot(this, 'entries');\n\t            return new MapIterator(this, 'key+value');\n\t          },\n\t\n\t          forEach: function forEach(callback) {\n\t            requireMapSlot(this, 'forEach');\n\t            var context = arguments.length > 1 ? arguments[1] : null;\n\t            var it = this.entries();\n\t            for (var entry = it.next(); !entry.done; entry = it.next()) {\n\t              if (context) {\n\t                _call(callback, context, entry.value[1], entry.value[0], this);\n\t              } else {\n\t                callback(entry.value[1], entry.value[0], this);\n\t              }\n\t            }\n\t          }\n\t        });\n\t        addIterator(Map$prototype, Map$prototype.entries);\n\t\n\t        return MapShim;\n\t      }()),\n\t\n\t      Set: (function () {\n\t        var isSet = function isSet(set) {\n\t          return set._es6set && typeof set._storage !== 'undefined';\n\t        };\n\t        var requireSetSlot = function requireSetSlot(set, method) {\n\t          if (!ES.TypeIsObject(set) || !isSet(set)) {\n\t            // https://github.com/paulmillr/es6-shim/issues/176\n\t            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n\t          }\n\t        };\n\t\n\t        // Creating a Map is expensive.  To speed up the common case of\n\t        // Sets containing only string or numeric keys, we use an object\n\t        // as backing storage and lazily create a full Map only when\n\t        // required.\n\t        var Set$prototype;\n\t        var SetShim = function Set() {\n\t          if (!(this instanceof Set)) {\n\t            throw new TypeError('Constructor Set requires \"new\"');\n\t          }\n\t          if (this && this._es6set) {\n\t            throw new TypeError('Bad construction');\n\t          }\n\t          var set = emulateES6construct(this, Set, Set$prototype, {\n\t            _es6set: true,\n\t            '[[SetData]]': null,\n\t            _storage: emptyObject()\n\t          });\n\t          if (!set._es6set) {\n\t            throw new TypeError('bad set');\n\t          }\n\t\n\t          // Optionally initialize Set from iterable\n\t          if (arguments.length > 0) {\n\t            addIterableToSet(Set, set, arguments[0]);\n\t          }\n\t          return set;\n\t        };\n\t        Set$prototype = SetShim.prototype;\n\t\n\t        var decodeKey = function (key) {\n\t          var k = key;\n\t          if (k === '^null') {\n\t            return null;\n\t          } else if (k === '^undefined') {\n\t            return void 0;\n\t          } else {\n\t            var first = k.charAt(0);\n\t            if (first === '$') {\n\t              return _strSlice(k, 1);\n\t            } else if (first === 'n') {\n\t              return +_strSlice(k, 1);\n\t            } else if (first === 'b') {\n\t              return k === 'btrue';\n\t            }\n\t          }\n\t          return +k;\n\t        };\n\t        // Switch from the object backing storage to a full Map.\n\t        var ensureMap = function ensureMap(set) {\n\t          if (!set['[[SetData]]']) {\n\t            var m = set['[[SetData]]'] = new collectionShims.Map();\n\t            _forEach(keys(set._storage), function (key) {\n\t              var k = decodeKey(key);\n\t              m.set(k, k);\n\t            });\n\t            set['[[SetData]]'] = m;\n\t          }\n\t          set._storage = null; // free old backing storage\n\t        };\n\t\n\t        Value.getter(SetShim.prototype, 'size', function () {\n\t          requireSetSlot(this, 'size');\n\t          if (this._storage) {\n\t            return keys(this._storage).length;\n\t          }\n\t          ensureMap(this);\n\t          return this['[[SetData]]'].size;\n\t        });\n\t\n\t        defineProperties(SetShim.prototype, {\n\t          has: function has(key) {\n\t            requireSetSlot(this, 'has');\n\t            var fkey;\n\t            if (this._storage && (fkey = fastkey(key)) !== null) {\n\t              return !!this._storage[fkey];\n\t            }\n\t            ensureMap(this);\n\t            return this['[[SetData]]'].has(key);\n\t          },\n\t\n\t          add: function add(key) {\n\t            requireSetSlot(this, 'add');\n\t            var fkey;\n\t            if (this._storage && (fkey = fastkey(key)) !== null) {\n\t              this._storage[fkey] = true;\n\t              return this;\n\t            }\n\t            ensureMap(this);\n\t            this['[[SetData]]'].set(key, key);\n\t            return this;\n\t          },\n\t\n\t          'delete': function (key) {\n\t            requireSetSlot(this, 'delete');\n\t            var fkey;\n\t            if (this._storage && (fkey = fastkey(key)) !== null) {\n\t              var hasFKey = _hasOwnProperty(this._storage, fkey);\n\t              return (delete this._storage[fkey]) && hasFKey;\n\t            }\n\t            ensureMap(this);\n\t            return this['[[SetData]]']['delete'](key);\n\t          },\n\t\n\t          clear: function clear() {\n\t            requireSetSlot(this, 'clear');\n\t            if (this._storage) {\n\t              this._storage = emptyObject();\n\t            }\n\t            if (this['[[SetData]]']) {\n\t              this['[[SetData]]'].clear();\n\t            }\n\t          },\n\t\n\t          values: function values() {\n\t            requireSetSlot(this, 'values');\n\t            ensureMap(this);\n\t            return this['[[SetData]]'].values();\n\t          },\n\t\n\t          entries: function entries() {\n\t            requireSetSlot(this, 'entries');\n\t            ensureMap(this);\n\t            return this['[[SetData]]'].entries();\n\t          },\n\t\n\t          forEach: function forEach(callback) {\n\t            requireSetSlot(this, 'forEach');\n\t            var context = arguments.length > 1 ? arguments[1] : null;\n\t            var entireSet = this;\n\t            ensureMap(entireSet);\n\t            this['[[SetData]]'].forEach(function (value, key) {\n\t              if (context) {\n\t                _call(callback, context, key, key, entireSet);\n\t              } else {\n\t                callback(key, key, entireSet);\n\t              }\n\t            });\n\t          }\n\t        });\n\t        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n\t        addIterator(SetShim.prototype, SetShim.prototype.values);\n\t\n\t        return SetShim;\n\t      }())\n\t    };\n\t\n\t    if (globals.Map || globals.Set) {\n\t      // Safari 8, for example, doesn't accept an iterable.\n\t      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n\t      if (!mapAcceptsArguments) {\n\t        var OrigMapNoArgs = globals.Map;\n\t        globals.Map = function Map() {\n\t          if (!(this instanceof Map)) {\n\t            throw new TypeError('Constructor Map requires \"new\"');\n\t          }\n\t          var m = new OrigMapNoArgs();\n\t          if (arguments.length > 0) {\n\t            addIterableToMap(Map, m, arguments[0]);\n\t          }\n\t          delete m.constructor;\n\t          Object.setPrototypeOf(m, globals.Map.prototype);\n\t          return m;\n\t        };\n\t        globals.Map.prototype = create(OrigMapNoArgs.prototype);\n\t        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n\t        Value.preserveToString(globals.Map, OrigMapNoArgs);\n\t      }\n\t      var testMap = new Map();\n\t      var mapUsesSameValueZero = (function () {\n\t        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n\t        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n\t        m.set(-0, m);\n\t        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n\t      }());\n\t      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n\t      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n\t        var origMapSet = Map.prototype.set;\n\t        overrideNative(Map.prototype, 'set', function set(k, v) {\n\t          _call(origMapSet, this, k === 0 ? 0 : k, v);\n\t          return this;\n\t        });\n\t      }\n\t      if (!mapUsesSameValueZero) {\n\t        var origMapGet = Map.prototype.get;\n\t        var origMapHas = Map.prototype.has;\n\t        defineProperties(Map.prototype, {\n\t          get: function get(k) {\n\t            return _call(origMapGet, this, k === 0 ? 0 : k);\n\t          },\n\t          has: function has(k) {\n\t            return _call(origMapHas, this, k === 0 ? 0 : k);\n\t          }\n\t        }, true);\n\t        Value.preserveToString(Map.prototype.get, origMapGet);\n\t        Value.preserveToString(Map.prototype.has, origMapHas);\n\t      }\n\t      var testSet = new Set();\n\t      var setUsesSameValueZero = (function (s) {\n\t        s['delete'](0);\n\t        s.add(-0);\n\t        return !s.has(0);\n\t      }(testSet));\n\t      var setSupportsChaining = testSet.add(1) === testSet;\n\t      if (!setUsesSameValueZero || !setSupportsChaining) {\n\t        var origSetAdd = Set.prototype.add;\n\t        Set.prototype.add = function add(v) {\n\t          _call(origSetAdd, this, v === 0 ? 0 : v);\n\t          return this;\n\t        };\n\t        Value.preserveToString(Set.prototype.add, origSetAdd);\n\t      }\n\t      if (!setUsesSameValueZero) {\n\t        var origSetHas = Set.prototype.has;\n\t        Set.prototype.has = function has(v) {\n\t          return _call(origSetHas, this, v === 0 ? 0 : v);\n\t        };\n\t        Value.preserveToString(Set.prototype.has, origSetHas);\n\t        var origSetDel = Set.prototype['delete'];\n\t        Set.prototype['delete'] = function SetDelete(v) {\n\t          return _call(origSetDel, this, v === 0 ? 0 : v);\n\t        };\n\t        Value.preserveToString(Set.prototype['delete'], origSetDel);\n\t      }\n\t      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n\t        var m = new M([]);\n\t        // Firefox 32 is ok with the instantiating the subclass but will\n\t        // throw when the map is used.\n\t        m.set(42, 42);\n\t        return m instanceof M;\n\t      });\n\t      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing; // without Object.setPrototypeOf, subclassing is not possible\n\t      var mapRequiresNew = (function () {\n\t        try {\n\t          return !(globals.Map() instanceof globals.Map);\n\t        } catch (e) {\n\t          return e instanceof TypeError;\n\t        }\n\t      }());\n\t      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n\t        var OrigMap = globals.Map;\n\t        globals.Map = function Map() {\n\t          if (!(this instanceof Map)) {\n\t            throw new TypeError('Constructor Map requires \"new\"');\n\t          }\n\t          var m = new OrigMap();\n\t          if (arguments.length > 0) {\n\t            addIterableToMap(Map, m, arguments[0]);\n\t          }\n\t          delete m.constructor;\n\t          Object.setPrototypeOf(m, Map.prototype);\n\t          return m;\n\t        };\n\t        globals.Map.prototype = OrigMap.prototype;\n\t        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n\t        Value.preserveToString(globals.Map, OrigMap);\n\t      }\n\t      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n\t        var s = new S([]);\n\t        s.add(42, 42);\n\t        return s instanceof S;\n\t      });\n\t      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing; // without Object.setPrototypeOf, subclassing is not possible\n\t      var setRequiresNew = (function () {\n\t        try {\n\t          return !(globals.Set() instanceof globals.Set);\n\t        } catch (e) {\n\t          return e instanceof TypeError;\n\t        }\n\t      }());\n\t      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n\t        var OrigSet = globals.Set;\n\t        globals.Set = function Set() {\n\t          if (!(this instanceof Set)) {\n\t            throw new TypeError('Constructor Set requires \"new\"');\n\t          }\n\t          var s = new OrigSet();\n\t          if (arguments.length > 0) {\n\t            addIterableToSet(Set, s, arguments[0]);\n\t          }\n\t          delete s.constructor;\n\t          Object.setPrototypeOf(s, Set.prototype);\n\t          return s;\n\t        };\n\t        globals.Set.prototype = OrigSet.prototype;\n\t        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n\t        Value.preserveToString(globals.Set, OrigSet);\n\t      }\n\t      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n\t        return (new Map()).keys().next().done;\n\t      });\n\t      /*\n\t        - In Firefox < 23, Map#size is a function.\n\t        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n\t        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n\t        - In Firefox 24, Map and Set do not implement forEach\n\t        - In Firefox 25 at least, Map and Set are callable without \"new\"\n\t      */\n\t      if (\n\t        typeof globals.Map.prototype.clear !== 'function' ||\n\t        new globals.Set().size !== 0 ||\n\t        new globals.Map().size !== 0 ||\n\t        typeof globals.Map.prototype.keys !== 'function' ||\n\t        typeof globals.Set.prototype.keys !== 'function' ||\n\t        typeof globals.Map.prototype.forEach !== 'function' ||\n\t        typeof globals.Set.prototype.forEach !== 'function' ||\n\t        isCallableWithoutNew(globals.Map) ||\n\t        isCallableWithoutNew(globals.Set) ||\n\t        typeof (new globals.Map().keys().next) !== 'function' || // Safari 8\n\t        mapIterationThrowsStopIterator || // Firefox 25\n\t        !mapSupportsSubclassing\n\t      ) {\n\t        defineProperties(globals, {\n\t          Map: collectionShims.Map,\n\t          Set: collectionShims.Set\n\t        }, true);\n\t      }\n\t\n\t      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n\t        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n\t        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n\t      }\n\t\n\t      // Shim incomplete iterator implementations.\n\t      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n\t      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\t\n\t      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n\t        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n\t        var anonymousSetHas = globals.Set.prototype.has;\n\t        overrideNative(globals.Set.prototype, 'has', function has(key) {\n\t          return _call(anonymousSetHas, this, key);\n\t        });\n\t      }\n\t    }\n\t    defineProperties(globals, collectionShims);\n\t    addDefaultSpecies(globals.Map);\n\t    addDefaultSpecies(globals.Set);\n\t  }\n\t\n\t  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n\t    if (!ES.TypeIsObject(target)) {\n\t      throw new TypeError('target must be an object');\n\t    }\n\t  };\n\t\n\t  // Some Reflect methods are basically the same as\n\t  // those on the Object global, except that a TypeError is thrown if\n\t  // target isn't an object. As well as returning a boolean indicating\n\t  // the success of the operation.\n\t  var ReflectShims = {\n\t    // Apply method in a functional form.\n\t    apply: function apply() {\n\t      return ES.Call(ES.Call, null, arguments);\n\t    },\n\t\n\t    // New operator in a functional form.\n\t    construct: function construct(constructor, args) {\n\t      if (!ES.IsConstructor(constructor)) {\n\t        throw new TypeError('First argument must be a constructor.');\n\t      }\n\t      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n\t      if (!ES.IsConstructor(newTarget)) {\n\t        throw new TypeError('new.target must be a constructor.');\n\t      }\n\t      return ES.Construct(constructor, args, newTarget, 'internal');\n\t    },\n\t\n\t    // When deleting a non-existent or configurable property,\n\t    // true is returned.\n\t    // When attempting to delete a non-configurable property,\n\t    // it will return false.\n\t    deleteProperty: function deleteProperty(target, key) {\n\t      throwUnlessTargetIsObject(target);\n\t      if (supportsDescriptors) {\n\t        var desc = Object.getOwnPropertyDescriptor(target, key);\n\t\n\t        if (desc && !desc.configurable) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      // Will return true.\n\t      return delete target[key];\n\t    },\n\t\n\t    has: function has(target, key) {\n\t      throwUnlessTargetIsObject(target);\n\t      return key in target;\n\t    }\n\t  };\n\t\n\t  if (Object.getOwnPropertyNames) {\n\t    Object.assign(ReflectShims, {\n\t      // Basically the result of calling the internal [[OwnPropertyKeys]].\n\t      // Concatenating propertyNames and propertySymbols should do the trick.\n\t      // This should continue to work together with a Symbol shim\n\t      // which overrides Object.getOwnPropertyNames and implements\n\t      // Object.getOwnPropertySymbols.\n\t      ownKeys: function ownKeys(target) {\n\t        throwUnlessTargetIsObject(target);\n\t        var keys = Object.getOwnPropertyNames(target);\n\t\n\t        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n\t          _pushApply(keys, Object.getOwnPropertySymbols(target));\n\t        }\n\t\n\t        return keys;\n\t      }\n\t    });\n\t  }\n\t\n\t  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n\t    return !throwsError(func);\n\t  };\n\t\n\t  if (Object.preventExtensions) {\n\t    Object.assign(ReflectShims, {\n\t      isExtensible: function isExtensible(target) {\n\t        throwUnlessTargetIsObject(target);\n\t        return Object.isExtensible(target);\n\t      },\n\t      preventExtensions: function preventExtensions(target) {\n\t        throwUnlessTargetIsObject(target);\n\t        return callAndCatchException(function () {\n\t          Object.preventExtensions(target);\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  if (supportsDescriptors) {\n\t    var internalGet = function get(target, key, receiver) {\n\t      var desc = Object.getOwnPropertyDescriptor(target, key);\n\t\n\t      if (!desc) {\n\t        var parent = Object.getPrototypeOf(target);\n\t\n\t        if (parent === null) {\n\t          return void 0;\n\t        }\n\t\n\t        return internalGet(parent, key, receiver);\n\t      }\n\t\n\t      if ('value' in desc) {\n\t        return desc.value;\n\t      }\n\t\n\t      if (desc.get) {\n\t        return ES.Call(desc.get, receiver);\n\t      }\n\t\n\t      return void 0;\n\t    };\n\t\n\t    var internalSet = function set(target, key, value, receiver) {\n\t      var desc = Object.getOwnPropertyDescriptor(target, key);\n\t\n\t      if (!desc) {\n\t        var parent = Object.getPrototypeOf(target);\n\t\n\t        if (parent !== null) {\n\t          return internalSet(parent, key, value, receiver);\n\t        }\n\t\n\t        desc = {\n\t          value: void 0,\n\t          writable: true,\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t      }\n\t\n\t      if ('value' in desc) {\n\t        if (!desc.writable) {\n\t          return false;\n\t        }\n\t\n\t        if (!ES.TypeIsObject(receiver)) {\n\t          return false;\n\t        }\n\t\n\t        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\t\n\t        if (existingDesc) {\n\t          return Reflect.defineProperty(receiver, key, {\n\t            value: value\n\t          });\n\t        } else {\n\t          return Reflect.defineProperty(receiver, key, {\n\t            value: value,\n\t            writable: true,\n\t            enumerable: true,\n\t            configurable: true\n\t          });\n\t        }\n\t      }\n\t\n\t      if (desc.set) {\n\t        _call(desc.set, receiver, value);\n\t        return true;\n\t      }\n\t\n\t      return false;\n\t    };\n\t\n\t    Object.assign(ReflectShims, {\n\t      defineProperty: function defineProperty(target, propertyKey, attributes) {\n\t        throwUnlessTargetIsObject(target);\n\t        return callAndCatchException(function () {\n\t          Object.defineProperty(target, propertyKey, attributes);\n\t        });\n\t      },\n\t\n\t      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n\t        throwUnlessTargetIsObject(target);\n\t        return Object.getOwnPropertyDescriptor(target, propertyKey);\n\t      },\n\t\n\t      // Syntax in a functional form.\n\t      get: function get(target, key) {\n\t        throwUnlessTargetIsObject(target);\n\t        var receiver = arguments.length > 2 ? arguments[2] : target;\n\t\n\t        return internalGet(target, key, receiver);\n\t      },\n\t\n\t      set: function set(target, key, value) {\n\t        throwUnlessTargetIsObject(target);\n\t        var receiver = arguments.length > 3 ? arguments[3] : target;\n\t\n\t        return internalSet(target, key, value, receiver);\n\t      }\n\t    });\n\t  }\n\t\n\t  if (Object.getPrototypeOf) {\n\t    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n\t    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n\t      throwUnlessTargetIsObject(target);\n\t      return objectDotGetPrototypeOf(target);\n\t    };\n\t  }\n\t\n\t  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n\t    var willCreateCircularPrototype = function (object, lastProto) {\n\t      var proto = lastProto;\n\t      while (proto) {\n\t        if (object === proto) {\n\t          return true;\n\t        }\n\t        proto = ReflectShims.getPrototypeOf(proto);\n\t      }\n\t      return false;\n\t    };\n\t\n\t    Object.assign(ReflectShims, {\n\t      // Sets the prototype of the given object.\n\t      // Returns true on success, otherwise false.\n\t      setPrototypeOf: function setPrototypeOf(object, proto) {\n\t        throwUnlessTargetIsObject(object);\n\t        if (proto !== null && !ES.TypeIsObject(proto)) {\n\t          throw new TypeError('proto must be an object or null');\n\t        }\n\t\n\t        // If they already are the same, we're done.\n\t        if (proto === Reflect.getPrototypeOf(object)) {\n\t          return true;\n\t        }\n\t\n\t        // Cannot alter prototype if object not extensible.\n\t        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n\t          return false;\n\t        }\n\t\n\t        // Ensure that we do not create a circular prototype chain.\n\t        if (willCreateCircularPrototype(object, proto)) {\n\t          return false;\n\t        }\n\t\n\t        Object.setPrototypeOf(object, proto);\n\t\n\t        return true;\n\t      }\n\t    });\n\t  }\n\t  var defineOrOverrideReflectProperty = function (key, shim) {\n\t    if (!ES.IsCallable(globals.Reflect[key])) {\n\t      defineProperty(globals.Reflect, key, shim);\n\t    } else {\n\t      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n\t        globals.Reflect[key](1);\n\t        globals.Reflect[key](NaN);\n\t        globals.Reflect[key](true);\n\t        return true;\n\t      });\n\t      if (acceptsPrimitives) {\n\t        overrideNative(globals.Reflect, key, shim);\n\t      }\n\t    }\n\t  };\n\t  Object.keys(ReflectShims).forEach(function (key) {\n\t    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n\t  });\n\t  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n\t  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n\t    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n\t      return _call(originalReflectGetProto, globals.Reflect, target);\n\t    });\n\t  }\n\t  if (globals.Reflect.setPrototypeOf) {\n\t    if (valueOrFalseIfThrows(function () {\n\t      globals.Reflect.setPrototypeOf(1, {});\n\t      return true;\n\t    })) {\n\t      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n\t    }\n\t  }\n\t  if (globals.Reflect.defineProperty) {\n\t    if (!valueOrFalseIfThrows(function () {\n\t      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n\t      // \"extensible\" fails on Edge 0.12\n\t      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n\t      return basic && extensible;\n\t    })) {\n\t      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n\t    }\n\t  }\n\t  if (globals.Reflect.construct) {\n\t    if (!valueOrFalseIfThrows(function () {\n\t      var F = function F() {};\n\t      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n\t    })) {\n\t      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n\t    }\n\t  }\n\t\n\t  if (String(new Date(NaN)) !== 'Invalid Date') {\n\t    var dateToString = Date.prototype.toString;\n\t    var shimmedDateToString = function toString() {\n\t      var valueOf = +this;\n\t      if (valueOf !== valueOf) {\n\t        return 'Invalid Date';\n\t      }\n\t      return ES.Call(dateToString, this);\n\t    };\n\t    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n\t  }\n\t\n\t  // Annex B HTML methods\n\t  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-additional-properties-of-the-string.prototype-object\n\t  var stringHTMLshims = {\n\t    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n\t    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n\t    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n\t    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n\t    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n\t    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n\t    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n\t    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n\t    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n\t    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n\t    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n\t    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n\t    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n\t  };\n\t  _forEach(Object.keys(stringHTMLshims), function (key) {\n\t    var method = String.prototype[key];\n\t    var shouldOverwrite = false;\n\t    if (ES.IsCallable(method)) {\n\t      var output = _call(method, '', ' \" ');\n\t      var quotesCount = _concat([], output.match(/\"/g)).length;\n\t      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n\t    } else {\n\t      shouldOverwrite = true;\n\t    }\n\t    if (shouldOverwrite) {\n\t      overrideNative(String.prototype, key, stringHTMLshims[key]);\n\t    }\n\t  });\n\t\n\t  var JSONstringifiesSymbols = (function () {\n\t    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n\t    if (!hasSymbols) { return false; } // Symbols are not supported\n\t    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n\t    if (!stringify) { return false; } // JSON.stringify is not supported\n\t    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n\t    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n\t    var obj = { a: Symbol() };\n\t    obj[Symbol()] = true;\n\t    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n\t    return false;\n\t  }());\n\t  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n\t    // Chrome 45 throws on stringifying object symbols\n\t    if (!hasSymbols) { return true; } // Symbols are not supported\n\t    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n\t  });\n\t  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n\t    var origStringify = JSON.stringify;\n\t    overrideNative(JSON, 'stringify', function stringify(value) {\n\t      if (typeof value === 'symbol') { return; }\n\t      var replacer;\n\t      if (arguments.length > 1) {\n\t        replacer = arguments[1];\n\t      }\n\t      var args = [value];\n\t      if (!isArray(replacer)) {\n\t        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n\t        var wrappedReplacer = function (key, val) {\n\t          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n\t          if (typeof parsedValue !== 'symbol') {\n\t            if (Type.symbol(parsedValue)) {\n\t              return assignTo({})(parsedValue);\n\t            } else {\n\t              return parsedValue;\n\t            }\n\t          }\n\t        };\n\t        args.push(wrappedReplacer);\n\t      } else {\n\t        // create wrapped replacer that handles an array replacer?\n\t        args.push(replacer);\n\t      }\n\t      if (arguments.length > 2) {\n\t        args.push(arguments[2]);\n\t      }\n\t      return origStringify.apply(this, args);\n\t    });\n\t  }\n\t\n\t  return globals;\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(55)))\n\n/***/ }\n\n/******/ })));\n\n\n/** WEBPACK FOOTER **\n ** frontend.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tvar _m = moreModules[moduleId];\n\n \t\t\t// Check if module is deduplicated\n \t\t\tswitch(typeof _m) {\n \t\t\tcase \"object\":\n \t\t\t\t// Module can be created from a template\n \t\t\t\tmodules[moduleId] = (function(_m) {\n \t\t\t\t\tvar args = _m.slice(1), templateId = _m[0];\n \t\t\t\t\treturn function (a,b,c) {\n \t\t\t\t\t\tmodules[templateId].apply(this, [a,b,c].concat(args));\n \t\t\t\t\t};\n \t\t\t\t}(_m));\n \t\t\t\tbreak;\n \t\t\tcase \"function\":\n \t\t\t\t// Normal module\n \t\t\t\tmodules[moduleId] = _m;\n \t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\t// Module is a copy of another module\n \t\t\t\tmodules[moduleId] = modules[_m];\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t3:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({}[chunkId]||chunkId) + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wp-content/plugins/ams-acf-chart-field-type/assets/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4830818004b75b82a4b3\n **/","require('es6-shim')\nconst inputs = document.querySelectorAll('.acf-chart-input');\n\nArray.from(inputs).forEach(input => {\n  require([\n    'react',\n    'react-dom',\n    './containers/Frontend'\n  ], (React, ReactDOM, lib) => {\n    const Frontend = lib.default\n    const id = input.getAttribute('data-id')\n    const name = input.getAttribute('data-name')\n    const data = JSON.parse(input.value)\n    ReactDOM.render(\n      <Frontend\n        id={id}\n        name={name}\n        data={data}\n      ></Frontend>,\n      input.parentNode\n    )\n  })\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./assets/src/frontend.js\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 55\n ** module chunks = 0 3\n **/"," /*!\n  * https://github.com/paulmillr/es6-shim\n  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n  *   and contributors,  MIT License\n  * es6-shim: v0.35.0\n  * see https://github.com/paulmillr/es6-shim/blob/0.35.0/LICENSE\n  * Details and documentation:\n  * https://github.com/paulmillr/es6-shim/\n  */\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n  /*global define, module, exports */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory();\n  }\n}(this, function () {\n  'use strict';\n\n  var _apply = Function.call.bind(Function.apply);\n  var _call = Function.call.bind(Function.call);\n  var isArray = Array.isArray;\n  var keys = Object.keys;\n\n  var not = function notThunker(func) {\n    return function notThunk() { return !_apply(func, this, arguments); };\n  };\n  var throwsError = function (func) {\n    try {\n      func();\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n    try {\n      return func();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var isCallableWithoutNew = not(throwsError);\n  var arePropertyDescriptorsSupported = function () {\n    // if Object.defineProperty exists but throws, it's IE 8\n    return !throwsError(function () { Object.defineProperty({}, 'x', { get: function () {} }); });\n  };\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n  var functionsHaveNames = (function foo() {}).name === 'foo';\n\n  var _forEach = Function.call.bind(Array.prototype.forEach);\n  var _reduce = Function.call.bind(Array.prototype.reduce);\n  var _filter = Function.call.bind(Array.prototype.filter);\n  var _some = Function.call.bind(Array.prototype.some);\n\n  var defineProperty = function (object, name, value, force) {\n    if (!force && name in object) { return; }\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  // Define configurable, writable and non-enumerable props\n  // if they don’t exist.\n  var defineProperties = function (object, map, forceOverride) {\n    _forEach(keys(map), function (name) {\n      var method = map[name];\n      defineProperty(object, name, method, !!forceOverride);\n    });\n  };\n\n  var _toString = Function.call.bind(Object.prototype.toString);\n  var isCallable = typeof /abc/ === 'function' ? function IsCallableSlow(x) {\n    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\n    return typeof x === 'function' && _toString(x) === '[object Function]';\n  } : function IsCallableFast(x) { return typeof x === 'function'; };\n\n  var Value = {\n    getter: function (object, name, getter) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        get: getter\n      });\n    },\n    proxy: function (originalObject, key, targetObject) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n      Object.defineProperty(targetObject, key, {\n        configurable: originalDescriptor.configurable,\n        enumerable: originalDescriptor.enumerable,\n        get: function getKey() { return originalObject[key]; },\n        set: function setKey(value) { originalObject[key] = value; }\n      });\n    },\n    redefine: function (object, property, newValue) {\n      if (supportsDescriptors) {\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n        descriptor.value = newValue;\n        Object.defineProperty(object, property, descriptor);\n      } else {\n        object[property] = newValue;\n      }\n    },\n    defineByDescriptor: function (object, property, descriptor) {\n      if (supportsDescriptors) {\n        Object.defineProperty(object, property, descriptor);\n      } else if ('value' in descriptor) {\n        object[property] = descriptor.value;\n      }\n    },\n    preserveToString: function (target, source) {\n      if (source && isCallable(source.toString)) {\n        defineProperty(target, 'toString', source.toString.bind(source), true);\n      }\n    }\n  };\n\n  // Simple shim for Object.create on ES3 browsers\n  // (unlike real shim, no attempt to support `prototype === null`)\n  var create = Object.create || function (prototype, properties) {\n    var Prototype = function Prototype() {};\n    Prototype.prototype = prototype;\n    var object = new Prototype();\n    if (typeof properties !== 'undefined') {\n      keys(properties).forEach(function (key) {\n        Value.defineByDescriptor(object, key, properties[key]);\n      });\n    }\n    return object;\n  };\n\n  var supportsSubclassing = function (C, f) {\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n    return valueOrFalseIfThrows(function () {\n      var Sub = function Subclass(arg) {\n        var o = new C(arg);\n        Object.setPrototypeOf(o, Subclass.prototype);\n        return o;\n      };\n      Object.setPrototypeOf(Sub, C);\n      Sub.prototype = create(C.prototype, {\n        constructor: { value: Sub }\n      });\n      return f(Sub);\n    });\n  };\n\n  var getGlobal = function () {\n    /* global self, window, global */\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n  };\n\n  var globals = getGlobal();\n  var globalIsFinite = globals.isFinite;\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n  var _concat = Function.call.bind(Array.prototype.concat);\n  var _sort = Function.call.bind(Array.prototype.sort);\n  var _strSlice = Function.call.bind(String.prototype.slice);\n  var _push = Function.call.bind(Array.prototype.push);\n  var _pushApply = Function.apply.bind(Array.prototype.push);\n  var _shift = Function.call.bind(Array.prototype.shift);\n  var _max = Math.max;\n  var _min = Math.min;\n  var _floor = Math.floor;\n  var _abs = Math.abs;\n  var _log = Math.log;\n  var _sqrt = Math.sqrt;\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  var ArrayIterator; // make our implementation private\n  var noop = function () {};\n\n  var Symbol = globals.Symbol || {};\n  var symbolSpecies = Symbol.species || '@@species';\n\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\n    // then x is NaN.\n    // isNaN is broken: it converts its argument to number, so\n    // isNaN('foo') => true\n    return value !== value;\n  };\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\n    return typeof value === 'number' && globalIsFinite(value);\n  };\n\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n  // can be replaced with require('is-arguments') if we ever use a build process instead\n  var isStandardArguments = function isArguments(value) {\n    return _toString(value) === '[object Arguments]';\n  };\n  var isLegacyArguments = function isArguments(value) {\n    return value !== null &&\n      typeof value === 'object' &&\n      typeof value.length === 'number' &&\n      value.length >= 0 &&\n      _toString(value) !== '[object Array]' &&\n      _toString(value.callee) === '[object Function]';\n  };\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n  var Type = {\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n    object: function (x) { return x !== null && typeof x === 'object'; },\n    string: function (x) { return _toString(x) === '[object String]'; },\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n    symbol: function (x) {\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n    }\n  };\n\n  var overrideNative = function overrideNative(object, property, replacement) {\n    var original = object[property];\n    defineProperty(object, property, replacement, true);\n    Value.preserveToString(object[property], original);\n  };\n\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n  // we're going to use an arbitrary _-prefixed name to make our shims\n  // work properly with each other, even though we don't have full Iterator\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\n  // pretend to export a \"real\" Iterator interface.\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n  // Firefox ships a partial implementation using the name @@iterator.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n  // So use that name if we detect it.\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  // Reflect\n  if (!globals.Reflect) {\n    defineProperty(globals, 'Reflect', {}, true);\n  }\n  var Reflect = globals.Reflect;\n\n  var $String = String;\n\n  var ES = {\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n    Call: function Call(F, V) {\n      var args = arguments.length > 2 ? arguments[2] : [];\n      if (!ES.IsCallable(F)) {\n        throw new TypeError(F + ' is not a function');\n      }\n      return _apply(F, V, args);\n    },\n\n    RequireObjectCoercible: function (x, optMessage) {\n      /* jshint eqnull:true */\n      if (x == null) {\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n      }\n      return x;\n    },\n\n    // This might miss the \"(non-standard exotic and does not implement\n    // [[Call]])\" case from\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n    // but we can't find any evidence these objects exist in practice.\n    // If we find some in the future, you could test `Object(x) === x`,\n    // which is reliable according to\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n    // but is not well optimized by runtimes and creates an object\n    // whenever it returns false, and thus is very slow.\n    TypeIsObject: function (x) {\n      if (x === void 0 || x === null || x === true || x === false) {\n        return false;\n      }\n      return typeof x === 'function' || typeof x === 'object';\n    },\n\n    ToObject: function (o, optMessage) {\n      return Object(ES.RequireObjectCoercible(o, optMessage));\n    },\n\n    IsCallable: isCallable,\n\n    IsConstructor: function (x) {\n      // We can't tell callables from constructors in ES5\n      return ES.IsCallable(x);\n    },\n\n    ToInt32: function (x) {\n      return ES.ToNumber(x) >> 0;\n    },\n\n    ToUint32: function (x) {\n      return ES.ToNumber(x) >>> 0;\n    },\n\n    ToNumber: function (value) {\n      if (_toString(value) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return +value;\n    },\n\n    ToInteger: function (value) {\n      var number = ES.ToNumber(value);\n      if (numberIsNaN(number)) { return 0; }\n      if (number === 0 || !numberIsFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n    },\n\n    ToLength: function (value) {\n      var len = ES.ToInteger(value);\n      if (len <= 0) { return 0; } // includes converting -0 to +0\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n      return len;\n    },\n\n    SameValue: function (a, b) {\n      if (a === b) {\n        // 0 === -0, but they are not identical.\n        if (a === 0) { return 1 / a === 1 / b; }\n        return true;\n      }\n      return numberIsNaN(a) && numberIsNaN(b);\n    },\n\n    SameValueZero: function (a, b) {\n      // same as SameValue except for SameValueZero(+0, -0) == true\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n    },\n\n    IsIterable: function (o) {\n      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\n    },\n\n    GetIterator: function (o) {\n      if (isArguments(o)) {\n        // special case support for `arguments`\n        return new ArrayIterator(o, 'value');\n      }\n      var itFn = ES.GetMethod(o, $iterator$);\n      if (!ES.IsCallable(itFn)) {\n        // Better diagnostics if itFn is null or undefined\n        throw new TypeError('value is not an iterable');\n      }\n      var it = ES.Call(itFn, o);\n      if (!ES.TypeIsObject(it)) {\n        throw new TypeError('bad iterator');\n      }\n      return it;\n    },\n\n    GetMethod: function (o, p) {\n      var func = ES.ToObject(o)[p];\n      if (func === void 0 || func === null) {\n        return void 0;\n      }\n      if (!ES.IsCallable(func)) {\n        throw new TypeError('Method not callable: ' + p);\n      }\n      return func;\n    },\n\n    IteratorComplete: function (iterResult) {\n      return !!(iterResult.done);\n    },\n\n    IteratorClose: function (iterator, completionIsThrow) {\n      var returnMethod = ES.GetMethod(iterator, 'return');\n      if (returnMethod === void 0) {\n        return;\n      }\n      var innerResult, innerException;\n      try {\n        innerResult = ES.Call(returnMethod, iterator);\n      } catch (e) {\n        innerException = e;\n      }\n      if (completionIsThrow) {\n        return;\n      }\n      if (innerException) {\n        throw innerException;\n      }\n      if (!ES.TypeIsObject(innerResult)) {\n        throw new TypeError(\"Iterator's return method returned a non-object.\");\n      }\n    },\n\n    IteratorNext: function (it) {\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n      if (!ES.TypeIsObject(result)) {\n        throw new TypeError('bad iterator');\n      }\n      return result;\n    },\n\n    IteratorStep: function (it) {\n      var result = ES.IteratorNext(it);\n      var done = ES.IteratorComplete(result);\n      return done ? false : result;\n    },\n\n    Construct: function (C, args, newTarget, isES6internal) {\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\n      if (!isES6internal && Reflect.construct) {\n        // Try to use Reflect.construct if available\n        return Reflect.construct(C, args, target);\n      }\n      // OK, we have to fake it.  This will only work if the\n      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n      // kind we can make in ES5 code anyway.\n\n      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n      var proto = target.prototype;\n      if (!ES.TypeIsObject(proto)) {\n        proto = Object.prototype;\n      }\n      var obj = create(proto);\n      // Call the constructor.\n      var result = ES.Call(C, obj, args);\n      return ES.TypeIsObject(result) ? result : obj;\n    },\n\n    SpeciesConstructor: function (O, defaultConstructor) {\n      var C = O.constructor;\n      if (C === void 0) {\n        return defaultConstructor;\n      }\n      if (!ES.TypeIsObject(C)) {\n        throw new TypeError('Bad constructor');\n      }\n      var S = C[symbolSpecies];\n      if (S === void 0 || S === null) {\n        return defaultConstructor;\n      }\n      if (!ES.IsConstructor(S)) {\n        throw new TypeError('Bad @@species');\n      }\n      return S;\n    },\n\n    CreateHTML: function (string, tag, attribute, value) {\n      var S = ES.ToString(string);\n      var p1 = '<' + tag;\n      if (attribute !== '') {\n        var V = ES.ToString(value);\n        var escapedV = V.replace(/\"/g, '&quot;');\n        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n      }\n      var p2 = p1 + '>';\n      var p3 = p2 + S;\n      return p3 + '</' + tag + '>';\n    },\n\n    IsRegExp: function IsRegExp(argument) {\n      if (!ES.TypeIsObject(argument)) {\n        return false;\n      }\n      var isRegExp = argument[Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return !!isRegExp;\n      }\n      return Type.regex(argument);\n    },\n\n    ToString: function ToString(string) {\n      return $String(string);\n    }\n  };\n\n  // Well-known Symbol shims\n  if (supportsDescriptors && hasSymbols) {\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n      if (Type.symbol(Symbol[name])) {\n        return Symbol[name];\n      }\n      var sym = Symbol['for']('Symbol.' + name);\n      Object.defineProperty(Symbol, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: sym\n      });\n      return sym;\n    };\n    if (!Type.symbol(Symbol.search)) {\n      var symbolSearch = defineWellKnownSymbol('search');\n      var originalSearch = String.prototype.search;\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n        return ES.Call(originalSearch, string, [this]);\n      });\n      var searchShim = function search(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (regexp !== null && typeof regexp !== 'undefined') {\n          var searcher = ES.GetMethod(regexp, symbolSearch);\n          if (typeof searcher !== 'undefined') {\n            return ES.Call(searcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'search', searchShim);\n    }\n    if (!Type.symbol(Symbol.replace)) {\n      var symbolReplace = defineWellKnownSymbol('replace');\n      var originalReplace = String.prototype.replace;\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n        return ES.Call(originalReplace, string, [this, replaceValue]);\n      });\n      var replaceShim = function replace(searchValue, replaceValue) {\n        var O = ES.RequireObjectCoercible(this);\n        if (searchValue !== null && typeof searchValue !== 'undefined') {\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\n          if (typeof replacer !== 'undefined') {\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\n          }\n        }\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n      };\n      overrideNative(String.prototype, 'replace', replaceShim);\n    }\n    if (!Type.symbol(Symbol.split)) {\n      var symbolSplit = defineWellKnownSymbol('split');\n      var originalSplit = String.prototype.split;\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n        return ES.Call(originalSplit, string, [this, limit]);\n      });\n      var splitShim = function split(separator, limit) {\n        var O = ES.RequireObjectCoercible(this);\n        if (separator !== null && typeof separator !== 'undefined') {\n          var splitter = ES.GetMethod(separator, symbolSplit);\n          if (typeof splitter !== 'undefined') {\n            return ES.Call(splitter, separator, [O, limit]);\n          }\n        }\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n      };\n      overrideNative(String.prototype, 'split', splitShim);\n    }\n    var symbolMatchExists = Type.symbol(Symbol.match);\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n      // Firefox 40 and below have Symbol.match but String#match works fine.\n      var o = {};\n      o[Symbol.match] = function () { return 42; };\n      return 'a'.match(o) !== 42;\n    }());\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n      var symbolMatch = defineWellKnownSymbol('match');\n\n      var originalMatch = String.prototype.match;\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n        return ES.Call(originalMatch, string, [this]);\n      });\n\n      var matchShim = function match(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (regexp !== null && typeof regexp !== 'undefined') {\n          var matcher = ES.GetMethod(regexp, symbolMatch);\n          if (typeof matcher !== 'undefined') {\n            return ES.Call(matcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'match', matchShim);\n    }\n  }\n\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n    Value.preserveToString(replacement, original);\n    if (Object.setPrototypeOf) {\n      // sets up proper prototype chain where possible\n      Object.setPrototypeOf(original, replacement);\n    }\n    if (supportsDescriptors) {\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        Value.proxy(original, key, replacement);\n      });\n    } else {\n      _forEach(Object.keys(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        replacement[key] = original[key];\n      });\n    }\n    replacement.prototype = original.prototype;\n    Value.redefine(original.prototype, 'constructor', replacement);\n  };\n\n  var defaultSpeciesGetter = function () { return this; };\n  var addDefaultSpecies = function (C) {\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n    }\n  };\n\n  var addIterator = function (prototype, impl) {\n    var implementation = impl || function iterator() { return this; };\n    defineProperty(prototype, $iterator$, implementation);\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n      // implementations are buggy when $iterator$ is a Symbol\n      prototype[$iterator$] = implementation;\n    }\n  };\n\n  var createDataProperty = function createDataProperty(object, name, value) {\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n    createDataProperty(object, name, value);\n    if (!ES.SameValue(object[name], value)) {\n      throw new TypeError('property is nonconfigurable');\n    }\n  };\n\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n    // This is an es5 approximation to es6 construct semantics.  in es6,\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n    // to Foo and then returns Foo().\n\n    // Many ES6 object then have constructors of the form:\n    // 1. If NewTarget is undefined, throw a TypeError exception\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\n    // So we're going to emulate those first two steps.\n    if (!ES.TypeIsObject(o)) {\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n    }\n    var proto = defaultNewTarget.prototype;\n    if (!ES.TypeIsObject(proto)) {\n      proto = defaultProto;\n    }\n    var obj = create(proto);\n    for (var name in slots) {\n      if (_hasOwnProperty(slots, name)) {\n        var value = slots[name];\n        defineProperty(obj, name, value, true);\n      }\n    }\n    return obj;\n  };\n\n  // Firefox 31 reports this function's length as 0\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n    var originalFromCodePoint = String.fromCodePoint;\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) { return ES.Call(originalFromCodePoint, this, arguments); });\n  }\n\n  var StringShims = {\n    fromCodePoint: function fromCodePoint(codePoints) {\n      var result = [];\n      var next;\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        next = Number(arguments[i]);\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n          throw new RangeError('Invalid code point ' + next);\n        }\n\n        if (next < 0x10000) {\n          _push(result, String.fromCharCode(next));\n        } else {\n          next -= 0x10000;\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n        }\n      }\n      return result.join('');\n    },\n\n    raw: function raw(callSite) {\n      var cooked = ES.ToObject(callSite, 'bad callSite');\n      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\n      var len = rawString.length;\n      var literalsegments = ES.ToLength(len);\n      if (literalsegments <= 0) {\n        return '';\n      }\n\n      var stringElements = [];\n      var nextIndex = 0;\n      var nextKey, next, nextSeg, nextSub;\n      while (nextIndex < literalsegments) {\n        nextKey = ES.ToString(nextIndex);\n        nextSeg = ES.ToString(rawString[nextKey]);\n        _push(stringElements, nextSeg);\n        if (nextIndex + 1 >= literalsegments) {\n          break;\n        }\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n        nextSub = ES.ToString(next);\n        _push(stringElements, nextSub);\n        nextIndex += 1;\n      }\n      return stringElements.join('');\n    }\n  };\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n    // IE 11 TP has a broken String.raw implementation\n    overrideNative(String, 'raw', StringShims.raw);\n  }\n  defineProperties(String, StringShims);\n\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n  // Perf: http://jsperf.com/string-repeat2/2\n  var stringRepeat = function repeat(s, times) {\n    if (times < 1) { return ''; }\n    if (times % 2) { return repeat(s, times - 1) + s; }\n    var half = repeat(s, times / 2);\n    return half + half;\n  };\n  var stringMaxLength = Infinity;\n\n  var StringPrototypeShims = {\n    repeat: function repeat(times) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var numTimes = ES.ToInteger(times);\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n      }\n      return stringRepeat(thisStr, numTimes);\n    },\n\n    startsWith: function startsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      var start = _max(ES.ToInteger(position), 0);\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\n    },\n\n    endsWith: function endsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var len = S.length;\n      var endPosition;\n      if (arguments.length > 1) {\n        endPosition = arguments[1];\n      }\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n      var end = _min(_max(pos, 0), len);\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\n    },\n\n    includes: function includes(searchString) {\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('\"includes\" does not accept a RegExp');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      // Somehow this trick makes method 100% compat with the spec.\n      return _indexOf(this, searchStr, position) !== -1;\n    },\n\n    codePointAt: function codePointAt(pos) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var position = ES.ToInteger(pos);\n      var length = thisStr.length;\n      if (position >= 0 && position < length) {\n        var first = thisStr.charCodeAt(position);\n        var isEnd = (position + 1 === length);\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n        var second = thisStr.charCodeAt(position + 1);\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n      }\n    }\n  };\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n  }\n\n  if (String.prototype.startsWith && String.prototype.endsWith) {\n    var startsWithRejectsRegex = throwsError(function () {\n      /* throws if spec-compliant */\n      '/a/'.startsWith(/a/);\n    });\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n      return 'abc'.startsWith('a', Infinity) === false;\n    });\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n  }\n  if (hasSymbols) {\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.startsWith(re);\n    });\n    if (!startsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n    }\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.endsWith(re);\n    });\n    if (!endsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.includes(re);\n    });\n    if (!includesSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n    }\n  }\n\n  defineProperties(String.prototype, StringPrototypeShims);\n\n  // whitespace from: http://es5.github.io/#x15.5.4.20\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n  var ws = [\n    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n    '\\u2029\\uFEFF'\n  ].join('');\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n  var trimShim = function trim() {\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n  };\n  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n  var isBadHexRegex = /^[\\-+]0x[0-9a-f]+$/i;\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\n  // see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator\n  var StringIterator = function (s) {\n    ES.RequireObjectCoercible(s);\n    this._s = ES.ToString(s);\n    this._i = 0;\n  };\n  StringIterator.prototype.next = function () {\n    var s = this._s, i = this._i;\n    if (typeof s === 'undefined' || i >= s.length) {\n      this._s = void 0;\n      return { value: void 0, done: true };\n    }\n    var first = s.charCodeAt(i), second, len;\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n      len = 1;\n    } else {\n      second = s.charCodeAt(i + 1);\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n    }\n    this._i = i + len;\n    return { value: s.substr(i, len), done: false };\n  };\n  addIterator(StringIterator.prototype);\n  addIterator(String.prototype, function () {\n    return new StringIterator(this);\n  });\n\n  var ArrayShims = {\n    from: function from(items) {\n      var C = this;\n      var mapFn;\n      if (arguments.length > 1) {\n        mapFn = arguments[1];\n      }\n      var mapping, T;\n      if (typeof mapFn === 'undefined') {\n        mapping = false;\n      } else {\n        if (!ES.IsCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n        mapping = true;\n      }\n\n      // Note that that Arrays will use ArrayIterator:\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\n      var length, result, i;\n      if (usingIterator) {\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\n        var iterator = ES.GetIterator(items);\n        var next, nextValue;\n\n        i = 0;\n        while (true) {\n          next = ES.IteratorStep(iterator);\n          if (next === false) {\n            break;\n          }\n          nextValue = next.value;\n          try {\n            if (mapping) {\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n            }\n            result[i] = nextValue;\n          } catch (e) {\n            ES.IteratorClose(iterator, true);\n            throw e;\n          }\n          i += 1;\n        }\n        length = i;\n      } else {\n        var arrayLike = ES.ToObject(items);\n        length = ES.ToLength(arrayLike.length);\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n        var value;\n        for (i = 0; i < length; ++i) {\n          value = arrayLike[i];\n          if (mapping) {\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n          }\n          result[i] = value;\n        }\n      }\n\n      result.length = length;\n      return result;\n    },\n\n    of: function of() {\n      var len = arguments.length;\n      var C = this;\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n      for (var k = 0; k < len; ++k) {\n        createDataPropertyOrThrow(A, k, arguments[k]);\n      }\n      A.length = len;\n      return A;\n    }\n  };\n  defineProperties(Array, ArrayShims);\n  addDefaultSpecies(Array);\n\n  // Given an argument x, it will return an IteratorResult object,\n  // with value set to x and done to false.\n  // Given no arguments, it will return an iterator completion object.\n  var iteratorResult = function (x) {\n    return { value: x, done: arguments.length === 0 };\n  };\n\n  // Our ArrayIterator is private; see\n  // https://github.com/paulmillr/es6-shim/issues/252\n  ArrayIterator = function (array, kind) {\n      this.i = 0;\n      this.array = array;\n      this.kind = kind;\n  };\n\n  defineProperties(ArrayIterator.prototype, {\n    next: function () {\n      var i = this.i, array = this.array;\n      if (!(this instanceof ArrayIterator)) {\n        throw new TypeError('Not an ArrayIterator');\n      }\n      if (typeof array !== 'undefined') {\n        var len = ES.ToLength(array.length);\n        for (; i < len; i++) {\n          var kind = this.kind;\n          var retval;\n          if (kind === 'key') {\n            retval = i;\n          } else if (kind === 'value') {\n            retval = array[i];\n          } else if (kind === 'entry') {\n            retval = [i, array[i]];\n          }\n          this.i = i + 1;\n          return { value: retval, done: false };\n        }\n      }\n      this.array = void 0;\n      return { value: void 0, done: true };\n    }\n  });\n  addIterator(ArrayIterator.prototype);\n\n  var orderKeys = function orderKeys(a, b) {\n    var aNumeric = String(ES.ToInteger(a)) === a;\n    var bNumeric = String(ES.ToInteger(b)) === b;\n    if (aNumeric && bNumeric) {\n      return b - a;\n    } else if (aNumeric && !bNumeric) {\n      return -1;\n    } else if (!aNumeric && bNumeric) {\n      return 1;\n    } else {\n      return a.localeCompare(b);\n    }\n  };\n  var getAllKeys = function getAllKeys(object) {\n    var ownKeys = [];\n    var keys = [];\n\n    for (var key in object) {\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n    }\n    _sort(ownKeys, orderKeys);\n    _sort(keys, orderKeys);\n\n    return _concat(ownKeys, keys);\n  };\n\n  // note: this is positioned here because it depends on ArrayIterator\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n    // Detects a bug in Webkit nightly r181886\n    var Foo = function Foo(len) { this.length = len; };\n    Foo.prototype = [];\n    var fooArr = Array.of.apply(Foo, [1, 2]);\n    return fooArr instanceof Foo && fooArr.length === 2;\n  }());\n  if (!arrayOfSupportsSubclassing) {\n    overrideNative(Array, 'of', ArrayShims.of);\n  }\n\n  var ArrayPrototypeShims = {\n    copyWithin: function copyWithin(target, start) {\n      var o = ES.ToObject(this);\n      var len = ES.ToLength(o.length);\n      var relativeTarget = ES.ToInteger(target);\n      var relativeStart = ES.ToInteger(start);\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n      var count = _min(finalItem - from, len - to);\n      var direction = 1;\n      if (from < to && to < (from + count)) {\n        direction = -1;\n        from += count - 1;\n        to += count - 1;\n      }\n      while (count > 0) {\n        if (from in o) {\n          o[to] = o[from];\n        } else {\n          delete o[to];\n        }\n        from += direction;\n        to += direction;\n        count -= 1;\n      }\n      return o;\n    },\n\n    fill: function fill(value) {\n      var start;\n      if (arguments.length > 1) {\n        start = arguments[1];\n      }\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var O = ES.ToObject(this);\n      var len = ES.ToLength(O.length);\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n      var relativeEnd = end < 0 ? len + end : end;\n\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n        O[i] = value;\n      }\n      return O;\n    },\n\n    find: function find(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#find: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0, value; i < length; i++) {\n        value = list[i];\n        if (thisArg) {\n          if (_call(predicate, thisArg, value, i, list)) { return value; }\n        } else if (predicate(value, i, list)) {\n          return value;\n        }\n      }\n    },\n\n    findIndex: function findIndex(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#findIndex: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0; i < length; i++) {\n        if (thisArg) {\n          if (_call(predicate, thisArg, list[i], i, list)) { return i; }\n        } else if (predicate(list[i], i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    keys: function keys() {\n      return new ArrayIterator(this, 'key');\n    },\n\n    values: function values() {\n      return new ArrayIterator(this, 'value');\n    },\n\n    entries: function entries() {\n      return new ArrayIterator(this, 'entry');\n    }\n  };\n  // Safari 7.1 defines Array#keys and Array#entries natively,\n  // but the resulting ArrayIterator objects don't have a \"next\" method.\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n    delete Array.prototype.keys;\n  }\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n    delete Array.prototype.entries;\n  }\n\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n    defineProperties(Array.prototype, {\n      values: Array.prototype[$iterator$]\n    });\n    if (Type.symbol(Symbol.unscopables)) {\n      Array.prototype[Symbol.unscopables].values = true;\n    }\n  }\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n    var originalArrayPrototypeValues = Array.prototype.values;\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n  }\n  defineProperties(Array.prototype, ArrayPrototypeShims);\n\n  if (1 / [true].indexOf(true, -0) < 0) {\n    // indexOf when given a position arg of -0 should return +0.\n    // https://github.com/tc39/ecma262/pull/316\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n      var value = _arrayIndexOfApply(this, arguments);\n      if (value === 0 && (1 / value) < 0) {\n        return 0;\n      }\n      return value;\n    }, true);\n  }\n\n  addIterator(Array.prototype, function () { return this.values(); });\n  // Chrome defines keys/values/entries on Array, but doesn't give us\n  // any way to identify its iterator.  So add our own shimmed field.\n  if (Object.getPrototypeOf) {\n    addIterator(Object.getPrototypeOf([].values()));\n  }\n\n  // note: this is positioned here because it relies on Array#entries\n  var arrayFromSwallowsNegativeLengths = (function () {\n    // Detects a Firefox bug in v32\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n    return valueOrFalseIfThrows(function () { return Array.from({ length: -1 }).length === 0; });\n  }());\n  var arrayFromHandlesIterables = (function () {\n    // Detects a bug in Webkit nightly r181886\n    var arr = Array.from([0].entries());\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n  }());\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n    overrideNative(Array, 'from', ArrayShims.from);\n  }\n  var arrayFromHandlesUndefinedMapFunction = (function () {\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n    return valueOrFalseIfThrows(function () { return Array.from([0], void 0); });\n  }());\n  if (!arrayFromHandlesUndefinedMapFunction) {\n    var origArrayFrom = Array.from;\n    overrideNative(Array, 'from', function from(items) {\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n        return ES.Call(origArrayFrom, this, arguments);\n      } else {\n        return _call(origArrayFrom, this, items);\n      }\n    });\n  }\n\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\n  var toLengthsCorrectly = function (method, reversed) {\n    var obj = { length: int32sAsOne };\n    obj[reversed ? ((obj.length >>> 0) - 1) : 0] = true;\n    return valueOrFalseIfThrows(function () {\n      _call(method, obj, function () {\n        // note: in nonconforming browsers, this will be called\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n        throw new RangeError('should not reach here');\n      }, []);\n      return true;\n    });\n  };\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n    var originalForEach = Array.prototype.forEach;\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.map)) {\n    var originalMap = Array.prototype.map;\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\n    var originalFilter = Array.prototype.filter;\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.some)) {\n    var originalSome = Array.prototype.some;\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.every)) {\n    var originalEvery = Array.prototype.every;\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n    var originalReduce = Array.prototype.reduce;\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n    var originalReduceRight = Array.prototype.reduceRight;\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n\n  var lacksOctalSupport = Number('0o10') !== 8;\n  var lacksBinarySupport = Number('0b10') !== 2;\n  var trimsNonWhitespace = _some(nonWS, function (c) {\n    return Number(c + 0 + c) === 0;\n  });\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n    var OrigNumber = Number;\n    var binaryRegex = /^0b[01]+$/i;\n    var octalRegex = /^0o[0-7]+$/i;\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n    var isBinary = binaryRegex.test.bind(binaryRegex);\n    var isOctal = octalRegex.test.bind(octalRegex);\n    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\n      var result;\n      if (typeof O.valueOf === 'function') {\n        result = O.valueOf();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      if (typeof O.toString === 'function') {\n        result = O.toString();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      throw new TypeError('No default value');\n    };\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n    var NumberShim = (function () {\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n      var NumberShim = function Number(value) {\n        var primValue;\n        if (arguments.length > 0) {\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n        } else {\n          primValue = 0;\n        }\n        if (typeof primValue === 'string') {\n          primValue = ES.Call(trimShim, primValue);\n          if (isBinary(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 2);\n          } else if (isOctal(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 8);\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n            primValue = NaN;\n          }\n        }\n        var receiver = this;\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n          OrigNumber.prototype.valueOf.call(receiver);\n          return true;\n        });\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n          return new OrigNumber(primValue);\n        }\n        /* jshint newcap: false */\n        return OrigNumber(primValue);\n        /* jshint newcap: true */\n      };\n      return NumberShim;\n    }());\n    wrapConstructor(OrigNumber, NumberShim, {});\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n    defineProperties(NumberShim, {\n      NaN: OrigNumber.NaN,\n      MAX_VALUE: OrigNumber.MAX_VALUE,\n      MIN_VALUE: OrigNumber.MIN_VALUE,\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n    });\n    /* globals Number: true */\n    /* eslint-disable no-undef */\n    /* jshint -W020 */\n    Number = NumberShim;\n    Value.redefine(globals, 'Number', NumberShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef */\n    /* globals Number: false */\n  }\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  defineProperties(Number, {\n    MAX_SAFE_INTEGER: maxSafeInteger,\n    MIN_SAFE_INTEGER: -maxSafeInteger,\n    EPSILON: 2.220446049250313e-16,\n\n    parseInt: globals.parseInt,\n    parseFloat: globals.parseFloat,\n\n    isFinite: numberIsFinite,\n\n    isInteger: function isInteger(value) {\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\n    },\n\n    isSafeInteger: function isSafeInteger(value) {\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n    },\n\n    isNaN: numberIsNaN\n  });\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\n  // Work around bugs in Array#find and Array#findIndex -- early\n  // implementations skipped holes in sparse arrays. (Note that the\n  // implementations of find/findIndex indirectly use shimmed\n  // methods of Number, so this test has to happen down here.)\n  /*jshint elision: true */\n  /* eslint-disable no-sparse-arrays */\n  if (![, 1].find(function (item, idx) { return idx === 0; })) {\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n  }\n  if ([, 1].findIndex(function (item, idx) { return idx === 0; }) !== 0) {\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n  }\n  /* eslint-enable no-sparse-arrays */\n  /*jshint elision: false */\n\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n      Object.defineProperty(obj, prop, { enumerable: false });\n    }\n  };\n  var sliceArgs = function sliceArgs() {\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n    var initial = Number(this);\n    var len = arguments.length;\n    var desiredArgCount = len - initial;\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n    for (var i = initial; i < len; ++i) {\n      args[i - initial] = arguments[i];\n    }\n    return args;\n  };\n  var assignTo = function assignTo(source) {\n    return function assignToSource(target, key) {\n      target[key] = source[key];\n      return target;\n    };\n  };\n  var assignReducer = function (target, source) {\n    var sourceKeys = keys(Object(source));\n    var symbols;\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n    }\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n  };\n\n  var ObjectShims = {\n    // 19.1.3.1\n    assign: function (target, source) {\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n    },\n\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n    is: function is(a, b) {\n      return ES.SameValue(a, b);\n    }\n  };\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({ 1: 2 });\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      return thrower[1] === 'y';\n    }\n  }());\n  if (assignHasPendingExceptions) {\n    overrideNative(Object, 'assign', ObjectShims.assign);\n  }\n  defineProperties(Object, ObjectShims);\n\n  if (supportsDescriptors) {\n    var ES5ObjectShims = {\n      // 19.1.3.9\n      // shim from https://gist.github.com/WebReflection/5593554\n      setPrototypeOf: (function (Object, magic) {\n        var set;\n\n        var checkArgs = function (O, proto) {\n          if (!ES.TypeIsObject(O)) {\n            throw new TypeError('cannot set prototype on a non-object');\n          }\n          if (!(proto === null || ES.TypeIsObject(proto))) {\n            throw new TypeError('can only set prototype to an object or null' + proto);\n          }\n        };\n\n        var setPrototypeOf = function (O, proto) {\n          checkArgs(O, proto);\n          _call(set, O, proto);\n          return O;\n        };\n\n        try {\n          // this works already in Firefox and Safari\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n          _call(set, {}, null);\n        } catch (e) {\n          if (Object.prototype !== {}[magic]) {\n            // IE < 11 cannot be shimmed\n            return;\n          }\n          // probably Chrome or some old Mobile stock browser\n          set = function (proto) {\n            this[magic] = proto;\n          };\n          // please note that this will **not** work\n          // in those browsers that do not inherit\n          // __proto__ by mistake from Object.prototype\n          // in these cases we should probably throw an error\n          // or at least be informed about the issue\n          setPrototypeOf.polyfill = setPrototypeOf(\n            setPrototypeOf({}, null),\n            Object.prototype\n          ) instanceof Object;\n          // setPrototypeOf.polyfill === true means it works as meant\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\n          // setPrototypeOf.polyfill === undefined\n          // or\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n          // which means it works as expected\n          // we can even delete Object.prototype.__proto__;\n        }\n        return setPrototypeOf;\n      }(Object, '__proto__'))\n    };\n\n    defineProperties(Object, ES5ObjectShims);\n  }\n\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n  // but Object.create(null) does.\n  if (Object.setPrototypeOf && Object.getPrototypeOf &&\n      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\n      Object.getPrototypeOf(Object.create(null)) === null) {\n    (function () {\n      var FAKENULL = Object.create(null);\n      var gpo = Object.getPrototypeOf, spo = Object.setPrototypeOf;\n      Object.getPrototypeOf = function (o) {\n        var result = gpo(o);\n        return result === FAKENULL ? null : result;\n      };\n      Object.setPrototypeOf = function (o, p) {\n        var proto = p === null ? FAKENULL : p;\n        return spo(o, proto);\n      };\n      Object.setPrototypeOf.polyfill = false;\n    }());\n  }\n\n  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\n  if (!objectKeysAcceptsPrimitives) {\n    var originalObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      return originalObjectKeys(ES.ToObject(value));\n    });\n    keys = Object.keys;\n  }\n  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\n  if (objectKeysRejectsRegex) {\n    var regexRejectingObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      if (Type.regex(value)) {\n        var regexKeys = [];\n        for (var k in value) {\n          if (_hasOwnProperty(value, k)) {\n            _push(regexKeys, k);\n          }\n        }\n       return regexKeys;\n      }\n      return regexRejectingObjectKeys(value);\n    });\n    keys = Object.keys;\n  }\n\n  if (Object.getOwnPropertyNames) {\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\n    if (!objectGOPNAcceptsPrimitives) {\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n        var val = ES.ToObject(value);\n        if (_toString(val) === '[object Window]') {\n          try {\n            return originalObjectGetOwnPropertyNames(val);\n          } catch (e) {\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n            return _concat([], cachedWindowNames);\n          }\n        }\n        return originalObjectGetOwnPropertyNames(val);\n      });\n    }\n  }\n  if (Object.getOwnPropertyDescriptor) {\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\n    if (!objectGOPDAcceptsPrimitives) {\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n      });\n    }\n  }\n  if (Object.seal) {\n    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\n    if (!objectSealAcceptsPrimitives) {\n      var originalObjectSeal = Object.seal;\n      overrideNative(Object, 'seal', function seal(value) {\n        if (!Type.object(value)) { return value; }\n        return originalObjectSeal(value);\n      });\n    }\n  }\n  if (Object.isSealed) {\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\n    if (!objectIsSealedAcceptsPrimitives) {\n      var originalObjectIsSealed = Object.isSealed;\n      overrideNative(Object, 'isSealed', function isSealed(value) {\n        if (!Type.object(value)) { return true; }\n        return originalObjectIsSealed(value);\n      });\n    }\n  }\n  if (Object.freeze) {\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\n    if (!objectFreezeAcceptsPrimitives) {\n      var originalObjectFreeze = Object.freeze;\n      overrideNative(Object, 'freeze', function freeze(value) {\n        if (!Type.object(value)) { return value; }\n        return originalObjectFreeze(value);\n      });\n    }\n  }\n  if (Object.isFrozen) {\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\n    if (!objectIsFrozenAcceptsPrimitives) {\n      var originalObjectIsFrozen = Object.isFrozen;\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n        if (!Type.object(value)) { return true; }\n        return originalObjectIsFrozen(value);\n      });\n    }\n  }\n  if (Object.preventExtensions) {\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\n    if (!objectPreventExtensionsAcceptsPrimitives) {\n      var originalObjectPreventExtensions = Object.preventExtensions;\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n        if (!Type.object(value)) { return value; }\n        return originalObjectPreventExtensions(value);\n      });\n    }\n  }\n  if (Object.isExtensible) {\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\n    if (!objectIsExtensibleAcceptsPrimitives) {\n      var originalObjectIsExtensible = Object.isExtensible;\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n        if (!Type.object(value)) { return false; }\n        return originalObjectIsExtensible(value);\n      });\n    }\n  }\n  if (Object.getPrototypeOf) {\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\n    if (!objectGetProtoAcceptsPrimitives) {\n      var originalGetProto = Object.getPrototypeOf;\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n        return originalGetProto(ES.ToObject(value));\n      });\n    }\n  }\n\n  var hasFlags = supportsDescriptors && (function () {\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n    return desc && ES.IsCallable(desc.get);\n  }());\n  if (supportsDescriptors && !hasFlags) {\n    var regExpFlagsGetter = function flags() {\n      if (!ES.TypeIsObject(this)) {\n        throw new TypeError('Method called on incompatible type: must be an object.');\n      }\n      var result = '';\n      if (this.global) {\n        result += 'g';\n      }\n      if (this.ignoreCase) {\n        result += 'i';\n      }\n      if (this.multiline) {\n        result += 'm';\n      }\n      if (this.unicode) {\n        result += 'u';\n      }\n      if (this.sticky) {\n        result += 'y';\n      }\n      return result;\n    };\n\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n  }\n\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\n  });\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\n    var regex = /./;\n    regex[Symbol.match] = false;\n    return RegExp(regex) === regex;\n  }());\n\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n  });\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n  });\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n    var origRegExpToString = RegExp.prototype.toString;\n    defineProperty(RegExp.prototype, 'toString', function toString() {\n      var R = ES.RequireObjectCoercible(this);\n      if (Type.regex(R)) {\n        return _call(origRegExpToString, R);\n      }\n      var pattern = $String(R.source);\n      var flags = $String(R.flags);\n      return '/' + pattern + '/' + flags;\n    }, true);\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n  }\n\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n    var legacySourceGetter = function () { return this.source; }; // prior to it being a getter, it's own + nonconfigurable\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\n    var OrigRegExp = RegExp;\n    var RegExpShim = (function () {\n      return function RegExp(pattern, flags) {\n        var patternIsRegExp = ES.IsRegExp(pattern);\n        var calledWithNew = this instanceof RegExp;\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n          return pattern;\n        }\n\n        var P = pattern;\n        var F = flags;\n        if (Type.regex(pattern)) {\n          P = ES.Call(sourceGetter, pattern);\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n          return new RegExp(P, F);\n        } else if (patternIsRegExp) {\n          P = pattern.source;\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\n        }\n        return new OrigRegExp(pattern, flags);\n      };\n    }());\n    wrapConstructor(OrigRegExp, RegExpShim, {\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n    });\n    /* globals RegExp: true */\n    /* eslint-disable no-undef */\n    /* jshint -W020 */\n    RegExp = RegExpShim;\n    Value.redefine(globals, 'RegExp', RegExpShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef */\n    /* globals RegExp: false */\n  }\n\n  if (supportsDescriptors) {\n    var regexGlobals = {\n      input: '$_',\n      lastMatch: '$&',\n      lastParen: '$+',\n      leftContext: '$`',\n      rightContext: '$\\''\n    };\n    _forEach(keys(regexGlobals), function (prop) {\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n        Value.getter(RegExp, regexGlobals[prop], function get() {\n          return RegExp[prop];\n        });\n      }\n    });\n  }\n  addDefaultSpecies(RegExp);\n\n  var inverseEpsilon = 1 / Number.EPSILON;\n  var roundTiesToEven = function roundTiesToEven(n) {\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n    return (n + inverseEpsilon) - inverseEpsilon;\n  };\n  var BINARY_32_EPSILON = Math.pow(2, -23);\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n  var numberCLZ = Number.prototype.clz;\n  delete Number.prototype.clz; // Safari 8 has Number#clz\n\n  var MathShims = {\n    acosh: function acosh(value) {\n      var x = Number(value);\n      if (Number.isNaN(x) || value < 1) { return NaN; }\n      if (x === 1) { return 0; }\n      if (x === Infinity) { return x; }\n      return _log(x / Math.E + _sqrt(x + 1) * _sqrt(x - 1) / Math.E) + 1;\n    },\n\n    asinh: function asinh(value) {\n      var x = Number(value);\n      if (x === 0 || !globalIsFinite(x)) {\n        return x;\n      }\n      return x < 0 ? -Math.asinh(-x) : _log(x + _sqrt(x * x + 1));\n    },\n\n    atanh: function atanh(value) {\n      var x = Number(value);\n      if (Number.isNaN(x) || x < -1 || x > 1) {\n        return NaN;\n      }\n      if (x === -1) { return -Infinity; }\n      if (x === 1) { return Infinity; }\n      if (x === 0) { return x; }\n      return 0.5 * _log((1 + x) / (1 - x));\n    },\n\n    cbrt: function cbrt(value) {\n      var x = Number(value);\n      if (x === 0) { return x; }\n      var negate = x < 0, result;\n      if (negate) { x = -x; }\n      if (x === Infinity) {\n        result = Infinity;\n      } else {\n        result = Math.exp(_log(x) / 3);\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n        result = (x / (result * result) + (2 * result)) / 3;\n      }\n      return negate ? -result : result;\n    },\n\n    clz32: function clz32(value) {\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n      var x = Number(value);\n      var number = ES.ToUint32(x);\n      if (number === 0) {\n        return 32;\n      }\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * Math.LOG2E);\n    },\n\n    cosh: function cosh(value) {\n      var x = Number(value);\n      if (x === 0) { return 1; } // +0 or -0\n      if (Number.isNaN(x)) { return NaN; }\n      if (!globalIsFinite(x)) { return Infinity; }\n      if (x < 0) { x = -x; }\n      if (x > 21) { return Math.exp(x) / 2; }\n      return (Math.exp(x) + Math.exp(-x)) / 2;\n    },\n\n    expm1: function expm1(value) {\n      var x = Number(value);\n      if (x === -Infinity) { return -1; }\n      if (!globalIsFinite(x) || x === 0) { return x; }\n      if (_abs(x) > 0.5) {\n        return Math.exp(x) - 1;\n      }\n      // A more precise approximation using Taylor series expansion\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n      var t = x;\n      var sum = 0;\n      var n = 1;\n      while (sum + t !== sum) {\n        sum += t;\n        n += 1;\n        t *= x / n;\n      }\n      return sum;\n    },\n\n    hypot: function hypot(x, y) {\n      var result = 0;\n      var largest = 0;\n      for (var i = 0; i < arguments.length; ++i) {\n        var value = _abs(Number(arguments[i]));\n        if (largest < value) {\n          result *= (largest / value) * (largest / value);\n          result += 1;\n          largest = value;\n        } else {\n          result += (value > 0 ? (value / largest) * (value / largest) : value);\n        }\n      }\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\n    },\n\n    log2: function log2(value) {\n      return _log(value) * Math.LOG2E;\n    },\n\n    log10: function log10(value) {\n      return _log(value) * Math.LOG10E;\n    },\n\n    log1p: function log1p(value) {\n      var x = Number(value);\n      if (x < -1 || Number.isNaN(x)) { return NaN; }\n      if (x === 0 || x === Infinity) { return x; }\n      if (x === -1) { return -Infinity; }\n\n      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n    },\n\n    sign: function sign(value) {\n      var number = Number(value);\n      if (number === 0) { return number; }\n      if (Number.isNaN(number)) { return number; }\n      return number < 0 ? -1 : 1;\n    },\n\n    sinh: function sinh(value) {\n      var x = Number(value);\n      if (!globalIsFinite(x) || x === 0) { return x; }\n\n      if (_abs(x) < 1) {\n        return (Math.expm1(x) - Math.expm1(-x)) / 2;\n      }\n      return (Math.exp(x - 1) - Math.exp(-x - 1)) * Math.E / 2;\n    },\n\n    tanh: function tanh(value) {\n      var x = Number(value);\n      if (Number.isNaN(x) || x === 0) { return x; }\n      // can exit early at +-20 as JS loses precision for true value at this integer\n      if (x >= 20) { return 1; }\n      if (x <= -20) { return -1; }\n      var a = Math.expm1(x);\n      var b = Math.expm1(-x);\n      if (a === Infinity) { return 1; }\n      if (b === Infinity) { return -1; }\n      return (a - b) / (Math.exp(x) + Math.exp(-x));\n    },\n\n    trunc: function trunc(value) {\n      var x = Number(value);\n      return x < 0 ? -_floor(-x) : _floor(x);\n    },\n\n    imul: function imul(x, y) {\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n      var a = ES.ToUint32(x);\n      var b = ES.ToUint32(y);\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n    },\n\n    fround: function fround(x) {\n      var v = Number(x);\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n        return v;\n      }\n      var sign = Math.sign(v);\n      var abs = _abs(v);\n      if (abs < BINARY_32_MIN_VALUE) {\n        return sign * roundTiesToEven(abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n      }\n      // Veltkamp's splitting (?)\n      var a = (1 + BINARY_32_EPSILON / Number.EPSILON) * abs;\n      var result = a - (a - abs);\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n        return sign * Infinity;\n      }\n      return sign * result;\n    }\n  };\n  defineProperties(Math, MathShims);\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n  // Chrome 40 loses Math.acosh precision with high numbers\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n  // Firefox 38 on Windows\n  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - Math.cbrt(1e-300) / 1e-100) / Number.EPSILON > 8);\n  // node 0.11 has an imprecise Math.sinh with very small numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n  var expm1OfTen = Math.expm1(10);\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n\n  var origMathRound = Math.round;\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n  var roundHandlesBoundaryConditions = Math.round(0.5 - Number.EPSILON / 4) === 0 && Math.round(-0.5 + Number.EPSILON / 3.99) === 1;\n\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n  // This behavior should be governed by \"round to nearest, ties to even mode\"\n  // see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-number-type\n  // These are the boundary cases where it breaks.\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n  var largestPositiveNumberWhereRoundBreaks = 2 * inverseEpsilon - 1;\n  var roundDoesNotIncreaseIntegers = [smallestPositiveNumberWhereRoundBreaks, largestPositiveNumberWhereRoundBreaks].every(function (num) {\n    return Math.round(num) === num;\n  });\n  defineProperty(Math, 'round', function round(x) {\n    var floor = _floor(x);\n    var ceil = floor === -1 ? -0 : floor + 1;\n    return x - floor < 0.5 ? floor : ceil;\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n  Value.preserveToString(Math.round, origMathRound);\n\n  var origImul = Math.imul;\n  if (Math.imul(0xffffffff, 5) !== -5) {\n    // Safari 6.1, at least, reports \"0\" for this value\n    Math.imul = MathShims.imul;\n    Value.preserveToString(Math.imul, origImul);\n  }\n  if (Math.imul.length !== 2) {\n    // Safari 8.0.4 has a length of 1\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n    overrideNative(Math, 'imul', function imul(x, y) {\n      return ES.Call(origImul, Math, arguments);\n    });\n  }\n\n  // Promises\n  // Simplest possible implementation; use a 3rd-party library if you\n  // want the best possible speed and/or long stack traces.\n  var PromiseShim = (function () {\n    var setTimeout = globals.setTimeout;\n    // some environments don't have setTimeout - no way to shim here.\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\n    ES.IsPromise = function (promise) {\n      if (!ES.TypeIsObject(promise)) {\n        return false;\n      }\n      if (typeof promise._promise === 'undefined') {\n        return false; // uninitialized, or missing our hidden field.\n      }\n      return true;\n    };\n\n    // \"PromiseCapability\" in the spec is what most promise implementations\n    // call a \"deferred\".\n    var PromiseCapability = function (C) {\n      if (!ES.IsConstructor(C)) {\n        throw new TypeError('Bad promise constructor');\n      }\n      var capability = this;\n      var resolver = function (resolve, reject) {\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n          throw new TypeError('Bad Promise implementation!');\n        }\n        capability.resolve = resolve;\n        capability.reject = reject;\n      };\n      // Initialize fields to inform optimizers about the object shape.\n      capability.resolve = void 0;\n      capability.reject = void 0;\n      capability.promise = new C(resolver);\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n        throw new TypeError('Bad promise constructor');\n      }\n    };\n\n    // find an appropriate setImmediate-alike\n    var makeZeroTimeout;\n    /*global window */\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n      makeZeroTimeout = function () {\n        // from http://dbaron.org/log/20100309-faster-timeouts\n        var timeouts = [];\n        var messageName = 'zero-timeout-message';\n        var setZeroTimeout = function (fn) {\n          _push(timeouts, fn);\n          window.postMessage(messageName, '*');\n        };\n        var handleMessage = function (event) {\n          if (event.source === window && event.data === messageName) {\n            event.stopPropagation();\n            if (timeouts.length === 0) { return; }\n            var fn = _shift(timeouts);\n            fn();\n          }\n        };\n        window.addEventListener('message', handleMessage, true);\n        return setZeroTimeout;\n      };\n    }\n    var makePromiseAsap = function () {\n      // An efficient task-scheduler based on a pre-existing Promise\n      // implementation, which we can use even if we override the\n      // global Promise below (in order to workaround bugs)\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n      var P = globals.Promise;\n      var pr = P && P.resolve && P.resolve();\n      return pr && function (task) {\n        return pr.then(task);\n      };\n    };\n    /*global process */\n    /* jscs:disable disallowMultiLineTernary */\n    var enqueue = ES.IsCallable(globals.setImmediate) ?\n      globals.setImmediate :\n      typeof process === 'object' && process.nextTick ? process.nextTick :\n      makePromiseAsap() ||\n      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\n      function (task) { setTimeout(task, 0); }); // fallback\n    /* jscs:enable disallowMultiLineTernary */\n\n    // Constants for Promise implementation\n    var PROMISE_IDENTITY = function (x) { return x; };\n    var PROMISE_THROWER = function (e) { throw e; };\n    var PROMISE_PENDING = 0;\n    var PROMISE_FULFILLED = 1;\n    var PROMISE_REJECTED = 2;\n    // We store fulfill/reject handlers and capabilities in a single array.\n    var PROMISE_FULFILL_OFFSET = 0;\n    var PROMISE_REJECT_OFFSET = 1;\n    var PROMISE_CAPABILITY_OFFSET = 2;\n    // This is used in an optimization for chaining promises via then.\n    var PROMISE_FAKE_CAPABILITY = {};\n\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n      enqueue(function () {\n        promiseReactionJob(handler, capability, argument);\n      });\n    };\n\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\n      var handlerResult, f;\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n        // Fast case, when we don't actually need to chain through to a\n        // (real) promiseCapability.\n        return handler(argument);\n      }\n      try {\n        handlerResult = handler(argument);\n        f = promiseCapability.resolve;\n      } catch (e) {\n        handlerResult = e;\n        f = promiseCapability.reject;\n      }\n      f(handlerResult);\n    };\n\n    var fulfillPromise = function (promise, value) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.fulfillReactionHandler0,\n          _promise.reactionCapability0,\n          value\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_FULFILL_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              value\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = value;\n      _promise.state = PROMISE_FULFILLED;\n      _promise.reactionLength = 0;\n    };\n\n    var rejectPromise = function (promise, reason) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.rejectReactionHandler0,\n          _promise.reactionCapability0,\n          reason\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_REJECT_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              reason\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = reason;\n      _promise.state = PROMISE_REJECTED;\n      _promise.reactionLength = 0;\n    };\n\n    var createResolvingFunctions = function (promise) {\n      var alreadyResolved = false;\n      var resolve = function (resolution) {\n        var then;\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        if (resolution === promise) {\n          return rejectPromise(promise, new TypeError('Self resolution'));\n        }\n        if (!ES.TypeIsObject(resolution)) {\n          return fulfillPromise(promise, resolution);\n        }\n        try {\n          then = resolution.then;\n        } catch (e) {\n          return rejectPromise(promise, e);\n        }\n        if (!ES.IsCallable(then)) {\n          return fulfillPromise(promise, resolution);\n        }\n        enqueue(function () {\n          promiseResolveThenableJob(promise, resolution, then);\n        });\n      };\n      var reject = function (reason) {\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        return rejectPromise(promise, reason);\n      };\n      return { resolve: resolve, reject: reject };\n    };\n\n    var optimizedThen = function (then, thenable, resolve, reject) {\n      // Optimization: since we discard the result, we can pass our\n      // own then implementation a special hint to let it know it\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n      // object is local to this implementation and unforgeable outside.)\n      if (then === Promise$prototype$then) {\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n      } else {\n        _call(then, thenable, resolve, reject);\n      }\n    };\n    var promiseResolveThenableJob = function (promise, thenable, then) {\n      var resolvingFunctions = createResolvingFunctions(promise);\n      var resolve = resolvingFunctions.resolve;\n      var reject = resolvingFunctions.reject;\n      try {\n        optimizedThen(then, thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var Promise$prototype, Promise$prototype$then;\n    var Promise = (function () {\n      var PromiseShim = function Promise(resolver) {\n        if (!(this instanceof PromiseShim)) {\n          throw new TypeError('Constructor Promise requires \"new\"');\n        }\n        if (this && this._promise) {\n          throw new TypeError('Bad construction');\n        }\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n        if (!ES.IsCallable(resolver)) {\n          throw new TypeError('not a valid resolver');\n        }\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n          _promise: {\n            result: void 0,\n            state: PROMISE_PENDING,\n            // The first member of the \"reactions\" array is inlined here,\n            // since most promises only have one reaction.\n            // We've also exploded the 'reaction' object to inline the\n            // \"handler\" and \"capability\" fields, since both fulfill and\n            // reject reactions share the same capability.\n            reactionLength: 0,\n            fulfillReactionHandler0: void 0,\n            rejectReactionHandler0: void 0,\n            reactionCapability0: void 0\n          }\n        });\n        var resolvingFunctions = createResolvingFunctions(promise);\n        var reject = resolvingFunctions.reject;\n        try {\n          resolver(resolvingFunctions.resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        return promise;\n      };\n      return PromiseShim;\n    }());\n    Promise$prototype = Promise.prototype;\n\n    var _promiseAllResolver = function (index, values, capability, remaining) {\n      var alreadyCalled = false;\n      return function (x) {\n        if (alreadyCalled) { return; }\n        alreadyCalled = true;\n        values[index] = x;\n        if ((--remaining.count) === 0) {\n          var resolve = capability.resolve;\n          resolve(values); // call w/ this===undefined\n        }\n      };\n    };\n\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var values = [], remaining = { count: 1 }, next, nextValue;\n      var index = 0;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        values[index] = void 0;\n        var nextPromise = C.resolve(nextValue);\n        var resolveElement = _promiseAllResolver(\n          index, values, resultCapability, remaining\n        );\n        remaining.count += 1;\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n        index += 1;\n      }\n      if ((--remaining.count) === 0) {\n        var resolve = resultCapability.resolve;\n        resolve(values); // call w/ this===undefined\n      }\n      return resultCapability.promise;\n    };\n\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator, next, nextValue, nextPromise;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            // NOTE: If iterable has no items, resulting promise will never\n            // resolve; see:\n            // https://github.com/domenic/promises-unwrapping/issues/75\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        nextPromise = C.resolve(nextValue);\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n      }\n      return resultCapability.promise;\n    };\n\n    defineProperties(Promise, {\n      all: function all(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseAll(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      race: function race(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseRace(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      reject: function reject(reason) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        var capability = new PromiseCapability(C);\n        var rejectFunc = capability.reject;\n        rejectFunc(reason); // call with this===undefined\n        return capability.promise;\n      },\n\n      resolve: function resolve(v) {\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        if (ES.IsPromise(v)) {\n          var constructor = v.constructor;\n          if (constructor === C) { return v; }\n        }\n        var capability = new PromiseCapability(C);\n        var resolveFunc = capability.resolve;\n        resolveFunc(v); // call with this===undefined\n        return capability.promise;\n      }\n    });\n\n    defineProperties(Promise$prototype, {\n      'catch': function (onRejected) {\n        return this.then(null, onRejected);\n      },\n\n      then: function then(onFulfilled, onRejected) {\n        var promise = this;\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n        var C = ES.SpeciesConstructor(promise, Promise);\n        var resultCapability;\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n        if (returnValueIsIgnored && C === Promise) {\n          resultCapability = PROMISE_FAKE_CAPABILITY;\n        } else {\n          resultCapability = new PromiseCapability(C);\n        }\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n        // Note that we've split the 'reaction' object into its two\n        // components, \"capabilities\" and \"handler\"\n        // \"capabilities\" is always equal to `resultCapability`\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n        var _promise = promise._promise;\n        var value;\n        if (_promise.state === PROMISE_PENDING) {\n          if (_promise.reactionLength === 0) {\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\n            _promise.reactionCapability0 = resultCapability;\n          } else {\n            var idx = 3 * (_promise.reactionLength - 1);\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n          }\n          _promise.reactionLength += 1;\n        } else if (_promise.state === PROMISE_FULFILLED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            fulfillReactionHandler, resultCapability, value\n          );\n        } else if (_promise.state === PROMISE_REJECTED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            rejectReactionHandler, resultCapability, value\n          );\n        } else {\n          throw new TypeError('unexpected Promise state');\n        }\n        return resultCapability.promise;\n      }\n    });\n    // This helps the optimizer by ensuring that methods which take\n    // capabilities aren't polymorphic.\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n    Promise$prototype$then = Promise$prototype.then;\n\n    return Promise;\n  }());\n\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n  if (globals.Promise) {\n    delete globals.Promise.accept;\n    delete globals.Promise.defer;\n    delete globals.Promise.prototype.chain;\n  }\n\n  if (typeof PromiseShim === 'function') {\n    // export the Promise constructor.\n    defineProperties(globals, { Promise: PromiseShim });\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\n    // implementation is buggy in a number of ways.  Let's check subclassing\n    // support to see if we have a buggy implementation.\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n      return S.resolve(42).then(function () {}) instanceof S;\n    });\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () { globals.Promise.reject(42).then(null, 5).then(null, noop); });\n    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\n    // Promise.resolve() was errata'ed late in the ES6 process.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n    //      https://code.google.com/p/v8/issues/detail?id=4161\n    // It serves as a proxy for a number of other bugs in early Promise\n    // implementations.\n    var promiseResolveBroken = (function (Promise) {\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) {\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n      }\n      return p === p2; // This *should* be false!\n    }(globals.Promise));\n\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n    var getsThenSynchronously = supportsDescriptors && (function () {\n      var count = 0;\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n      Promise.resolve(thenable);\n      return count === 1;\n    }());\n\n    var BadResolverPromise = function BadResolverPromise(executor) {\n      var p = new Promise(executor);\n      executor(3, function () {});\n      this.then = p.then;\n      this.constructor = BadResolverPromise;\n    };\n    BadResolverPromise.prototype = Promise.prototype;\n    BadResolverPromise.all = Promise.all;\n    // Chrome Canary 49 (probably older too) has some implementation bugs\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n      return !!BadResolverPromise.all([1, 2]);\n    });\n\n    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\n        !promiseRequiresObjectContext || promiseResolveBroken ||\n        !getsThenSynchronously || hasBadResolverPromise) {\n      /* globals Promise: true */\n      /* eslint-disable no-undef */\n      /* jshint -W020 */\n      Promise = PromiseShim;\n      /* jshint +W020 */\n      /* eslint-enable no-undef */\n      /* globals Promise: false */\n      overrideNative(globals, 'Promise', PromiseShim);\n    }\n    if (Promise.all.length !== 1) {\n      var origAll = Promise.all;\n      overrideNative(Promise, 'all', function all(iterable) {\n        return ES.Call(origAll, this, arguments);\n      });\n    }\n    if (Promise.race.length !== 1) {\n      var origRace = Promise.race;\n      overrideNative(Promise, 'race', function race(iterable) {\n        return ES.Call(origRace, this, arguments);\n      });\n    }\n    if (Promise.resolve.length !== 1) {\n      var origResolve = Promise.resolve;\n      overrideNative(Promise, 'resolve', function resolve(x) {\n        return ES.Call(origResolve, this, arguments);\n      });\n    }\n    if (Promise.reject.length !== 1) {\n      var origReject = Promise.reject;\n      overrideNative(Promise, 'reject', function reject(r) {\n        return ES.Call(origReject, this, arguments);\n      });\n    }\n    ensureEnumerable(Promise, 'all');\n    ensureEnumerable(Promise, 'race');\n    ensureEnumerable(Promise, 'resolve');\n    ensureEnumerable(Promise, 'reject');\n    addDefaultSpecies(Promise);\n  }\n\n  // Map and Set require a true ES5 environment\n  // Their fast path also requires that the environment preserve\n  // property insertion order, which is not guaranteed by the spec.\n  var testOrder = function (a) {\n    var b = keys(_reduce(a, function (o, k) {\n      o[k] = true;\n      return o;\n    }, {}));\n    return a.join(':') === b.join(':');\n  };\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n  // some engines (eg, Chrome) only preserve insertion order for string keys\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\n  if (supportsDescriptors) {\n\n    var fastkey = function fastkey(key) {\n      if (!preservesInsertionOrder) {\n        return null;\n      }\n      if (typeof key === 'undefined' || key === null) {\n        return '^' + ES.ToString(key);\n      } else if (typeof key === 'string') {\n        return '$' + key;\n      } else if (typeof key === 'number') {\n        // note that -0 will get coerced to \"0\" when used as a property key\n        if (!preservesNumericInsertionOrder) {\n          return 'n' + key;\n        }\n        return key;\n      } else if (typeof key === 'boolean') {\n        return 'b' + key;\n      }\n      return null;\n    };\n\n    var emptyObject = function emptyObject() {\n      // accomodate some older not-quite-ES5 browsers\n      return Object.create ? Object.create(null) : {};\n    };\n\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (entry) {\n          if (!ES.TypeIsObject(entry)) {\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n          }\n          map.set(entry[0], entry[1]);\n        });\n      } else if (iterable instanceof MapConstructor) {\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n          map.set(key, value);\n        });\n      } else {\n        var iter, adder;\n        if (iterable !== null && typeof iterable !== 'undefined') {\n          adder = map.set;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextItem = next.value;\n            try {\n              if (!ES.TypeIsObject(nextItem)) {\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n              }\n              _call(adder, map, nextItem[0], nextItem[1]);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (value) {\n          set.add(value);\n        });\n      } else if (iterable instanceof SetConstructor) {\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n          set.add(value);\n        });\n      } else {\n        var iter, adder;\n        if (iterable !== null && typeof iterable !== 'undefined') {\n          adder = set.add;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextValue = next.value;\n            try {\n              _call(adder, set, nextValue);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    var collectionShims = {\n      Map: (function () {\n\n        var empty = {};\n\n        var MapEntry = function MapEntry(key, value) {\n          this.key = key;\n          this.value = value;\n          this.next = null;\n          this.prev = null;\n        };\n\n        MapEntry.prototype.isRemoved = function isRemoved() {\n          return this.key === empty;\n        };\n\n        var isMap = function isMap(map) {\n          return !!map._es6map;\n        };\n\n        var requireMapSlot = function requireMapSlot(map, method) {\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n          }\n        };\n\n        var MapIterator = function MapIterator(map, kind) {\n          requireMapSlot(map, '[[MapIterator]]');\n          this.head = map._head;\n          this.i = this.head;\n          this.kind = kind;\n        };\n\n        MapIterator.prototype = {\n          next: function next() {\n            var i = this.i, kind = this.kind, head = this.head, result;\n            if (typeof this.i === 'undefined') {\n              return { value: void 0, done: true };\n            }\n            while (i.isRemoved() && i !== head) {\n              // back up off of removed entries\n              i = i.prev;\n            }\n            // advance to next unreturned element.\n            while (i.next !== head) {\n              i = i.next;\n              if (!i.isRemoved()) {\n                if (kind === 'key') {\n                  result = i.key;\n                } else if (kind === 'value') {\n                  result = i.value;\n                } else {\n                  result = [i.key, i.value];\n                }\n                this.i = i;\n                return { value: result, done: false };\n              }\n            }\n            // once the iterator is done, it is done forever.\n            this.i = void 0;\n            return { value: void 0, done: true };\n          }\n        };\n        addIterator(MapIterator.prototype);\n\n        var Map$prototype;\n        var MapShim = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          if (this && this._es6map) {\n            throw new TypeError('Bad construction');\n          }\n          var map = emulateES6construct(this, Map, Map$prototype, {\n            _es6map: true,\n            _head: null,\n            _storage: emptyObject(),\n            _size: 0\n          });\n\n          var head = new MapEntry(null, null);\n          // circular doubly-linked list.\n          head.next = head.prev = head;\n          map._head = head;\n\n          // Optionally initialize map from iterable\n          if (arguments.length > 0) {\n            addIterableToMap(Map, map, arguments[0]);\n          }\n          return map;\n        };\n        Map$prototype = MapShim.prototype;\n\n        Value.getter(Map$prototype, 'size', function () {\n          if (typeof this._size === 'undefined') {\n            throw new TypeError('size method called on incompatible Map');\n          }\n          return this._size;\n        });\n\n        defineProperties(Map$prototype, {\n          get: function get(key) {\n            requireMapSlot(this, 'get');\n            var fkey = fastkey(key);\n            if (fkey !== null) {\n              // fast O(1) path\n              var entry = this._storage[fkey];\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            var head = this._head, i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return i.value;\n              }\n            }\n          },\n\n          has: function has(key) {\n            requireMapSlot(this, 'has');\n            var fkey = fastkey(key);\n            if (fkey !== null) {\n              // fast O(1) path\n              return typeof this._storage[fkey] !== 'undefined';\n            }\n            var head = this._head, i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return true;\n              }\n            }\n            return false;\n          },\n\n          set: function set(key, value) {\n            requireMapSlot(this, 'set');\n            var head = this._head, i = head, entry;\n            var fkey = fastkey(key);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] !== 'undefined') {\n                this._storage[fkey].value = value;\n                return this;\n              } else {\n                entry = this._storage[fkey] = new MapEntry(key, value);\n                i = head.prev;\n                // fall through\n              }\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.value = value;\n                return this;\n              }\n            }\n            entry = entry || new MapEntry(key, value);\n            if (ES.SameValue(-0, key)) {\n              entry.key = +0; // coerce -0 to +0 in entry\n            }\n            entry.next = this._head;\n            entry.prev = this._head.prev;\n            entry.prev.next = entry;\n            entry.next.prev = entry;\n            this._size += 1;\n            return this;\n          },\n\n          'delete': function (key) {\n            requireMapSlot(this, 'delete');\n            var head = this._head, i = head;\n            var fkey = fastkey(key);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] === 'undefined') {\n                return false;\n              }\n              i = this._storage[fkey].prev;\n              delete this._storage[fkey];\n              // fall through\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.key = i.value = empty;\n                i.prev.next = i.next;\n                i.next.prev = i.prev;\n                this._size -= 1;\n                return true;\n              }\n            }\n            return false;\n          },\n\n          clear: function clear() {\n            requireMapSlot(this, 'clear');\n            this._size = 0;\n            this._storage = emptyObject();\n            var head = this._head, i = head, p = i.next;\n            while ((i = p) !== head) {\n              i.key = i.value = empty;\n              p = i.next;\n              i.next = i.prev = head;\n            }\n            head.next = head.prev = head;\n          },\n\n          keys: function keys() {\n            requireMapSlot(this, 'keys');\n            return new MapIterator(this, 'key');\n          },\n\n          values: function values() {\n            requireMapSlot(this, 'values');\n            return new MapIterator(this, 'value');\n          },\n\n          entries: function entries() {\n            requireMapSlot(this, 'entries');\n            return new MapIterator(this, 'key+value');\n          },\n\n          forEach: function forEach(callback) {\n            requireMapSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var it = this.entries();\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\n              if (context) {\n                _call(callback, context, entry.value[1], entry.value[0], this);\n              } else {\n                callback(entry.value[1], entry.value[0], this);\n              }\n            }\n          }\n        });\n        addIterator(Map$prototype, Map$prototype.entries);\n\n        return MapShim;\n      }()),\n\n      Set: (function () {\n        var isSet = function isSet(set) {\n          return set._es6set && typeof set._storage !== 'undefined';\n        };\n        var requireSetSlot = function requireSetSlot(set, method) {\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\n            // https://github.com/paulmillr/es6-shim/issues/176\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n          }\n        };\n\n        // Creating a Map is expensive.  To speed up the common case of\n        // Sets containing only string or numeric keys, we use an object\n        // as backing storage and lazily create a full Map only when\n        // required.\n        var Set$prototype;\n        var SetShim = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          if (this && this._es6set) {\n            throw new TypeError('Bad construction');\n          }\n          var set = emulateES6construct(this, Set, Set$prototype, {\n            _es6set: true,\n            '[[SetData]]': null,\n            _storage: emptyObject()\n          });\n          if (!set._es6set) {\n            throw new TypeError('bad set');\n          }\n\n          // Optionally initialize Set from iterable\n          if (arguments.length > 0) {\n            addIterableToSet(Set, set, arguments[0]);\n          }\n          return set;\n        };\n        Set$prototype = SetShim.prototype;\n\n        var decodeKey = function (key) {\n          var k = key;\n          if (k === '^null') {\n            return null;\n          } else if (k === '^undefined') {\n            return void 0;\n          } else {\n            var first = k.charAt(0);\n            if (first === '$') {\n              return _strSlice(k, 1);\n            } else if (first === 'n') {\n              return +_strSlice(k, 1);\n            } else if (first === 'b') {\n              return k === 'btrue';\n            }\n          }\n          return +k;\n        };\n        // Switch from the object backing storage to a full Map.\n        var ensureMap = function ensureMap(set) {\n          if (!set['[[SetData]]']) {\n            var m = set['[[SetData]]'] = new collectionShims.Map();\n            _forEach(keys(set._storage), function (key) {\n              var k = decodeKey(key);\n              m.set(k, k);\n            });\n            set['[[SetData]]'] = m;\n          }\n          set._storage = null; // free old backing storage\n        };\n\n        Value.getter(SetShim.prototype, 'size', function () {\n          requireSetSlot(this, 'size');\n          if (this._storage) {\n            return keys(this._storage).length;\n          }\n          ensureMap(this);\n          return this['[[SetData]]'].size;\n        });\n\n        defineProperties(SetShim.prototype, {\n          has: function has(key) {\n            requireSetSlot(this, 'has');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              return !!this._storage[fkey];\n            }\n            ensureMap(this);\n            return this['[[SetData]]'].has(key);\n          },\n\n          add: function add(key) {\n            requireSetSlot(this, 'add');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              this._storage[fkey] = true;\n              return this;\n            }\n            ensureMap(this);\n            this['[[SetData]]'].set(key, key);\n            return this;\n          },\n\n          'delete': function (key) {\n            requireSetSlot(this, 'delete');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\n              return (delete this._storage[fkey]) && hasFKey;\n            }\n            ensureMap(this);\n            return this['[[SetData]]']['delete'](key);\n          },\n\n          clear: function clear() {\n            requireSetSlot(this, 'clear');\n            if (this._storage) {\n              this._storage = emptyObject();\n            }\n            if (this['[[SetData]]']) {\n              this['[[SetData]]'].clear();\n            }\n          },\n\n          values: function values() {\n            requireSetSlot(this, 'values');\n            ensureMap(this);\n            return this['[[SetData]]'].values();\n          },\n\n          entries: function entries() {\n            requireSetSlot(this, 'entries');\n            ensureMap(this);\n            return this['[[SetData]]'].entries();\n          },\n\n          forEach: function forEach(callback) {\n            requireSetSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var entireSet = this;\n            ensureMap(entireSet);\n            this['[[SetData]]'].forEach(function (value, key) {\n              if (context) {\n                _call(callback, context, key, key, entireSet);\n              } else {\n                callback(key, key, entireSet);\n              }\n            });\n          }\n        });\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n        addIterator(SetShim.prototype, SetShim.prototype.values);\n\n        return SetShim;\n      }())\n    };\n\n    if (globals.Map || globals.Set) {\n      // Safari 8, for example, doesn't accept an iterable.\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n      if (!mapAcceptsArguments) {\n        var OrigMapNoArgs = globals.Map;\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMapNoArgs();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, globals.Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = create(OrigMapNoArgs.prototype);\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMapNoArgs);\n      }\n      var testMap = new Map();\n      var mapUsesSameValueZero = (function () {\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n        m.set(-0, m);\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n      }());\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n        var origMapSet = Map.prototype.set;\n        overrideNative(Map.prototype, 'set', function set(k, v) {\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\n          return this;\n        });\n      }\n      if (!mapUsesSameValueZero) {\n        var origMapGet = Map.prototype.get;\n        var origMapHas = Map.prototype.has;\n        defineProperties(Map.prototype, {\n          get: function get(k) {\n            return _call(origMapGet, this, k === 0 ? 0 : k);\n          },\n          has: function has(k) {\n            return _call(origMapHas, this, k === 0 ? 0 : k);\n          }\n        }, true);\n        Value.preserveToString(Map.prototype.get, origMapGet);\n        Value.preserveToString(Map.prototype.has, origMapHas);\n      }\n      var testSet = new Set();\n      var setUsesSameValueZero = (function (s) {\n        s['delete'](0);\n        s.add(-0);\n        return !s.has(0);\n      }(testSet));\n      var setSupportsChaining = testSet.add(1) === testSet;\n      if (!setUsesSameValueZero || !setSupportsChaining) {\n        var origSetAdd = Set.prototype.add;\n        Set.prototype.add = function add(v) {\n          _call(origSetAdd, this, v === 0 ? 0 : v);\n          return this;\n        };\n        Value.preserveToString(Set.prototype.add, origSetAdd);\n      }\n      if (!setUsesSameValueZero) {\n        var origSetHas = Set.prototype.has;\n        Set.prototype.has = function has(v) {\n          return _call(origSetHas, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype.has, origSetHas);\n        var origSetDel = Set.prototype['delete'];\n        Set.prototype['delete'] = function SetDelete(v) {\n          return _call(origSetDel, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\n      }\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n        var m = new M([]);\n        // Firefox 32 is ok with the instantiating the subclass but will\n        // throw when the map is used.\n        m.set(42, 42);\n        return m instanceof M;\n      });\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing; // without Object.setPrototypeOf, subclassing is not possible\n      var mapRequiresNew = (function () {\n        try {\n          return !(globals.Map() instanceof globals.Map);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n        var OrigMap = globals.Map;\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = OrigMap.prototype;\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n        var s = new S([]);\n        s.add(42, 42);\n        return s instanceof S;\n      });\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing; // without Object.setPrototypeOf, subclassing is not possible\n      var setRequiresNew = (function () {\n        try {\n          return !(globals.Set() instanceof globals.Set);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n        var OrigSet = globals.Set;\n        globals.Set = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          var s = new OrigSet();\n          if (arguments.length > 0) {\n            addIterableToSet(Set, s, arguments[0]);\n          }\n          delete s.constructor;\n          Object.setPrototypeOf(s, Set.prototype);\n          return s;\n        };\n        globals.Set.prototype = OrigSet.prototype;\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n        Value.preserveToString(globals.Set, OrigSet);\n      }\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n        return (new Map()).keys().next().done;\n      });\n      /*\n        - In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"\n      */\n      if (\n        typeof globals.Map.prototype.clear !== 'function' ||\n        new globals.Set().size !== 0 ||\n        new globals.Map().size !== 0 ||\n        typeof globals.Map.prototype.keys !== 'function' ||\n        typeof globals.Set.prototype.keys !== 'function' ||\n        typeof globals.Map.prototype.forEach !== 'function' ||\n        typeof globals.Set.prototype.forEach !== 'function' ||\n        isCallableWithoutNew(globals.Map) ||\n        isCallableWithoutNew(globals.Set) ||\n        typeof (new globals.Map().keys().next) !== 'function' || // Safari 8\n        mapIterationThrowsStopIterator || // Firefox 25\n        !mapSupportsSubclassing\n      ) {\n        defineProperties(globals, {\n          Map: collectionShims.Map,\n          Set: collectionShims.Set\n        }, true);\n      }\n\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n      }\n\n      // Shim incomplete iterator implementations.\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n        var anonymousSetHas = globals.Set.prototype.has;\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\n          return _call(anonymousSetHas, this, key);\n        });\n      }\n    }\n    defineProperties(globals, collectionShims);\n    addDefaultSpecies(globals.Map);\n    addDefaultSpecies(globals.Set);\n  }\n\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n    if (!ES.TypeIsObject(target)) {\n      throw new TypeError('target must be an object');\n    }\n  };\n\n  // Some Reflect methods are basically the same as\n  // those on the Object global, except that a TypeError is thrown if\n  // target isn't an object. As well as returning a boolean indicating\n  // the success of the operation.\n  var ReflectShims = {\n    // Apply method in a functional form.\n    apply: function apply() {\n      return ES.Call(ES.Call, null, arguments);\n    },\n\n    // New operator in a functional form.\n    construct: function construct(constructor, args) {\n      if (!ES.IsConstructor(constructor)) {\n        throw new TypeError('First argument must be a constructor.');\n      }\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n      if (!ES.IsConstructor(newTarget)) {\n        throw new TypeError('new.target must be a constructor.');\n      }\n      return ES.Construct(constructor, args, newTarget, 'internal');\n    },\n\n    // When deleting a non-existent or configurable property,\n    // true is returned.\n    // When attempting to delete a non-configurable property,\n    // it will return false.\n    deleteProperty: function deleteProperty(target, key) {\n      throwUnlessTargetIsObject(target);\n      if (supportsDescriptors) {\n        var desc = Object.getOwnPropertyDescriptor(target, key);\n\n        if (desc && !desc.configurable) {\n          return false;\n        }\n      }\n\n      // Will return true.\n      return delete target[key];\n    },\n\n    has: function has(target, key) {\n      throwUnlessTargetIsObject(target);\n      return key in target;\n    }\n  };\n\n  if (Object.getOwnPropertyNames) {\n    Object.assign(ReflectShims, {\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\n      // Concatenating propertyNames and propertySymbols should do the trick.\n      // This should continue to work together with a Symbol shim\n      // which overrides Object.getOwnPropertyNames and implements\n      // Object.getOwnPropertySymbols.\n      ownKeys: function ownKeys(target) {\n        throwUnlessTargetIsObject(target);\n        var keys = Object.getOwnPropertyNames(target);\n\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\n        }\n\n        return keys;\n      }\n    });\n  }\n\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n    return !throwsError(func);\n  };\n\n  if (Object.preventExtensions) {\n    Object.assign(ReflectShims, {\n      isExtensible: function isExtensible(target) {\n        throwUnlessTargetIsObject(target);\n        return Object.isExtensible(target);\n      },\n      preventExtensions: function preventExtensions(target) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.preventExtensions(target);\n        });\n      }\n    });\n  }\n\n  if (supportsDescriptors) {\n    var internalGet = function get(target, key, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent === null) {\n          return void 0;\n        }\n\n        return internalGet(parent, key, receiver);\n      }\n\n      if ('value' in desc) {\n        return desc.value;\n      }\n\n      if (desc.get) {\n        return ES.Call(desc.get, receiver);\n      }\n\n      return void 0;\n    };\n\n    var internalSet = function set(target, key, value, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return internalSet(parent, key, value, receiver);\n        }\n\n        desc = {\n          value: void 0,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        };\n      }\n\n      if ('value' in desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        if (!ES.TypeIsObject(receiver)) {\n          return false;\n        }\n\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\n        if (existingDesc) {\n          return Reflect.defineProperty(receiver, key, {\n            value: value\n          });\n        } else {\n          return Reflect.defineProperty(receiver, key, {\n            value: value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n\n      if (desc.set) {\n        _call(desc.set, receiver, value);\n        return true;\n      }\n\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.defineProperty(target, propertyKey, attributes);\n        });\n      },\n\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n        throwUnlessTargetIsObject(target);\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\n      },\n\n      // Syntax in a functional form.\n      get: function get(target, key) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 2 ? arguments[2] : target;\n\n        return internalGet(target, key, receiver);\n      },\n\n      set: function set(target, key, value) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 3 ? arguments[3] : target;\n\n        return internalSet(target, key, value, receiver);\n      }\n    });\n  }\n\n  if (Object.getPrototypeOf) {\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n      throwUnlessTargetIsObject(target);\n      return objectDotGetPrototypeOf(target);\n    };\n  }\n\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n    var willCreateCircularPrototype = function (object, lastProto) {\n      var proto = lastProto;\n      while (proto) {\n        if (object === proto) {\n          return true;\n        }\n        proto = ReflectShims.getPrototypeOf(proto);\n      }\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      // Sets the prototype of the given object.\n      // Returns true on success, otherwise false.\n      setPrototypeOf: function setPrototypeOf(object, proto) {\n        throwUnlessTargetIsObject(object);\n        if (proto !== null && !ES.TypeIsObject(proto)) {\n          throw new TypeError('proto must be an object or null');\n        }\n\n        // If they already are the same, we're done.\n        if (proto === Reflect.getPrototypeOf(object)) {\n          return true;\n        }\n\n        // Cannot alter prototype if object not extensible.\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n          return false;\n        }\n\n        // Ensure that we do not create a circular prototype chain.\n        if (willCreateCircularPrototype(object, proto)) {\n          return false;\n        }\n\n        Object.setPrototypeOf(object, proto);\n\n        return true;\n      }\n    });\n  }\n  var defineOrOverrideReflectProperty = function (key, shim) {\n    if (!ES.IsCallable(globals.Reflect[key])) {\n      defineProperty(globals.Reflect, key, shim);\n    } else {\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n        globals.Reflect[key](1);\n        globals.Reflect[key](NaN);\n        globals.Reflect[key](true);\n        return true;\n      });\n      if (acceptsPrimitives) {\n        overrideNative(globals.Reflect, key, shim);\n      }\n    }\n  };\n  Object.keys(ReflectShims).forEach(function (key) {\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n  });\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n      return _call(originalReflectGetProto, globals.Reflect, target);\n    });\n  }\n  if (globals.Reflect.setPrototypeOf) {\n    if (valueOrFalseIfThrows(function () {\n      globals.Reflect.setPrototypeOf(1, {});\n      return true;\n    })) {\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n    }\n  }\n  if (globals.Reflect.defineProperty) {\n    if (!valueOrFalseIfThrows(function () {\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n      // \"extensible\" fails on Edge 0.12\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n      return basic && extensible;\n    })) {\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n    }\n  }\n  if (globals.Reflect.construct) {\n    if (!valueOrFalseIfThrows(function () {\n      var F = function F() {};\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n    })) {\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n    }\n  }\n\n  if (String(new Date(NaN)) !== 'Invalid Date') {\n    var dateToString = Date.prototype.toString;\n    var shimmedDateToString = function toString() {\n      var valueOf = +this;\n      if (valueOf !== valueOf) {\n        return 'Invalid Date';\n      }\n      return ES.Call(dateToString, this);\n    };\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n  }\n\n  // Annex B HTML methods\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-additional-properties-of-the-string.prototype-object\n  var stringHTMLshims = {\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n  };\n  _forEach(Object.keys(stringHTMLshims), function (key) {\n    var method = String.prototype[key];\n    var shouldOverwrite = false;\n    if (ES.IsCallable(method)) {\n      var output = _call(method, '', ' \" ');\n      var quotesCount = _concat([], output.match(/\"/g)).length;\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n    } else {\n      shouldOverwrite = true;\n    }\n    if (shouldOverwrite) {\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\n    }\n  });\n\n  var JSONstringifiesSymbols = (function () {\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n    if (!hasSymbols) { return false; } // Symbols are not supported\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n    if (!stringify) { return false; } // JSON.stringify is not supported\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n    var obj = { a: Symbol() };\n    obj[Symbol()] = true;\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n    return false;\n  }());\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n    // Chrome 45 throws on stringifying object symbols\n    if (!hasSymbols) { return true; } // Symbols are not supported\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n  });\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n    var origStringify = JSON.stringify;\n    overrideNative(JSON, 'stringify', function stringify(value) {\n      if (typeof value === 'symbol') { return; }\n      var replacer;\n      if (arguments.length > 1) {\n        replacer = arguments[1];\n      }\n      var args = [value];\n      if (!isArray(replacer)) {\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n        var wrappedReplacer = function (key, val) {\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n          if (typeof parsedValue !== 'symbol') {\n            if (Type.symbol(parsedValue)) {\n              return assignTo({})(parsedValue);\n            } else {\n              return parsedValue;\n            }\n          }\n        };\n        args.push(wrappedReplacer);\n      } else {\n        // create wrapped replacer that handles an array replacer?\n        args.push(replacer);\n      }\n      if (arguments.length > 2) {\n        args.push(arguments[2]);\n      }\n      return origStringify.apply(this, args);\n    });\n  }\n\n  return globals;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-shim/es6-shim.js\n ** module id = 470\n ** module chunks = 0 3\n **/"],"sourceRoot":""}